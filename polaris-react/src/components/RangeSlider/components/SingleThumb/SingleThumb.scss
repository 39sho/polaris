@import '../../../../styles/common';
@import '../../RangeSlider';

.SingleThumb {
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  display: flex;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  align-items: center;

  &.disabled {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    opacity: 0.8;
  }
}

.InputWrapper {
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  position: relative;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  display: flex;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  align-items: center;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  flex: 1 1 auto;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  height: var(--pc-range-slider-thumb-size);

  input {
    padding: var(--p-space-3) 0;
    background-color: transparent;
    cursor: pointer;
  }

  &::after {
    @include track-dashed;
  }

  @media #{$p-breakpoints-sm-down} {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    height: 44px;
  }
}

.disabled {
  input {
    cursor: not-allowed;
  }
}

.Prefix {
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  flex: 0 0 auto;
  margin-right: var(--p-space-2);
}

.Suffix {
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  flex: 0 0 auto;
  margin-left: var(--p-space-2);
}

.Input {
  --pc-single-thumb-progress-lower: var(--p-interactive);
  --pc-single-thumb-progress-upper: transparent;
  // create-react-app v2 leverages postcss-preset-env to transpile modern CSS
  // into something kinda supported by older browsers. Unfortunately its
  // custom properties transpiler has a bug that means it doesn't like multiple
  // custom properties inside a linear gradient (but one is OK). Define the
  // gradient color scheme here instead of inline in the below linear-gradient
  // so that we only use one custom-property in the linear-gradient.
  // See https://github.com/Shopify/polaris-react/issues/441 and
  // https://github.com/postcss/postcss-custom-properties/issues/150
  --pc-single-thumb-gradient-colors: var(--pc-single-thumb-progress-lower) 0%,
    var(--pc-single-thumb-progress-lower) var(--pc-range-slider-progress),
    var(--pc-single-thumb-progress-upper) var(--pc-range-slider-progress),
    var(--pc-single-thumb-progress-upper) 100%;

  @mixin rangeSliderThumbPosition($size) {
    margin-top: calc(-1 * (#{$size} - var(--pc-range-slider-track-height)) / 2);
  }

  &::-ms-tooltip {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    display: none;
  }
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  @include unstyled-input;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  position: relative;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  z-index: var(--pc-range-slider-input);
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  flex: 1 1 auto;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  @include range-track-selectors {
    cursor: pointer;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    width: 100%;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    height: var(--pc-range-slider-track-height);
    background-image: linear-gradient(
      to right,
      var(--pc-single-thumb-gradient-colors)
    );
    border: none;
    border-radius: var(--pc-range-slider-track-height);
  }
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  @include range-thumb-selectors {
    // stylelint-disable-next-line value-no-vendor-prefix
    cursor: -webkit-grab;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    width: var(--pc-range-slider-thumb-size);
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    height: var(--pc-range-slider-thumb-size);
    border: var(--p-border-transparent);
    border-radius: var(--p-border-radius-half);
    background: linear-gradient(var(--p-interactive), var(--p-interactive));
    box-shadow: 0 0 0 0 var(--p-focused);
    appearance: none;
    transition: box-shadow var(--p-duration-100) var(--p-ease);
    transition-property: border-color, box-shadow, transform;
    transition-duration: var(--p-duration-200);
    transition-timing-function: var(--p-ease);

    @include rangeSliderThumbPosition(var(--pc-range-slider-thumb-size));

    &:hover {
      background: linear-gradient(var(--p-interactive), var(--p-interactive));
    }
  }

  &::-ms-thumb {
    margin-top: 0;
    transform: translateY(calc(var(--pc-range-slider-thumb-size) * 0.2))
      scale(0.4);
  }

  &::-webkit-slider-thumb {
    margin-top: calc(
      (var(--pc-range-slider-thumb-size) - var(--pc-range-slider-track-height)) *
        -0.5
    );
  }

  &:active {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    @include range-thumb-selectors {
      transform: scale(1.5);
    }
  }

  &:focus {
    outline: var(--p-border-width-1) solid transparent;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    @include range-thumb-selectors {
      border-color: var(--p-surface);
      box-shadow: 0 0 0 var(--p-border-width-2) var(--p-focused);
    }
  }

  .error & {
    --pc-single-thumb-progress-lower: var(--p-action-critical);
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    @include range-thumb-selectors {
      border-color: var(--p-action-critical);
      background: var(--p-action-critical);
    }
  }

  .disabled & {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    @include range-track-selectors {
      cursor: auto;
      background-image: none;
      background-color: var(--p-border-disabled);
    }
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    @include range-thumb-selectors {
      cursor: not-allowed;
      border-color: var(--p-border-disabled);
      background: var(--p-border-disabled);
    }
  }
}

/// Output value indicator
// stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
$range-output-size: 32px;
$range-output-translate-x: calc(
  -50% + var(--pc-range-slider-output-factor) * var(--pc-range-slider-thumb-size)
);

.Output {
  --pc-range-slider-output-spacing: var(--p-space-4);
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  position: absolute;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  z-index: var(--pc-range-slider-output);
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  bottom: var(--pc-range-slider-thumb-size);
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  left: var(--pc-range-slider-progress);
  transform: translateX($range-output-translate-x);
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition-property: opacity, visibility, bottom;
  transition-duration: var(--p-duration-200);
  transition-timing-function: var(--p-ease);

  .Input:active + & {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    $range-thumb-size-difference: var(--p-range-slider-thumb-size-active) -
      var(--p-range-slider-thumb-size-base);
    opacity: 1;
    visibility: visible;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    bottom: calc(
      var(--pc-range-slider-thumb-size) + #{$range-thumb-size-difference}
    );
  }
}

.OutputBubble {
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  position: relative;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  display: flex;
  box-shadow: var(--p-shadow-popover);
  padding: 0 var(--p-space-2);
  min-width: $range-output-size;
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  height: $range-output-size;
  background-color: var(--p-surface);
  // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
  border-radius: var(--p-border-radius-base);
  transition-property: transform;
  transition-duration: var(--p-duration-200);
  transition-timing-function: var(--p-ease);
  outline: var(--p-border-width-1) solid transparent;

  // stylelint-disable selector-max-specificity, selector-max-combinators, selector-max-class
  .Input:hover + .Output &,
  .Input:active + .Output &,
  .Input:focus + .Output & {
    transform: translateY(calc(-1 * var(--pc-range-slider-output-spacing)));

    @media #{$p-breakpoints-md-up} {
      transform: translateY(
        calc(-1 * (var(--pc-range-slider-output-spacing) * 0.4))
      );
    }
  }
  // stylelint-enable selector-max-specificity, selector-max-combinators, selector-max-class

  > :first-child {
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    display: block;
    // stylelint-disable-next-line -- polaris: generated comment during stylelint-polaris init
    flex: 1 1 auto;
    margin: auto;
  }
}

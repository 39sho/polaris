{
  "id": 0,
  "name": "@shopify/polaris",
  "kind": 1,
  "kindString": "Project",
  "flags": {},
  "originalName": "",
  "children": [
    {
      "id": 428,
      "name": "ActionList",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 429,
          "name": "Item",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
              "line": 114,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L114"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 430,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/ActionList/components/Item/Item.tsx",
                  "line": 17,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/components/Item/Item.tsx#L17"
                }
              ],
              "signatures": [
                {
                  "id": 431,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 432,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 239,
                        "name": "ActionListItemDescriptor"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [429]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L27"
        },
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 114,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L114"
        }
      ]
    },
    {
      "id": 573,
      "name": "Autocomplete",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 574,
          "name": "TextField",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 202,
              "character": 13,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L202"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 575,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Combobox/components/TextField/TextField.tsx",
                  "line": 9,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/components/TextField/TextField.tsx#L9"
                }
              ],
              "signatures": [
                {
                  "id": 576,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 577,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 3304,
                        "name": "TextFieldProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [574]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "line": 54,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L54"
        },
        {
          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "line": 202,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L202"
        }
      ]
    },
    {
      "id": 624,
      "name": "Badge",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 625,
          "name": "Pip",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/Badge.tsx",
              "line": 104,
              "character": 6,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L104"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 626,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Badge/components/Pip/Pip.tsx",
                  "line": 17,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/components/Pip/Pip.tsx#L17"
                }
              ],
              "signatures": [
                {
                  "id": 627,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 628,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "PipProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [625]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
          "line": 41,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L41"
        },
        {
          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
          "line": 104,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L104"
        }
      ]
    },
    {
      "id": 937,
      "name": "Card",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 938,
          "name": "Header",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 156,
              "character": 5,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L156"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 939,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Card/components/Header/Header.tsx",
                  "line": 17,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Header/Header.tsx#L17"
                }
              ],
              "signatures": [
                {
                  "id": 940,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [],
                    "blockTags": [
                      {
                        "tag": "@deprecated",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Use LegacyCard or AlphaCard instead."
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 941,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 969,
                        "name": "CardHeaderProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 942,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 158,
              "character": 5,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L158"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 943,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
                  "line": 23,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L23"
                }
              ],
              "signatures": [
                {
                  "id": 944,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [],
                    "blockTags": [
                      {
                        "tag": "@deprecated",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Use LegacyCard or AlphaCard instead."
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 945,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 961,
                        "name": "CardSectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 946,
          "name": "Subsection",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 160,
              "character": 5,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L160"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 947,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Card/components/Subsection/Subsection.tsx",
                  "line": 10,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Subsection/Subsection.tsx#L10"
                }
              ],
              "signatures": [
                {
                  "id": 948,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [],
                    "blockTags": [
                      {
                        "tag": "@deprecated",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Use LegacyCard or AlphaCard instead."
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 949,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 973,
                        "name": "CardSubsectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [938, 942, 946]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 51,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L51"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 156,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L156"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 158,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L158"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 160,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L160"
        }
      ]
    },
    {
      "id": 1201,
      "name": "Combobox",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 1202,
          "name": "TextField",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 180,
              "character": 9,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L180"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1203,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Combobox/components/TextField/TextField.tsx",
                  "line": 9,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/components/TextField/TextField.tsx#L9"
                }
              ],
              "signatures": [
                {
                  "id": 1204,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1205,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 3304,
                        "name": "TextFieldProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [1202]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
          "line": 38,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L38"
        },
        {
          "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
          "line": 180,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L180"
        }
      ]
    },
    {
      "id": 1317,
      "name": "DropZone",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 1318,
          "name": "FileUpload",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 441,
              "character": 9,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L441"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1319,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx",
                  "line": 19,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/components/FileUpload/FileUpload.tsx#L19"
                }
              ],
              "signatures": [
                {
                  "id": 1320,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1321,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "FileUploadProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [1318]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
          "line": 112,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L112"
        },
        {
          "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
          "line": 441,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L441"
        }
      ]
    },
    {
      "id": 1580,
      "name": "Grid",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 1581,
          "name": "Cell",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/Grid.tsx",
              "line": 75,
              "character": 5,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L75"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1582,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
                  "line": 34,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L34"
                }
              ],
              "signatures": [
                {
                  "id": 1583,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [],
                    "blockTags": [
                      {
                        "tag": "@deprecated",
                        "content": [
                          {
                            "kind": "text",
                            "text": "Use "
                          },
                          {
                            "kind": "code",
                            "text": "`Columns`"
                          },
                          {
                            "kind": "text",
                            "text": " instead or a combination of layout primitives ("
                          },
                          {
                            "kind": "code",
                            "text": "`Columns`"
                          },
                          {
                            "kind": "text",
                            "text": ", "
                          },
                          {
                            "kind": "code",
                            "text": "`Inline`"
                          },
                          {
                            "kind": "text",
                            "text": ", and "
                          },
                          {
                            "kind": "code",
                            "text": "`AlphaStack`"
                          },
                          {
                            "kind": "text",
                            "text": ")"
                          }
                        ]
                      }
                    ]
                  },
                  "parameters": [
                    {
                      "id": 1584,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 1590,
                        "name": "CellProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [1581]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Grid/Grid.tsx",
          "line": 31,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L31"
        },
        {
          "fileName": "polaris-react/src/components/Grid/Grid.tsx",
          "line": 75,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L75"
        }
      ]
    },
    {
      "id": 1985,
      "name": "IndexTable",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 1986,
          "name": "Cell",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 1153,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1153"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "CellProps"
              }
            ],
            "name": "NamedExoticComponent",
            "qualifiedName": "React.NamedExoticComponent",
            "package": "@types/react"
          }
        },
        {
          "id": 1987,
          "name": "Row",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 1154,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1154"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "RowProps"
              }
            ],
            "name": "NamedExoticComponent",
            "qualifiedName": "React.NamedExoticComponent",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [1986, 1987]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1125,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1125"
        },
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1153,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1153"
        },
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1154,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1154"
        }
      ]
    },
    {
      "id": 2148,
      "name": "Layout",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2149,
          "name": "AnnotatedSection",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Layout/Layout.tsx",
              "line": 21,
              "character": 7,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L21"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2150,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx",
                  "line": 16,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/components/AnnotatedSection/AnnotatedSection.tsx#L16"
                }
              ],
              "signatures": [
                {
                  "id": 2151,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2152,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "AnnotatedSectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2153,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Layout/Layout.tsx",
              "line": 22,
              "character": 7,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L22"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2154,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Layout/components/Section/Section.tsx",
                  "line": 14,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/components/Section/Section.tsx#L14"
                }
              ],
              "signatures": [
                {
                  "id": 2155,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2156,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "SectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2149, 2153]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 13,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L13"
        },
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 21,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L21"
        },
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 22,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L22"
        }
      ]
    },
    {
      "id": 2164,
      "name": "LegacyCard",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2165,
          "name": "Header",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 144,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L144"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2166,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
                  "line": 16,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Header/Header.tsx#L16"
                }
              ],
              "signatures": [
                {
                  "id": 2167,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2168,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2196,
                        "name": "LegacyCardHeaderProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2169,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 145,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L145"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2170,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
                  "line": 22,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L22"
                }
              ],
              "signatures": [
                {
                  "id": 2171,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2172,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2188,
                        "name": "LegacyCardSectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2173,
          "name": "Subsection",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 146,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L146"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2174,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx",
                  "line": 9,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx#L9"
                }
              ],
              "signatures": [
                {
                  "id": 2175,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2176,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2200,
                        "name": "LegacyCardSubsectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2165, 2169, 2173]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 50,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L50"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 144,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L144"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 145,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L145"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 146,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L146"
        }
      ]
    },
    {
      "id": 2230,
      "name": "List",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2231,
          "name": "Item",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/List/List.tsx",
              "line": 40,
              "character": 5,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L40"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2232,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/List/components/Item/Item.tsx",
                  "line": 10,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/components/Item/Item.tsx#L10"
                }
              ],
              "signatures": [
                {
                  "id": 2233,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2234,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ItemProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2231]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/List/List.tsx",
          "line": 27,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L27"
        },
        {
          "fileName": "polaris-react/src/components/List/List.tsx",
          "line": 40,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L40"
        }
      ]
    },
    {
      "id": 2242,
      "name": "Listbox",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2254,
          "name": "Action",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 522,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L522"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2255,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Listbox/components/Action/Action.tsx",
                  "line": 16,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/components/Action/Action.tsx#L16"
                }
              ],
              "signatures": [
                {
                  "id": 2256,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2257,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "ActionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2250,
          "name": "Header",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 521,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L521"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2251,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Listbox/components/Header/Header.tsx",
                  "line": 11,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/components/Header/Header.tsx#L11"
                }
              ],
              "signatures": [
                {
                  "id": 2252,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2253,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "HeaderProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2245,
          "name": "Loading",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 519,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L519"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "LoadingProps"
              }
            ],
            "name": "NamedExoticComponent",
            "qualifiedName": "React.NamedExoticComponent",
            "package": "@types/react"
          }
        },
        {
          "id": 2243,
          "name": "Option",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 517,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L517"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "OptionProps"
              }
            ],
            "name": "NamedExoticComponent",
            "qualifiedName": "React.NamedExoticComponent",
            "package": "@types/react"
          }
        },
        {
          "id": 2246,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 520,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L520"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2247,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Listbox/components/Section/Section.tsx",
                  "line": 16,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/components/Section/Section.tsx#L16"
                }
              ],
              "signatures": [
                {
                  "id": 2248,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2249,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "SectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2244,
          "name": "TextOption",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 518,
              "character": 8,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L518"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "TextOptionProps"
              }
            ],
            "name": "NamedExoticComponent",
            "qualifiedName": "React.NamedExoticComponent",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2254, 2250, 2245, 2243, 2246, 2244]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 71,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L71"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 517,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L517"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 518,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L518"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 519,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L519"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 520,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L520"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 521,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L521"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 522,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L522"
        }
      ]
    },
    {
      "id": 2286,
      "name": "Modal",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2287,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 249,
              "character": 6,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L249"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2288,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Modal/components/Section/Section.tsx",
                  "line": 15,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/components/Section/Section.tsx#L15"
                }
              ],
              "signatures": [
                {
                  "id": 2289,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2290,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "SectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2287]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Modal/Modal.tsx",
          "line": 68,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L68"
        },
        {
          "fileName": "polaris-react/src/components/Modal/Modal.tsx",
          "line": 249,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L249"
        }
      ]
    },
    {
      "id": 2323,
      "name": "Navigation",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2324,
          "name": "Item",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 88,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L88"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2325,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
                  "line": 85,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L85"
                }
              ],
              "signatures": [
                {
                  "id": 2326,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2327,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2344,
                        "name": "ItemProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2328,
          "name": "Section",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 89,
              "character": 11,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L89"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2329,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Navigation/components/Section/Section.tsx",
                  "line": 35,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Section/Section.tsx#L35"
                }
              ],
              "signatures": [
                {
                  "id": 2330,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2331,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "SectionProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2324, 2328]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 26,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L26"
        },
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 88,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L88"
        },
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 89,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L89"
        }
      ]
    },
    {
      "id": 2675,
      "name": "ResourceList",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 2676,
          "name": "Item",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 774,
              "character": 13,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L774"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2677,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
                  "line": 492,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceItem/ResourceItem.tsx#L492"
                }
              ],
              "signatures": [
                {
                  "id": 2678,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2679,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "id": 2670,
                        "name": "ResourceItemProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [2676]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "line": 128,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L128"
        },
        {
          "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "line": 774,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L774"
        }
      ]
    },
    {
      "id": 3355,
      "name": "TopBar",
      "kind": 4,
      "kindString": "Namespace",
      "flags": {},
      "children": [
        {
          "id": 3356,
          "name": "Menu",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 156,
              "character": 7,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L156"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3357,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/TopBar/components/Menu/Menu.tsx",
                  "line": 28,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/components/Menu/Menu.tsx#L28"
                }
              ],
              "signatures": [
                {
                  "id": 3358,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 3359,
                      "name": "props",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "MenuProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 3360,
          "name": "SearchField",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 157,
              "character": 7,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L157"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3361,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx",
                  "line": 33,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/components/SearchField/SearchField.tsx#L33"
                }
              ],
              "signatures": [
                {
                  "id": 3362,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 3363,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "SearchFieldProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 3364,
          "name": "UserMenu",
          "kind": 32,
          "kindString": "Variable",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 158,
              "character": 7,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L158"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3365,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx",
                  "line": 32,
                  "character": 16,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/components/UserMenu/UserMenu.tsx#L32"
                }
              ],
              "signatures": [
                {
                  "id": 3366,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 3367,
                      "name": "__namedParameters",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "UserMenuProps"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "Element",
                    "qualifiedName": "global.JSX.Element",
                    "package": "@types/react"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Variables",
          "children": [3356, 3360, 3364]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 49,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L49"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 156,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L156"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 157,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L157"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 158,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L158"
        }
      ]
    },
    {
      "id": 2258,
      "name": "AutoSelection",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 2260,
          "name": "First",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Default active option is always the first interactive option."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L40"
            }
          ],
          "type": {
            "type": "literal",
            "value": "FIRST"
          }
        },
        {
          "id": 2259,
          "name": "FirstSelected",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Default active option is the first selected option. If no options are selected, defaults to first interactive option."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L38"
            }
          ],
          "type": {
            "type": "literal",
            "value": "FIRST_SELECTED"
          }
        },
        {
          "id": 2261,
          "name": "None",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Default to the manual selection pattern."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L42"
            }
          ],
          "type": {
            "type": "literal",
            "value": "NONE"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [2260, 2259, 2261]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 36,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L36"
        }
      ]
    },
    {
      "id": 636,
      "name": "BadgeProgressValue",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 639,
          "name": "Complete",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L23"
            }
          ],
          "type": {
            "type": "literal",
            "value": "complete"
          }
        },
        {
          "id": 637,
          "name": "Incomplete",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L21"
            }
          ],
          "type": {
            "type": "literal",
            "value": "incomplete"
          }
        },
        {
          "id": 638,
          "name": "PartiallyComplete",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L22"
            }
          ],
          "type": {
            "type": "literal",
            "value": "partiallyComplete"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [639, 637, 638]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Badge/types.ts",
          "line": 20,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L20"
        }
      ]
    },
    {
      "id": 629,
      "name": "BadgeStatusValue",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 634,
          "name": "Attention",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L14"
            }
          ],
          "type": {
            "type": "literal",
            "value": "attention"
          }
        },
        {
          "id": 633,
          "name": "Critical",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L13"
            }
          ],
          "type": {
            "type": "literal",
            "value": "critical"
          }
        },
        {
          "id": 630,
          "name": "Info",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L10"
            }
          ],
          "type": {
            "type": "literal",
            "value": "info"
          }
        },
        {
          "id": 635,
          "name": "New",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L15"
            }
          ],
          "type": {
            "type": "literal",
            "value": "new"
          }
        },
        {
          "id": 631,
          "name": "Success",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L11"
            }
          ],
          "type": {
            "type": "literal",
            "value": "success"
          }
        },
        {
          "id": 632,
          "name": "Warning",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Badge/types.ts",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L12"
            }
          ],
          "type": {
            "type": "literal",
            "value": "warning"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [634, 633, 630, 635, 631, 632]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Badge/types.ts",
          "line": 9,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/types.ts#L9"
        }
      ]
    },
    {
      "id": 3935,
      "name": "IndexTableSelectionType",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 3936,
          "name": "All",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L6"
            }
          ],
          "type": {
            "type": "literal",
            "value": "all"
          }
        },
        {
          "id": 3938,
          "name": "Multi",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L8"
            }
          ],
          "type": {
            "type": "literal",
            "value": "multi"
          }
        },
        {
          "id": 3937,
          "name": "Page",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L7"
            }
          ],
          "type": {
            "type": "literal",
            "value": "page"
          }
        },
        {
          "id": 3939,
          "name": "Single",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L9"
            }
          ],
          "type": {
            "type": "literal",
            "value": "single"
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [3936, 3938, 3937, 3939]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/index-provider/types.ts",
          "line": 5,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L5"
        }
      ]
    },
    {
      "id": 1,
      "name": "Key",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 72,
          "name": "Add",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 329,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L329"
            }
          ],
          "type": {
            "type": "literal",
            "value": 107
          }
        },
        {
          "id": 7,
          "name": "Alt",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 264,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L264"
            }
          ],
          "type": {
            "type": "literal",
            "value": 18
          }
        },
        {
          "id": 98,
          "name": "BackSlash",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 355,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L355"
            }
          ],
          "type": {
            "type": "literal",
            "value": 220
          }
        },
        {
          "id": 2,
          "name": "Backspace",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 259,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L259"
            }
          ],
          "type": {
            "type": "literal",
            "value": 8
          }
        },
        {
          "id": 9,
          "name": "CapsLock",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 266,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L266"
            }
          ],
          "type": {
            "type": "literal",
            "value": 20
          }
        },
        {
          "id": 99,
          "name": "CloseBracket",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 356,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L356"
            }
          ],
          "type": {
            "type": "literal",
            "value": 221
          }
        },
        {
          "id": 92,
          "name": "Comma",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 349,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L349"
            }
          ],
          "type": {
            "type": "literal",
            "value": 188
          }
        },
        {
          "id": 6,
          "name": "Ctrl",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 263,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L263"
            }
          ],
          "type": {
            "type": "literal",
            "value": 17
          }
        },
        {
          "id": 93,
          "name": "Dash",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 350,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L350"
            }
          ],
          "type": {
            "type": "literal",
            "value": 189
          }
        },
        {
          "id": 74,
          "name": "Decimal",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 331,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L331"
            }
          ],
          "type": {
            "type": "literal",
            "value": 110
          }
        },
        {
          "id": 21,
          "name": "Delete",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 278,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L278"
            }
          ],
          "type": {
            "type": "literal",
            "value": 46
          }
        },
        {
          "id": 75,
          "name": "Divide",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 332,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L332"
            }
          ],
          "type": {
            "type": "literal",
            "value": 111
          }
        },
        {
          "id": 19,
          "name": "DownArrow",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 276,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L276"
            }
          ],
          "type": {
            "type": "literal",
            "value": 40
          }
        },
        {
          "id": 14,
          "name": "End",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 271,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L271"
            }
          ],
          "type": {
            "type": "literal",
            "value": 35
          }
        },
        {
          "id": 4,
          "name": "Enter",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 261,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L261"
            }
          ],
          "type": {
            "type": "literal",
            "value": 13
          }
        },
        {
          "id": 91,
          "name": "Equals",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 348,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L348"
            }
          ],
          "type": {
            "type": "literal",
            "value": 187
          }
        },
        {
          "id": 10,
          "name": "Escape",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 267,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L267"
            }
          ],
          "type": {
            "type": "literal",
            "value": 27
          }
        },
        {
          "id": 76,
          "name": "F1",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 333,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L333"
            }
          ],
          "type": {
            "type": "literal",
            "value": 112
          }
        },
        {
          "id": 85,
          "name": "F10",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 342,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L342"
            }
          ],
          "type": {
            "type": "literal",
            "value": 121
          }
        },
        {
          "id": 86,
          "name": "F11",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 343,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L343"
            }
          ],
          "type": {
            "type": "literal",
            "value": 122
          }
        },
        {
          "id": 87,
          "name": "F12",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 344,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L344"
            }
          ],
          "type": {
            "type": "literal",
            "value": 123
          }
        },
        {
          "id": 77,
          "name": "F2",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 334,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L334"
            }
          ],
          "type": {
            "type": "literal",
            "value": 113
          }
        },
        {
          "id": 78,
          "name": "F3",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 335,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L335"
            }
          ],
          "type": {
            "type": "literal",
            "value": 114
          }
        },
        {
          "id": 79,
          "name": "F4",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 336,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L336"
            }
          ],
          "type": {
            "type": "literal",
            "value": 115
          }
        },
        {
          "id": 80,
          "name": "F5",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 337,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L337"
            }
          ],
          "type": {
            "type": "literal",
            "value": 116
          }
        },
        {
          "id": 81,
          "name": "F6",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 338,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L338"
            }
          ],
          "type": {
            "type": "literal",
            "value": 117
          }
        },
        {
          "id": 82,
          "name": "F7",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 339,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L339"
            }
          ],
          "type": {
            "type": "literal",
            "value": 118
          }
        },
        {
          "id": 83,
          "name": "F8",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 340,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L340"
            }
          ],
          "type": {
            "type": "literal",
            "value": 119
          }
        },
        {
          "id": 84,
          "name": "F9",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 341,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L341"
            }
          ],
          "type": {
            "type": "literal",
            "value": 120
          }
        },
        {
          "id": 95,
          "name": "ForwardSlash",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 352,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L352"
            }
          ],
          "type": {
            "type": "literal",
            "value": 191
          }
        },
        {
          "id": 96,
          "name": "GraveAccent",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 353,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L353"
            }
          ],
          "type": {
            "type": "literal",
            "value": 192
          }
        },
        {
          "id": 15,
          "name": "Home",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 272,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L272"
            }
          ],
          "type": {
            "type": "literal",
            "value": 36
          }
        },
        {
          "id": 20,
          "name": "Insert",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 277,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L277"
            }
          ],
          "type": {
            "type": "literal",
            "value": 45
          }
        },
        {
          "id": 22,
          "name": "Key0",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 279,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L279"
            }
          ],
          "type": {
            "type": "literal",
            "value": 48
          }
        },
        {
          "id": 23,
          "name": "Key1",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 280,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L280"
            }
          ],
          "type": {
            "type": "literal",
            "value": 49
          }
        },
        {
          "id": 24,
          "name": "Key2",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 281,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L281"
            }
          ],
          "type": {
            "type": "literal",
            "value": 50
          }
        },
        {
          "id": 25,
          "name": "Key3",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 282,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L282"
            }
          ],
          "type": {
            "type": "literal",
            "value": 51
          }
        },
        {
          "id": 26,
          "name": "Key4",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 283,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L283"
            }
          ],
          "type": {
            "type": "literal",
            "value": 52
          }
        },
        {
          "id": 27,
          "name": "Key5",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 284,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L284"
            }
          ],
          "type": {
            "type": "literal",
            "value": 53
          }
        },
        {
          "id": 28,
          "name": "Key6",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 285,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L285"
            }
          ],
          "type": {
            "type": "literal",
            "value": 54
          }
        },
        {
          "id": 29,
          "name": "Key7",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 286,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L286"
            }
          ],
          "type": {
            "type": "literal",
            "value": 55
          }
        },
        {
          "id": 30,
          "name": "Key8",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 287,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L287"
            }
          ],
          "type": {
            "type": "literal",
            "value": 56
          }
        },
        {
          "id": 31,
          "name": "Key9",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 288,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L288"
            }
          ],
          "type": {
            "type": "literal",
            "value": 57
          }
        },
        {
          "id": 32,
          "name": "KeyA",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 289,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L289"
            }
          ],
          "type": {
            "type": "literal",
            "value": 65
          }
        },
        {
          "id": 33,
          "name": "KeyB",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 290,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L290"
            }
          ],
          "type": {
            "type": "literal",
            "value": 66
          }
        },
        {
          "id": 34,
          "name": "KeyC",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 291,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L291"
            }
          ],
          "type": {
            "type": "literal",
            "value": 67
          }
        },
        {
          "id": 35,
          "name": "KeyD",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 292,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L292"
            }
          ],
          "type": {
            "type": "literal",
            "value": 68
          }
        },
        {
          "id": 36,
          "name": "KeyE",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 293,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L293"
            }
          ],
          "type": {
            "type": "literal",
            "value": 69
          }
        },
        {
          "id": 37,
          "name": "KeyF",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 294,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L294"
            }
          ],
          "type": {
            "type": "literal",
            "value": 70
          }
        },
        {
          "id": 38,
          "name": "KeyG",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 295,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L295"
            }
          ],
          "type": {
            "type": "literal",
            "value": 71
          }
        },
        {
          "id": 39,
          "name": "KeyH",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 296,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L296"
            }
          ],
          "type": {
            "type": "literal",
            "value": 72
          }
        },
        {
          "id": 40,
          "name": "KeyI",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 297,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L297"
            }
          ],
          "type": {
            "type": "literal",
            "value": 73
          }
        },
        {
          "id": 41,
          "name": "KeyJ",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 298,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L298"
            }
          ],
          "type": {
            "type": "literal",
            "value": 74
          }
        },
        {
          "id": 42,
          "name": "KeyK",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 299,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L299"
            }
          ],
          "type": {
            "type": "literal",
            "value": 75
          }
        },
        {
          "id": 43,
          "name": "KeyL",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 300,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L300"
            }
          ],
          "type": {
            "type": "literal",
            "value": 76
          }
        },
        {
          "id": 44,
          "name": "KeyM",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 301,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L301"
            }
          ],
          "type": {
            "type": "literal",
            "value": 77
          }
        },
        {
          "id": 45,
          "name": "KeyN",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 302,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L302"
            }
          ],
          "type": {
            "type": "literal",
            "value": 78
          }
        },
        {
          "id": 46,
          "name": "KeyO",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 303,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L303"
            }
          ],
          "type": {
            "type": "literal",
            "value": 79
          }
        },
        {
          "id": 47,
          "name": "KeyP",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 304,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L304"
            }
          ],
          "type": {
            "type": "literal",
            "value": 80
          }
        },
        {
          "id": 48,
          "name": "KeyQ",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 305,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L305"
            }
          ],
          "type": {
            "type": "literal",
            "value": 81
          }
        },
        {
          "id": 49,
          "name": "KeyR",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 306,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L306"
            }
          ],
          "type": {
            "type": "literal",
            "value": 82
          }
        },
        {
          "id": 50,
          "name": "KeyS",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 307,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L307"
            }
          ],
          "type": {
            "type": "literal",
            "value": 83
          }
        },
        {
          "id": 51,
          "name": "KeyT",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 308,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L308"
            }
          ],
          "type": {
            "type": "literal",
            "value": 84
          }
        },
        {
          "id": 52,
          "name": "KeyU",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 309,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L309"
            }
          ],
          "type": {
            "type": "literal",
            "value": 85
          }
        },
        {
          "id": 53,
          "name": "KeyV",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 310,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L310"
            }
          ],
          "type": {
            "type": "literal",
            "value": 86
          }
        },
        {
          "id": 54,
          "name": "KeyW",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 311,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L311"
            }
          ],
          "type": {
            "type": "literal",
            "value": 87
          }
        },
        {
          "id": 55,
          "name": "KeyX",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 312,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L312"
            }
          ],
          "type": {
            "type": "literal",
            "value": 88
          }
        },
        {
          "id": 56,
          "name": "KeyY",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 313,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L313"
            }
          ],
          "type": {
            "type": "literal",
            "value": 89
          }
        },
        {
          "id": 57,
          "name": "KeyZ",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 314,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L314"
            }
          ],
          "type": {
            "type": "literal",
            "value": 90
          }
        },
        {
          "id": 16,
          "name": "LeftArrow",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 273,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L273"
            }
          ],
          "type": {
            "type": "literal",
            "value": 37
          }
        },
        {
          "id": 58,
          "name": "LeftMeta",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 315,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L315"
            }
          ],
          "type": {
            "type": "literal",
            "value": 91
          }
        },
        {
          "id": 71,
          "name": "Multiply",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 328,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L328"
            }
          ],
          "type": {
            "type": "literal",
            "value": 106
          }
        },
        {
          "id": 88,
          "name": "NumLock",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 345,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L345"
            }
          ],
          "type": {
            "type": "literal",
            "value": 144
          }
        },
        {
          "id": 61,
          "name": "Numpad0",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 318,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L318"
            }
          ],
          "type": {
            "type": "literal",
            "value": 96
          }
        },
        {
          "id": 62,
          "name": "Numpad1",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 319,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L319"
            }
          ],
          "type": {
            "type": "literal",
            "value": 97
          }
        },
        {
          "id": 63,
          "name": "Numpad2",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 320,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L320"
            }
          ],
          "type": {
            "type": "literal",
            "value": 98
          }
        },
        {
          "id": 64,
          "name": "Numpad3",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 321,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L321"
            }
          ],
          "type": {
            "type": "literal",
            "value": 99
          }
        },
        {
          "id": 65,
          "name": "Numpad4",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 322,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L322"
            }
          ],
          "type": {
            "type": "literal",
            "value": 100
          }
        },
        {
          "id": 66,
          "name": "Numpad5",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 323,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L323"
            }
          ],
          "type": {
            "type": "literal",
            "value": 101
          }
        },
        {
          "id": 67,
          "name": "Numpad6",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 324,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L324"
            }
          ],
          "type": {
            "type": "literal",
            "value": 102
          }
        },
        {
          "id": 68,
          "name": "Numpad7",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 325,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L325"
            }
          ],
          "type": {
            "type": "literal",
            "value": 103
          }
        },
        {
          "id": 69,
          "name": "Numpad8",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 326,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L326"
            }
          ],
          "type": {
            "type": "literal",
            "value": 104
          }
        },
        {
          "id": 70,
          "name": "Numpad9",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 327,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L327"
            }
          ],
          "type": {
            "type": "literal",
            "value": 105
          }
        },
        {
          "id": 97,
          "name": "OpenBracket",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 354,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L354"
            }
          ],
          "type": {
            "type": "literal",
            "value": 219
          }
        },
        {
          "id": 13,
          "name": "PageDown",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 270,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L270"
            }
          ],
          "type": {
            "type": "literal",
            "value": 34
          }
        },
        {
          "id": 12,
          "name": "PageUp",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 269,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L269"
            }
          ],
          "type": {
            "type": "literal",
            "value": 33
          }
        },
        {
          "id": 8,
          "name": "Pause",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 265,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L265"
            }
          ],
          "type": {
            "type": "literal",
            "value": 19
          }
        },
        {
          "id": 94,
          "name": "Period",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 351,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L351"
            }
          ],
          "type": {
            "type": "literal",
            "value": 190
          }
        },
        {
          "id": 18,
          "name": "RightArrow",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 275,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L275"
            }
          ],
          "type": {
            "type": "literal",
            "value": 39
          }
        },
        {
          "id": 59,
          "name": "RightMeta",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 316,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L316"
            }
          ],
          "type": {
            "type": "literal",
            "value": 92
          }
        },
        {
          "id": 89,
          "name": "ScrollLock",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 346,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L346"
            }
          ],
          "type": {
            "type": "literal",
            "value": 145
          }
        },
        {
          "id": 60,
          "name": "Select",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 317,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L317"
            }
          ],
          "type": {
            "type": "literal",
            "value": 93
          }
        },
        {
          "id": 90,
          "name": "Semicolon",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 347,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L347"
            }
          ],
          "type": {
            "type": "literal",
            "value": 186
          }
        },
        {
          "id": 5,
          "name": "Shift",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 262,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L262"
            }
          ],
          "type": {
            "type": "literal",
            "value": 16
          }
        },
        {
          "id": 100,
          "name": "SingleQuote",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 357,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L357"
            }
          ],
          "type": {
            "type": "literal",
            "value": 222
          }
        },
        {
          "id": 11,
          "name": "Space",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 268,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L268"
            }
          ],
          "type": {
            "type": "literal",
            "value": 32
          }
        },
        {
          "id": 73,
          "name": "Subtract",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 330,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L330"
            }
          ],
          "type": {
            "type": "literal",
            "value": 109
          }
        },
        {
          "id": 3,
          "name": "Tab",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 260,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L260"
            }
          ],
          "type": {
            "type": "literal",
            "value": 9
          }
        },
        {
          "id": 17,
          "name": "UpArrow",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 274,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L274"
            }
          ],
          "type": {
            "type": "literal",
            "value": 38
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [
            72, 7, 98, 2, 9, 99, 92, 6, 93, 74, 21, 75, 19, 14, 4, 91, 10, 76,
            85, 86, 87, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 15, 20, 22, 23,
            24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
            41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
            16, 58, 71, 88, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 97, 13, 12,
            8, 94, 18, 59, 89, 60, 90, 5, 100, 11, 73, 3, 17
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 258,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L258"
        }
      ]
    },
    {
      "id": 2458,
      "name": "PopoverCloseSource",
      "kind": 8,
      "kindString": "Enumeration",
      "flags": {},
      "children": [
        {
          "id": 2459,
          "name": "Click",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L28"
            }
          ],
          "type": {
            "type": "literal",
            "value": 0
          }
        },
        {
          "id": 2460,
          "name": "EscapeKeypress",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L29"
            }
          ],
          "type": {
            "type": "literal",
            "value": 1
          }
        },
        {
          "id": 2461,
          "name": "FocusOut",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L30"
            }
          ],
          "type": {
            "type": "literal",
            "value": 2
          }
        },
        {
          "id": 2462,
          "name": "ScrollOut",
          "kind": 16,
          "kindString": "Enumeration Member",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L31"
            }
          ],
          "type": {
            "type": "literal",
            "value": 3
          }
        }
      ],
      "groups": [
        {
          "title": "Enumeration Members",
          "children": [2459, 2460, 2461, 2462]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "line": 27,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L27"
        }
      ]
    },
    {
      "id": 332,
      "name": "AppProvider",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 334,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L48"
            }
          ],
          "signatures": [
            {
              "id": 335,
              "name": "new AppProvider",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 336,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 409,
                    "name": "AppProviderProps"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 332,
                "name": "AppProvider"
              },
              "overwrites": {
                "type": "reference",
                "name": "Component<AppProviderProps, State>.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Component<AppProviderProps, State>.constructor"
          }
        },
        {
          "id": 349,
          "name": "context",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If using the new style context, re-declare this in your class to be the\n"
              },
              {
                "kind": "code",
                "text": "`React.ContextType`"
              },
              {
                "kind": "text",
                "text": " of your "
              },
              {
                "kind": "code",
                "text": "`static contextType`"
              },
              {
                "kind": "text",
                "text": ".\nShould be used with type annotation or static contextType.\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 470,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.context"
          }
        },
        {
          "id": 366,
          "name": "props",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 490,
              "character": 17
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 409,
                "name": "AppProviderProps"
              }
            ],
            "name": "Readonly",
            "qualifiedName": "Readonly",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.props"
          }
        },
        {
          "id": 368,
          "name": "refs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 369,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 496,
                  "character": 14
                }
              ],
              "indexSignature": {
                "id": 370,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 371,
                    "name": "key",
                    "kind": 32768,
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ReactInstance",
                  "qualifiedName": "React.ReactInstance",
                  "package": "@types/react"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.refs"
          }
        },
        {
          "id": 338,
          "name": "scrollLockManager",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 45,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L45"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ScrollLockManager"
          }
        },
        {
          "id": 367,
          "name": "state",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 491,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "State"
              }
            ],
            "name": "Readonly",
            "qualifiedName": "Readonly",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.state"
          }
        },
        {
          "id": 337,
          "name": "stickyManager",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 44,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L44"
            }
          ],
          "type": {
            "type": "reference",
            "name": "StickyManager"
          }
        },
        {
          "id": 339,
          "name": "uniqueIdFactory",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 46,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L46"
            }
          ],
          "type": {
            "type": "reference",
            "name": "UniqueIdFactory"
          }
        },
        {
          "id": 333,
          "name": "contextType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If set, "
              },
              {
                "kind": "code",
                "text": "`this.context`"
              },
              {
                "kind": "text",
                "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html#classcontexttype"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 453,
              "character": 15
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "name": "Context",
            "qualifiedName": "React.Context",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.contextType"
          }
        },
        {
          "id": 389,
          "name": "UNSAFE_componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 687,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 390,
              "name": "UNSAFE_componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.UNSAFE_componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.UNSAFE_componentWillMount"
          }
        },
        {
          "id": 395,
          "name": "UNSAFE_componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 719,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 396,
              "name": "UNSAFE_componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 397,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 398,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.UNSAFE_componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.UNSAFE_componentWillReceiveProps"
          }
        },
        {
          "id": 404,
          "name": "UNSAFE_componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 747,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 405,
              "name": "UNSAFE_componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 406,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 407,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 408,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.UNSAFE_componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.UNSAFE_componentWillUpdate"
          }
        },
        {
          "id": 379,
          "name": "componentDidCatch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 616,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 380,
              "name": "componentDidCatch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 381,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                },
                {
                  "id": 382,
                  "name": "errorInfo",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "ErrorInfo",
                    "qualifiedName": "React.ErrorInfo",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.componentDidCatch"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.componentDidCatch"
          }
        },
        {
          "id": 340,
          "name": "componentDidMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L63"
            }
          ],
          "signatures": [
            {
              "id": 341,
              "name": "componentDidMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "Component.componentDidMount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Component.componentDidMount"
          }
        },
        {
          "id": 342,
          "name": "componentDidUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 70,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L70"
            }
          ],
          "signatures": [
            {
              "id": 343,
              "name": "componentDidUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 344,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 409,
                    "name": "AppProviderProps"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "Component.componentDidUpdate"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Component.componentDidUpdate"
          }
        },
        {
          "id": 387,
          "name": "componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 673,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 388,
              "name": "componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.componentWillMount"
          }
        },
        {
          "id": 391,
          "name": "componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 702,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 392,
              "name": "componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 393,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 394,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.componentWillReceiveProps"
          }
        },
        {
          "id": 377,
          "name": "componentWillUnmount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 611,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 378,
              "name": "componentWillUnmount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidMount`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.componentWillUnmount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.componentWillUnmount"
          }
        },
        {
          "id": 399,
          "name": "componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 732,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 400,
              "name": "componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 401,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 402,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 403,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.componentWillUpdate"
          }
        },
        {
          "id": 361,
          "name": "forceUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 487,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 362,
              "name": "forceUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 363,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 364,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 487,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 365,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.forceUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.forceUpdate"
          }
        },
        {
          "id": 383,
          "name": "getSnapshotBeforeUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 652,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 384,
              "name": "getSnapshotBeforeUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Runs before React applies the result of "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 385,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 386,
                  "name": "prevState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.getSnapshotBeforeUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.getSnapshotBeforeUpdate"
          }
        },
        {
          "id": 347,
          "name": "render",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L91"
            }
          ],
          "signatures": [
            {
              "id": 348,
              "name": "render",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              },
              "overwrites": {
                "type": "reference",
                "name": "Component.render"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "Component.render"
          }
        },
        {
          "id": 345,
          "name": "setBodyStyles",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 86,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L86"
            }
          ],
          "signatures": [
            {
              "id": 346,
              "name": "setBodyStyles",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 350,
          "name": "setState",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 482,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 351,
              "name": "setState",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 352,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "name": "State"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 353,
                  "name": "state",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "name": "State"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 354,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/react/index.d.ts",
                              "line": 483,
                              "character": 20
                            }
                          ],
                          "signatures": [
                            {
                              "id": 355,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 356,
                                  "name": "prevState",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                },
                                {
                                  "id": 357,
                                  "name": "props",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 409,
                                        "name": "AppProviderProps"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "name": "State"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 352,
                                        "name": "K",
                                        "qualifiedName": "K",
                                        "package": "@types/react"
                                      }
                                    ],
                                    "name": "Pick",
                                    "qualifiedName": "Pick",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "State"
                          },
                          {
                            "type": "reference",
                            "id": 352,
                            "name": "K",
                            "qualifiedName": "K",
                            "package": "@types/react"
                          }
                        ],
                        "name": "Pick",
                        "qualifiedName": "Pick",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 358,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 359,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 484,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 360,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.setState"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.setState"
          }
        },
        {
          "id": 372,
          "name": "shouldComponentUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 606,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 373,
              "name": "shouldComponentUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Component`"
                  },
                  {
                    "kind": "text",
                    "text": " always returns true.\n"
                  },
                  {
                    "kind": "code",
                    "text": "`PureComponent`"
                  },
                  {
                    "kind": "text",
                    "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`componentWillUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": "\nand "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": " will not be called."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 374,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 409,
                        "name": "AppProviderProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 375,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 376,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "Component.shouldComponentUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "Component.shouldComponentUpdate"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [334]
        },
        {
          "title": "Properties",
          "children": [349, 366, 368, 338, 367, 337, 339, 333]
        },
        {
          "title": "Methods",
          "children": [
            389, 395, 404, 379, 340, 342, 387, 391, 377, 399, 361, 383, 347,
            345, 350, 372
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "line": 43,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L43"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 409,
              "name": "AppProviderProps"
            },
            {
              "type": "reference",
              "name": "State"
            }
          ],
          "name": "Component",
          "qualifiedName": "React.Component",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 1026,
      "name": "ColorPicker",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 1028,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 472,
              "character": 8
            },
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 477,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1029,
              "name": "new ColorPicker",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 1030,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1134,
                            "name": "ColorPickerProps"
                          }
                        ],
                        "name": "Readonly",
                        "qualifiedName": "Readonly",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1026,
                "name": "ColorPicker"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent<ColorPickerProps, State>.constructor"
              }
            },
            {
              "id": 1031,
              "name": "new ColorPicker",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/docs/legacy-context.html"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1032,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 1134,
                    "name": "ColorPickerProps"
                  }
                },
                {
                  "id": 1033,
                  "name": "context",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1026,
                "name": "ColorPicker"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent<ColorPickerProps, State>.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent<ColorPickerProps, State>.constructor"
          }
        },
        {
          "id": 1035,
          "name": "colorNode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 48,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L48"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "HTMLElement",
                "qualifiedName": "HTMLElement",
                "package": "typescript"
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 1070,
          "name": "context",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If using the new style context, re-declare this in your class to be the\n"
              },
              {
                "kind": "code",
                "text": "`React.ContextType`"
              },
              {
                "kind": "text",
                "text": " of your "
              },
              {
                "kind": "code",
                "text": "`static contextType`"
              },
              {
                "kind": "text",
                "text": ".\nShould be used with type annotation or static contextType.\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 470,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.context"
          }
        },
        {
          "id": 1063,
          "name": "handleDraggerMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 162,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L162"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1064,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/components/Slidable/Slidable.tsx#L20"
                }
              ],
              "signatures": [
                {
                  "id": 1065,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1066,
                      "name": "position",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "name": "Position"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 1036,
          "name": "handleResize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 50,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L50"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1037,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1038,
                  "name": "cancel",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/debounce.ts",
                      "line": 161,
                      "character": 12,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L161"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1039,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/debounce.ts",
                          "line": 120,
                          "character": 11,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L120"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1040,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1041,
                  "name": "flush",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/debounce.ts",
                      "line": 162,
                      "character": 12,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L162"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1042,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/debounce.ts",
                          "line": 129,
                          "character": 11,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L129"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1043,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 1044,
                  "name": "pending",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/debounce.ts",
                      "line": 163,
                      "character": 12,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L163"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1045,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/debounce.ts",
                          "line": 133,
                          "character": 11,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L133"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1046,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [1038, 1041, 1044]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/utilities/debounce.ts",
                  "line": 137,
                  "character": 11,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/debounce.ts#L137"
                }
              ],
              "signatures": [
                {
                  "id": 1047,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1048,
                      "name": "this",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 1049,
                      "name": "args",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isRest": true
                      },
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ]
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 1087,
          "name": "props",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 490,
              "character": 17
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 1134,
                "name": "ColorPickerProps"
              }
            ],
            "name": "Readonly",
            "qualifiedName": "Readonly",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.props"
          }
        },
        {
          "id": 1088,
          "name": "refs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1089,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 496,
                  "character": 14
                }
              ],
              "indexSignature": {
                "id": 1090,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 1091,
                    "name": "key",
                    "kind": 32768,
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ReactInstance",
                  "qualifiedName": "React.ReactInstance",
                  "package": "@types/react"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.refs"
          }
        },
        {
          "id": 1034,
          "name": "state",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L41"
            }
          ],
          "type": {
            "type": "reference",
            "name": "State"
          },
          "defaultValue": "...",
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.state"
          }
        },
        {
          "id": 1027,
          "name": "contextType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If set, "
              },
              {
                "kind": "code",
                "text": "`this.context`"
              },
              {
                "kind": "text",
                "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html#classcontexttype"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 453,
              "character": 15
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "name": "Context",
            "qualifiedName": "React.Context",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.contextType"
          }
        },
        {
          "id": 1114,
          "name": "UNSAFE_componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 687,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1115,
              "name": "UNSAFE_componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillMount"
          }
        },
        {
          "id": 1120,
          "name": "UNSAFE_componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 719,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1121,
              "name": "UNSAFE_componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1122,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1123,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillReceiveProps"
          }
        },
        {
          "id": 1129,
          "name": "UNSAFE_componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 747,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1130,
              "name": "UNSAFE_componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1131,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1132,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1133,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillUpdate"
          }
        },
        {
          "id": 1099,
          "name": "componentDidCatch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 616,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1100,
              "name": "componentDidCatch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1101,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1102,
                  "name": "errorInfo",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "ErrorInfo",
                    "qualifiedName": "React.ErrorInfo",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentDidCatch"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentDidCatch"
          }
        },
        {
          "id": 1050,
          "name": "componentDidMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L69"
            }
          ],
          "signatures": [
            {
              "id": 1051,
              "name": "componentDidMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentDidMount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentDidMount"
          }
        },
        {
          "id": 1107,
          "name": "componentDidUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 658,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1108,
              "name": "componentDidUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately after updating occurs. Not called for the initial render.\n\nThe snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1109,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1110,
                  "name": "prevState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1111,
                  "name": "snapshot",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentDidUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentDidUpdate"
          }
        },
        {
          "id": 1112,
          "name": "componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 673,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1113,
              "name": "componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillMount"
          }
        },
        {
          "id": 1116,
          "name": "componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 702,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1117,
              "name": "componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1118,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1119,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillReceiveProps"
          }
        },
        {
          "id": 1097,
          "name": "componentWillUnmount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 611,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1098,
              "name": "componentWillUnmount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidMount`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillUnmount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillUnmount"
          }
        },
        {
          "id": 1124,
          "name": "componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 732,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1125,
              "name": "componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1126,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1127,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1128,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillUpdate"
          }
        },
        {
          "id": 1082,
          "name": "forceUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 487,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1083,
              "name": "forceUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 1084,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1085,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 487,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1086,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.forceUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.forceUpdate"
          }
        },
        {
          "id": 1103,
          "name": "getSnapshotBeforeUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 652,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1104,
              "name": "getSnapshotBeforeUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Runs before React applies the result of "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1105,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1106,
                  "name": "prevState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.getSnapshotBeforeUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.getSnapshotBeforeUpdate"
          }
        },
        {
          "id": 1060,
          "name": "handleAlphaChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 154,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L154"
            }
          ],
          "signatures": [
            {
              "id": 1061,
              "name": "handleAlphaChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1062,
                  "name": "alpha",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1057,
          "name": "handleHueChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 146,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L146"
            }
          ],
          "signatures": [
            {
              "id": 1058,
              "name": "handleHueChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1059,
                  "name": "hue",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1067,
          "name": "handlePickerDrag",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 175,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L175"
            }
          ],
          "signatures": [
            {
              "id": 1068,
              "name": "handlePickerDrag",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1069,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLDivElement",
                        "qualifiedName": "HTMLDivElement",
                        "package": "typescript"
                      },
                      {
                        "type": "reference",
                        "name": "MouseEvent",
                        "qualifiedName": "MouseEvent",
                        "package": "typescript"
                      }
                    ],
                    "name": "MouseEvent",
                    "qualifiedName": "React.MouseEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1052,
          "name": "render",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 94,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L94"
            }
          ],
          "signatures": [
            {
              "id": 1053,
              "name": "render",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.render"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.render"
          }
        },
        {
          "id": 1054,
          "name": "setColorNode",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 142,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L142"
            }
          ],
          "signatures": [
            {
              "id": 1055,
              "name": "setColorNode",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1056,
                  "name": "node",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "name": "HTMLElement",
                        "qualifiedName": "HTMLElement",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1071,
          "name": "setState",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 482,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1072,
              "name": "setState",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 1073,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "literal",
                    "value": "pickerSize"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 1074,
                  "name": "state",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "name": "State"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1075,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/react/index.d.ts",
                              "line": 483,
                              "character": 20
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1076,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1077,
                                  "name": "prevState",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                },
                                {
                                  "id": 1078,
                                  "name": "props",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 1134,
                                        "name": "ColorPickerProps"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "name": "State"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 352,
                                        "name": "K",
                                        "qualifiedName": "K",
                                        "package": "@types/react"
                                      }
                                    ],
                                    "name": "Pick",
                                    "qualifiedName": "Pick",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "State"
                          },
                          {
                            "type": "reference",
                            "id": 352,
                            "name": "K",
                            "qualifiedName": "K",
                            "package": "@types/react"
                          }
                        ],
                        "name": "Pick",
                        "qualifiedName": "Pick",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 1079,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1080,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 484,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1081,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.setState"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.setState"
          }
        },
        {
          "id": 1092,
          "name": "shouldComponentUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 606,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1093,
              "name": "shouldComponentUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Component`"
                  },
                  {
                    "kind": "text",
                    "text": " always returns true.\n"
                  },
                  {
                    "kind": "code",
                    "text": "`PureComponent`"
                  },
                  {
                    "kind": "text",
                    "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`componentWillUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": "\nand "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": " will not be called."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1094,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1134,
                        "name": "ColorPickerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1095,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1096,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.shouldComponentUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.shouldComponentUpdate"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [1028]
        },
        {
          "title": "Properties",
          "children": [1035, 1070, 1063, 1036, 1087, 1088, 1034, 1027]
        },
        {
          "title": "Methods",
          "children": [
            1114, 1120, 1129, 1099, 1050, 1107, 1112, 1116, 1097, 1124, 1082,
            1103, 1060, 1057, 1067, 1052, 1054, 1071, 1092
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "line": 40,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L40"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 1134,
              "name": "ColorPickerProps"
            },
            {
              "type": "reference",
              "name": "State"
            }
          ],
          "name": "PureComponent",
          "qualifiedName": "React.PureComponent",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 1386,
      "name": "EventListener",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "comment": {
        "summary": [],
        "blockTags": [
          {
            "tag": "@deprecated",
            "content": [
              {
                "kind": "text",
                "text": "Use the useEventListener hook instead."
              }
            ]
          }
        ]
      },
      "children": [
        {
          "id": 1388,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 472,
              "character": 8
            },
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 477,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1389,
              "name": "new EventListener",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 1390,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 1466,
                            "name": "EventListenerProps"
                          }
                        ],
                        "name": "Readonly",
                        "qualifiedName": "Readonly",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1386,
                "name": "EventListener"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent<EventListenerProps, never>.constructor"
              }
            },
            {
              "id": 1391,
              "name": "new EventListener",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/docs/legacy-context.html"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1392,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 1466,
                    "name": "EventListenerProps"
                  }
                },
                {
                  "id": 1393,
                  "name": "context",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 1386,
                "name": "EventListener"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent<EventListenerProps, never>.constructor"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent<EventListenerProps, never>.constructor"
          }
        },
        {
          "id": 1408,
          "name": "context",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If using the new style context, re-declare this in your class to be the\n"
              },
              {
                "kind": "code",
                "text": "`React.ContextType`"
              },
              {
                "kind": "text",
                "text": " of your "
              },
              {
                "kind": "code",
                "text": "`static contextType`"
              },
              {
                "kind": "text",
                "text": ".\nShould be used with type annotation or static contextType.\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 470,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.context"
          }
        },
        {
          "id": 1425,
          "name": "props",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 490,
              "character": 17
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 1466,
                "name": "EventListenerProps"
              }
            ],
            "name": "Readonly",
            "qualifiedName": "Readonly",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.props"
          }
        },
        {
          "id": 1427,
          "name": "refs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1428,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 496,
                  "character": 14
                }
              ],
              "indexSignature": {
                "id": 1429,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 1430,
                    "name": "key",
                    "kind": 32768,
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ReactInstance",
                  "qualifiedName": "React.ReactInstance",
                  "package": "@types/react"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.refs"
          }
        },
        {
          "id": 1426,
          "name": "state",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 491,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "never"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.state"
          }
        },
        {
          "id": 1387,
          "name": "contextType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If set, "
              },
              {
                "kind": "code",
                "text": "`this.context`"
              },
              {
                "kind": "text",
                "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html#classcontexttype"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 453,
              "character": 15
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "name": "Context",
            "qualifiedName": "React.Context",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.contextType"
          }
        },
        {
          "id": 1446,
          "name": "UNSAFE_componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 687,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1447,
              "name": "UNSAFE_componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillMount"
          }
        },
        {
          "id": 1452,
          "name": "UNSAFE_componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 719,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1453,
              "name": "UNSAFE_componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1454,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1455,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillReceiveProps"
          }
        },
        {
          "id": 1461,
          "name": "UNSAFE_componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 747,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1462,
              "name": "UNSAFE_componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1463,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1464,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                },
                {
                  "id": 1465,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillUpdate"
          }
        },
        {
          "id": 1403,
          "name": "attachListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 32,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L32"
            }
          ],
          "signatures": [
            {
              "id": 1404,
              "name": "attachListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1436,
          "name": "componentDidCatch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 616,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1437,
              "name": "componentDidCatch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1438,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1439,
                  "name": "errorInfo",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "ErrorInfo",
                    "qualifiedName": "React.ErrorInfo",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentDidCatch"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentDidCatch"
          }
        },
        {
          "id": 1394,
          "name": "componentDidMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L15"
            }
          ],
          "signatures": [
            {
              "id": 1395,
              "name": "componentDidMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentDidMount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentDidMount"
          }
        },
        {
          "id": 1396,
          "name": "componentDidUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L19"
            }
          ],
          "signatures": [
            {
              "id": 1397,
              "name": "componentDidUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1398,
                  "name": "__namedParameters",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1466,
                    "name": "EventListenerProps"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentDidUpdate"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentDidUpdate"
          }
        },
        {
          "id": 1444,
          "name": "componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 673,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1445,
              "name": "componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillMount"
          }
        },
        {
          "id": 1448,
          "name": "componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 702,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1449,
              "name": "componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1450,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1451,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillReceiveProps"
          }
        },
        {
          "id": 1399,
          "name": "componentWillUnmount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L24"
            }
          ],
          "signatures": [
            {
              "id": 1400,
              "name": "componentWillUnmount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentWillUnmount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentWillUnmount"
          }
        },
        {
          "id": 1456,
          "name": "componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 732,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1457,
              "name": "componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1458,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1459,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                },
                {
                  "id": 1460,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillUpdate"
          }
        },
        {
          "id": 1405,
          "name": "detachListener",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 37,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L37"
            }
          ],
          "signatures": [
            {
              "id": 1406,
              "name": "detachListener",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1407,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "BaseEventProps"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1420,
          "name": "forceUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 487,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1421,
              "name": "forceUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 1422,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1423,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 487,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1424,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.forceUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.forceUpdate"
          }
        },
        {
          "id": 1440,
          "name": "getSnapshotBeforeUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 652,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1441,
              "name": "getSnapshotBeforeUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Runs before React applies the result of "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1442,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1443,
                  "name": "prevState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.getSnapshotBeforeUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.getSnapshotBeforeUpdate"
          }
        },
        {
          "id": 1401,
          "name": "render",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L28"
            }
          ],
          "signatures": [
            {
              "id": 1402,
              "name": "render",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "literal",
                "value": null
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.render"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.render"
          }
        },
        {
          "id": 1409,
          "name": "setState",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 482,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1410,
              "name": "setState",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 1411,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "intrinsic",
                        "name": "symbol"
                      }
                    ]
                  }
                }
              ],
              "parameters": [
                {
                  "id": 1412,
                  "name": "state",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1413,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/react/index.d.ts",
                              "line": 483,
                              "character": 20
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1414,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 1415,
                                  "name": "prevState",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "never"
                                  }
                                },
                                {
                                  "id": 1416,
                                  "name": "props",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 1466,
                                        "name": "EventListenerProps"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "intrinsic",
                                        "name": "never"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 352,
                                        "name": "K",
                                        "qualifiedName": "K",
                                        "package": "@types/react"
                                      }
                                    ],
                                    "name": "Pick",
                                    "qualifiedName": "Pick",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "never"
                          },
                          {
                            "type": "reference",
                            "id": 352,
                            "name": "K",
                            "qualifiedName": "K",
                            "package": "@types/react"
                          }
                        ],
                        "name": "Pick",
                        "qualifiedName": "Pick",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 1417,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1418,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 484,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1419,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.setState"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.setState"
          }
        },
        {
          "id": 1431,
          "name": "shouldComponentUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 606,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 1432,
              "name": "shouldComponentUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Component`"
                  },
                  {
                    "kind": "text",
                    "text": " always returns true.\n"
                  },
                  {
                    "kind": "code",
                    "text": "`PureComponent`"
                  },
                  {
                    "kind": "text",
                    "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`componentWillUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": "\nand "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": " will not be called."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1433,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 1466,
                        "name": "EventListenerProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 1434,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "never"
                  }
                },
                {
                  "id": 1435,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.shouldComponentUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.shouldComponentUpdate"
          }
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [1388]
        },
        {
          "title": "Properties",
          "children": [1408, 1425, 1427, 1426, 1387]
        },
        {
          "title": "Methods",
          "children": [
            1446, 1452, 1461, 1403, 1436, 1394, 1396, 1444, 1448, 1399, 1456,
            1405, 1420, 1440, 1401, 1409, 1431
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
          "line": 14,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L14"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 1466,
              "name": "EventListenerProps"
            },
            {
              "type": "intrinsic",
              "name": "never"
            }
          ],
          "name": "PureComponent",
          "qualifiedName": "React.PureComponent",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 2504,
      "name": "PositionedOverlay",
      "kind": 128,
      "kindString": "Class",
      "flags": {},
      "children": [
        {
          "id": 2506,
          "name": "constructor",
          "kind": 512,
          "kindString": "Constructor",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 92,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L92"
            }
          ],
          "signatures": [
            {
              "id": 2507,
              "name": "new PositionedOverlay",
              "kind": 16384,
              "kindString": "Constructor signature",
              "flags": {},
              "parameters": [
                {
                  "id": 2508,
                  "name": "props",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 2595,
                    "name": "PositionedOverlayProps"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 2504,
                "name": "PositionedOverlay"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent<\n  PositionedOverlayProps,\n  State\n>.constructor"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent<\n  PositionedOverlayProps,\n  State\n>.constructor"
          }
        },
        {
          "id": 2538,
          "name": "context",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If using the new style context, re-declare this in your class to be the\n"
              },
              {
                "kind": "code",
                "text": "`React.ContextType`"
              },
              {
                "kind": "text",
                "text": " of your "
              },
              {
                "kind": "code",
                "text": "`static contextType`"
              },
              {
                "kind": "text",
                "text": ".\nShould be used with type annotation or static contextType.\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 470,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "unknown"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.context"
          }
        },
        {
          "id": 2512,
          "name": "observer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 90,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L90"
            }
          ],
          "type": {
            "type": "reference",
            "name": "MutationObserver",
            "qualifiedName": "MutationObserver",
            "package": "typescript"
          }
        },
        {
          "id": 2510,
          "name": "overlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 88,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L88"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "HTMLElement",
                "qualifiedName": "HTMLElement",
                "package": "typescript"
              }
            ]
          },
          "defaultValue": "null"
        },
        {
          "id": 2555,
          "name": "props",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isReadonly": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 490,
              "character": 17
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 2595,
                "name": "PositionedOverlayProps"
              }
            ],
            "name": "Readonly",
            "qualifiedName": "Readonly",
            "package": "typescript"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.props"
          }
        },
        {
          "id": 2556,
          "name": "refs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 496,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2557,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 496,
                  "character": 14
                }
              ],
              "indexSignature": {
                "id": 2558,
                "name": "__index",
                "kind": 8192,
                "kindString": "Index signature",
                "flags": {
                  "isExternal": true
                },
                "parameters": [
                  {
                    "id": 2559,
                    "name": "key",
                    "kind": 32768,
                    "flags": {
                      "isExternal": true
                    },
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "name": "ReactInstance",
                  "qualifiedName": "React.ReactInstance",
                  "package": "@types/react"
                }
              }
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.refs"
          }
        },
        {
          "id": 2511,
          "name": "scrollableContainers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 89,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L89"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "qualifiedName": "HTMLElement",
                  "package": "typescript"
                },
                {
                  "type": "reference",
                  "name": "Document",
                  "qualifiedName": "Document",
                  "package": "typescript"
                }
              ]
            }
          },
          "defaultValue": "[]"
        },
        {
          "id": 2509,
          "name": "state",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L73"
            }
          ],
          "type": {
            "type": "reference",
            "name": "State"
          },
          "defaultValue": "...",
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.state"
          }
        },
        {
          "id": 2505,
          "name": "contextType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isStatic": true,
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If set, "
              },
              {
                "kind": "code",
                "text": "`this.context`"
              },
              {
                "kind": "text",
                "text": " will be set at runtime to the current value of the given Context.\n\nUsage:\n\n"
              },
              {
                "kind": "code",
                "text": "```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://reactjs.org/docs/context.html#classcontexttype"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 453,
              "character": 15
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              }
            ],
            "name": "Context",
            "qualifiedName": "React.Context",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.contextType"
          }
        },
        {
          "id": 2521,
          "name": "firstScrollableContainer",
          "kind": 262144,
          "kindString": "Accessor",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 163,
              "character": 6,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L163"
            }
          ],
          "getSignature": {
            "id": 2522,
            "name": "firstScrollableContainer",
            "kind": 524288,
            "kindString": "Get signature",
            "flags": {},
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": null
                },
                {
                  "type": "reference",
                  "name": "HTMLElement",
                  "qualifiedName": "HTMLElement",
                  "package": "typescript"
                },
                {
                  "type": "reference",
                  "name": "Document",
                  "qualifiedName": "Document",
                  "package": "typescript"
                }
              ]
            }
          }
        },
        {
          "id": 2575,
          "name": "UNSAFE_componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 687,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2576,
              "name": "UNSAFE_componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillMount"
          }
        },
        {
          "id": 2581,
          "name": "UNSAFE_componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 719,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2582,
              "name": "UNSAFE_componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2583,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2584,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillReceiveProps"
          }
        },
        {
          "id": 2590,
          "name": "UNSAFE_componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 747,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2591,
              "name": "UNSAFE_componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2592,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2593,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2594,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.UNSAFE_componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.UNSAFE_componentWillUpdate"
          }
        },
        {
          "id": 2565,
          "name": "componentDidCatch",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 616,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2566,
              "name": "componentDidCatch",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2567,
                  "name": "error",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "Error",
                    "qualifiedName": "Error",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2568,
                  "name": "errorInfo",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "name": "ErrorInfo",
                    "qualifiedName": "React.ErrorInfo",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentDidCatch"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentDidCatch"
          }
        },
        {
          "id": 2513,
          "name": "componentDidMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L98"
            }
          ],
          "signatures": [
            {
              "id": 2514,
              "name": "componentDidMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentDidMount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentDidMount"
          }
        },
        {
          "id": 2517,
          "name": "componentDidUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 116,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L116"
            }
          ],
          "signatures": [
            {
              "id": 2518,
              "name": "componentDidUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentDidUpdate"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentDidUpdate"
          }
        },
        {
          "id": 2573,
          "name": "componentWillMount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 673,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2574,
              "name": "componentWillMount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before mounting occurs, and before "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nAvoid introducing any side-effects or subscriptions in this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillMount"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillMount"
          }
        },
        {
          "id": 2577,
          "name": "componentWillReceiveProps",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 702,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2578,
              "name": "componentWillReceiveProps",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.\n\nCalling "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2579,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2580,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillReceiveProps"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillReceiveProps"
          }
        },
        {
          "id": 2515,
          "name": "componentWillUnmount",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L108"
            }
          ],
          "signatures": [
            {
              "id": 2516,
              "name": "componentWillUnmount",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.componentWillUnmount"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.componentWillUnmount"
          }
        },
        {
          "id": 2585,
          "name": "componentWillUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 732,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2586,
              "name": "componentWillUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called immediately before rendering when new props or state is received. Not called for the initial render.\n\nNote: You cannot call "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#setState`"
                  },
                  {
                    "kind": "text",
                    "text": " here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2587,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2588,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2589,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.componentWillUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.componentWillUpdate"
          }
        },
        {
          "id": 2550,
          "name": "forceUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 487,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2551,
              "name": "forceUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "parameters": [
                {
                  "id": 2552,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2553,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 487,
                          "character": 31
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2554,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.forceUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.forceUpdate"
          }
        },
        {
          "id": 2523,
          "name": "forceUpdatePosition",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 167,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L167"
            }
          ],
          "signatures": [
            {
              "id": 2524,
              "name": "forceUpdatePosition",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2569,
          "name": "getSnapshotBeforeUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 652,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2570,
              "name": "getSnapshotBeforeUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Runs before React applies the result of "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before "
                  },
                  {
                    "kind": "code",
                    "text": "`render`"
                  },
                  {
                    "kind": "text",
                    "text": " causes changes to it.\n\nNote: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2571,
                  "name": "prevProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2572,
                  "name": "prevState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.getSnapshotBeforeUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.getSnapshotBeforeUpdate"
          }
        },
        {
          "id": 2536,
          "name": "handleMeasurement",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 232,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L232"
            }
          ],
          "signatures": [
            {
              "id": 2537,
              "name": "handleMeasurement",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2525,
          "name": "overlayDetails",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 175,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L175"
            }
          ],
          "signatures": [
            {
              "id": 2526,
              "name": "overlayDetails",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "OverlayDetails"
              }
            }
          ]
        },
        {
          "id": 2532,
          "name": "registerScrollHandlers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 220,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L220"
            }
          ],
          "signatures": [
            {
              "id": 2533,
              "name": "registerScrollHandlers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2519,
          "name": "render",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 130,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L130"
            }
          ],
          "signatures": [
            {
              "id": 2520,
              "name": "render",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              },
              "overwrites": {
                "type": "reference",
                "name": "PureComponent.render"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "PureComponent.render"
          }
        },
        {
          "id": 2527,
          "name": "setOverlay",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 197,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L197"
            }
          ],
          "signatures": [
            {
              "id": 2528,
              "name": "setOverlay",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 2529,
                  "name": "node",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "name": "HTMLElement",
                        "qualifiedName": "HTMLElement",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2530,
          "name": "setScrollableContainers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 201,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L201"
            }
          ],
          "signatures": [
            {
              "id": 2531,
              "name": "setScrollableContainers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2539,
          "name": "setState",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 482,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2540,
              "name": "setState",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "typeParameter": [
                {
                  "id": 2541,
                  "name": "K",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "typeOperator",
                    "operator": "keyof",
                    "target": {
                      "type": "reference",
                      "name": "State"
                    }
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2542,
                  "name": "state",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "reference",
                        "name": "State"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 2543,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/@types/react/index.d.ts",
                              "line": 483,
                              "character": 20
                            }
                          ],
                          "signatures": [
                            {
                              "id": 2544,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {
                                "isExternal": true
                              },
                              "parameters": [
                                {
                                  "id": 2545,
                                  "name": "prevState",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                },
                                {
                                  "id": 2546,
                                  "name": "props",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "type": {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "id": 2595,
                                        "name": "PositionedOverlayProps"
                                      }
                                    ],
                                    "name": "Readonly",
                                    "qualifiedName": "Readonly",
                                    "package": "typescript"
                                  }
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "literal",
                                    "value": null
                                  },
                                  {
                                    "type": "reference",
                                    "name": "State"
                                  },
                                  {
                                    "type": "reference",
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "name": "State"
                                      },
                                      {
                                        "type": "reference",
                                        "id": 352,
                                        "name": "K",
                                        "qualifiedName": "K",
                                        "package": "@types/react"
                                      }
                                    ],
                                    "name": "Pick",
                                    "qualifiedName": "Pick",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "name": "State"
                          },
                          {
                            "type": "reference",
                            "id": 352,
                            "name": "K",
                            "qualifiedName": "K",
                            "package": "@types/react"
                          }
                        ],
                        "name": "Pick",
                        "qualifiedName": "Pick",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 2547,
                  "name": "callback",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true,
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2548,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 484,
                          "character": 23
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2549,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.setState"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.setState"
          }
        },
        {
          "id": 2560,
          "name": "shouldComponentUpdate",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 606,
              "character": 8
            }
          ],
          "signatures": [
            {
              "id": 2561,
              "name": "shouldComponentUpdate",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExternal": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called to determine whether the change in props and state should trigger a re-render.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Component`"
                  },
                  {
                    "kind": "text",
                    "text": " always returns true.\n"
                  },
                  {
                    "kind": "code",
                    "text": "`PureComponent`"
                  },
                  {
                    "kind": "text",
                    "text": " implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, "
                  },
                  {
                    "kind": "code",
                    "text": "`Component#render`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`componentWillUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": "\nand "
                  },
                  {
                    "kind": "code",
                    "text": "`componentDidUpdate`"
                  },
                  {
                    "kind": "text",
                    "text": " will not be called."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2562,
                  "name": "nextProps",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2595,
                        "name": "PositionedOverlayProps"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2563,
                  "name": "nextState",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "State"
                      }
                    ],
                    "name": "Readonly",
                    "qualifiedName": "Readonly",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2564,
                  "name": "nextContext",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExternal": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "PureComponent.shouldComponentUpdate"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "PureComponent.shouldComponentUpdate"
          }
        },
        {
          "id": 2534,
          "name": "unregisterScrollHandlers",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 226,
              "character": 10,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L226"
            }
          ],
          "signatures": [
            {
              "id": 2535,
              "name": "unregisterScrollHandlers",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Constructors",
          "children": [2506]
        },
        {
          "title": "Properties",
          "children": [2538, 2512, 2510, 2555, 2556, 2511, 2509, 2505]
        },
        {
          "title": "Accessors",
          "children": [2521]
        },
        {
          "title": "Methods",
          "children": [
            2575, 2581, 2590, 2565, 2513, 2517, 2573, 2577, 2515, 2585, 2550,
            2523, 2569, 2536, 2525, 2532, 2519, 2527, 2530, 2539, 2560, 2534
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "line": 69,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L69"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "id": 2595,
              "name": "PositionedOverlayProps"
            },
            {
              "type": "reference",
              "name": "State"
            }
          ],
          "name": "PureComponent",
          "qualifiedName": "React.PureComponent",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 417,
      "name": "AccountConnectionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 421,
          "name": "accountName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the service"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 424,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Action for account connection"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 422,
          "name": "avatarUrl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "URL for the user’s avatar image"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L23"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 423,
          "name": "connected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set if the account is connected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 419,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display as additional details"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L17"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 420,
          "name": "termsOfService",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display as terms of service"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L19"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 418,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display as title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L15"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [421, 424, 422, 423, 419, 420, 418]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "line": 13,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L13"
        }
      ]
    },
    {
      "id": 140,
      "name": "Action",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 143,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 142,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 145,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 141,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 144,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 146,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 147,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 148,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 149,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 150,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 151,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [143, 142, 145, 141, 144]
        },
        {
          "title": "Methods",
          "children": [146, 148, 150]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 94,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L94"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 174,
          "name": "DisableableAction"
        },
        {
          "type": "reference",
          "id": 187,
          "name": "DestructableAction"
        },
        {
          "type": "reference",
          "id": 200,
          "name": "IconableAction"
        },
        {
          "type": "reference",
          "id": 213,
          "name": "LoadableAction"
        },
        {
          "type": "reference",
          "id": 226,
          "name": "OutlineableAction"
        },
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 239,
      "name": "ActionListItemDescriptor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 240,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 183,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L183"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "id": 191,
            "name": "DestructableAction.accessibilityLabel"
          }
        },
        {
          "id": 251,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the action is active or not"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 202,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L202"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 241,
          "name": "badge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Badge component"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 185,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L185"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 242,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 244,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 187,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L187"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 243,
                  "name": "status",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 186,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L186"
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "new"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [244, 243]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/types.ts",
                  "line": 185,
                  "character": 10,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L185"
                }
              ]
            }
          }
        },
        {
          "id": 255,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 190,
            "name": "DestructableAction.content"
          }
        },
        {
          "id": 264,
          "name": "destructive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Destructive action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 151,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L151"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 188,
            "name": "DestructableAction.destructive"
          }
        },
        {
          "id": 253,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the action is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L146"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 175,
            "name": "DisableableAction.disabled"
          }
        },
        {
          "id": 250,
          "name": "ellipsis",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Add an ellipsis suffix to action content"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 200,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L200"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 257,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 193,
            "name": "DestructableAction.external"
          }
        },
        {
          "id": 245,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional hint text to display with item"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 190,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L190"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 246,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Source of the icon"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 192,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L192"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        },
        {
          "id": 254,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 189,
            "name": "DestructableAction.id"
          }
        },
        {
          "id": 247,
          "name": "image",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Image source"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 194,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L194"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 248,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prefix source"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 196,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L196"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 252,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a role for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 204,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L204"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 249,
          "name": "suffix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Suffix source"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 198,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L198"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 256,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 192,
            "name": "DestructableAction.url"
          }
        },
        {
          "id": 258,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 259,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 195,
                "name": "DestructableAction.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 194,
            "name": "DestructableAction.onAction"
          }
        },
        {
          "id": 260,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 261,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 197,
                "name": "DestructableAction.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 196,
            "name": "DestructableAction.onMouseEnter"
          }
        },
        {
          "id": 262,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 263,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 199,
                "name": "DestructableAction.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 198,
            "name": "DestructableAction.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            240, 251, 241, 255, 264, 253, 250, 257, 245, 246, 254, 247, 248,
            252, 249, 256
          ]
        },
        {
          "title": "Methods",
          "children": [258, 260, 262]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 179,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L179"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 174,
          "name": "DisableableAction"
        },
        {
          "type": "reference",
          "id": 187,
          "name": "DestructableAction"
        }
      ]
    },
    {
      "id": 433,
      "name": "ActionListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 436,
          "name": "actionRole",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a specific role attribute for each action in the list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 434,
          "name": "items",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of actions for list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L16"
            }
          ],
          "type": {
            "type": "typeOperator",
            "operator": "readonly",
            "target": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 239,
                "name": "ActionListItemDescriptor"
              }
            }
          }
        },
        {
          "id": 437,
          "name": "onActionAnyItem",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L22"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 438,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/types.ts",
                  "line": 106,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
                }
              ],
              "signatures": [
                {
                  "id": 439,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Callback when any item is clicked or keypressed"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 435,
          "name": "sections",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of sectioned action items"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L18"
            }
          ],
          "type": {
            "type": "typeOperator",
            "operator": "readonly",
            "target": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 265,
                "name": "ActionListSection"
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [436, 434, 437, 435]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 14,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L14"
        }
      ]
    },
    {
      "id": 265,
      "name": "ActionListSection",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 267,
          "name": "items",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of action items for the list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 211,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L211"
            }
          ],
          "type": {
            "type": "typeOperator",
            "operator": "readonly",
            "target": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 239,
                "name": "ActionListItemDescriptor"
              }
            }
          }
        },
        {
          "id": 266,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Section title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 209,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L209"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [267, 266]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 207,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L207"
        }
      ]
    },
    {
      "id": 444,
      "name": "ActionMenuProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 445,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of page-level secondary actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L15"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 286,
              "name": "MenuActionDescriptor"
            }
          }
        },
        {
          "id": 446,
          "name": "groups",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of page-level action groups"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L17"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 306,
              "name": "MenuGroupDescriptor"
            }
          }
        },
        {
          "id": 447,
          "name": "rollup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Roll up all actions into a Popover > ActionList"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 448,
          "name": "rollupActionsLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for rolled up actions activator"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 449,
          "name": "onActionRollup",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L23"
            }
          ],
          "signatures": [
            {
              "id": 450,
              "name": "onActionRollup",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback that returns true when secondary actions are rolled up into action groups, and false when not"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 451,
                  "name": "hasRolledUp",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [445, 446, 447, 448]
        },
        {
          "title": "Methods",
          "children": [449]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "line": 13,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L13"
        }
      ]
    },
    {
      "id": 455,
      "name": "AlphaCardProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 457,
          "name": "background",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Background color"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'surface'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "CardBackgroundColorTokenScale"
          }
        },
        {
          "id": 456,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L21"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 458,
          "name": "padding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The spacing around the card"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": []
              },
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npadding='4'\npadding={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L32"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 459,
          "name": "roundedAbove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Border radius value above a set breakpoint"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L34"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BreakpointsAlias"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [457, 456, 458, 459]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "line": 20,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L20"
        }
      ]
    },
    {
      "id": 514,
      "name": "AlphaStackProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 517,
          "name": "align",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal alignment of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Align"
          }
        },
        {
          "id": 521,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-activedescendant"
          }
        },
        {
          "id": 522,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-atomic"
          }
        },
        {
          "id": 523,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-autocomplete"
          }
        },
        {
          "id": 524,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-busy"
          }
        },
        {
          "id": 525,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-checked"
          }
        },
        {
          "id": 526,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colcount"
          }
        },
        {
          "id": 527,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colindex"
          }
        },
        {
          "id": 528,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colspan"
          }
        },
        {
          "id": 529,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-controls"
          }
        },
        {
          "id": 530,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-current"
          }
        },
        {
          "id": 531,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-describedby"
          }
        },
        {
          "id": 532,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-details"
          }
        },
        {
          "id": 533,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-disabled"
          }
        },
        {
          "id": 534,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-dropeffect"
          }
        },
        {
          "id": 535,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-errormessage"
          }
        },
        {
          "id": 536,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-expanded"
          }
        },
        {
          "id": 537,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-flowto"
          }
        },
        {
          "id": 538,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-grabbed"
          }
        },
        {
          "id": 539,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-haspopup"
          }
        },
        {
          "id": 540,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-hidden"
          }
        },
        {
          "id": 541,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-invalid"
          }
        },
        {
          "id": 542,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-keyshortcuts"
          }
        },
        {
          "id": 543,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-label"
          }
        },
        {
          "id": 544,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-labelledby"
          }
        },
        {
          "id": 545,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-level"
          }
        },
        {
          "id": 546,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-live"
          }
        },
        {
          "id": 547,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-modal"
          }
        },
        {
          "id": 548,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiline"
          }
        },
        {
          "id": 549,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiselectable"
          }
        },
        {
          "id": 550,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-orientation"
          }
        },
        {
          "id": 551,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-owns"
          }
        },
        {
          "id": 552,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-placeholder"
          }
        },
        {
          "id": 553,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-posinset"
          }
        },
        {
          "id": 554,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-pressed"
          }
        },
        {
          "id": 555,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-readonly"
          }
        },
        {
          "id": 556,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-relevant"
          }
        },
        {
          "id": 557,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-required"
          }
        },
        {
          "id": 558,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-roledescription"
          }
        },
        {
          "id": 559,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowcount"
          }
        },
        {
          "id": 560,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowindex"
          }
        },
        {
          "id": 561,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowspan"
          }
        },
        {
          "id": 562,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-selected"
          }
        },
        {
          "id": 563,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-setsize"
          }
        },
        {
          "id": 564,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-sort"
          }
        },
        {
          "id": 565,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemax"
          }
        },
        {
          "id": 566,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemin"
          }
        },
        {
          "id": 567,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuenow"
          }
        },
        {
          "id": 568,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuetext"
          }
        },
        {
          "id": 516,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "HTML Element type"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'div'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        },
        {
          "id": 515,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L20"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 518,
          "name": "gap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The spacing between children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Gap"
          }
        },
        {
          "id": 519,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "HTML id attribute"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 520,
          "name": "reverseOrder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Reverse the render order of child items"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
            533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
            546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
            559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 516, 515, 518,
            519, 520
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "line": 19,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L19"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "AriaAttributes",
          "qualifiedName": "React.AriaAttributes",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 409,
      "name": "AppProviderProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 413,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the application"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L40"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 412,
          "name": "features",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "For toggling features"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "FeaturesConfig"
          }
        },
        {
          "id": 410,
          "name": "i18n",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L34"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "TranslationDictionary"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "TranslationDictionary"
                }
              }
            ]
          }
        },
        {
          "id": 411,
          "name": "linkComponent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A custom component to use for all links used by Polaris components"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "LinkLikeComponent"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [413, 412, 410, 411]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/AppProvider/AppProvider.tsx",
          "line": 32,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AppProvider/AppProvider.tsx#L32"
        }
      ]
    },
    {
      "id": 1504,
      "name": "AppliedFilterInterface",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1505,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique key used to identify the applied filter"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1506,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A label for the applied filter"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L42"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1507,
          "name": "onRemove",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L44"
            }
          ],
          "signatures": [
            {
              "id": 1508,
              "name": "onRemove",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the remove button is pressed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1509,
                  "name": "key",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1505, 1506]
        },
        {
          "title": "Methods",
          "children": [1507]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Filters/Filters.tsx",
          "line": 38,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L38"
        }
      ]
    },
    {
      "id": 578,
      "name": "AutocompleteProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 586,
          "name": "actionBefore",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An action to render above the list of options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L33"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 239,
                "name": "ActionListItemDescriptor"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 587,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 588,
                      "name": "wrapOverflow",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Specifies that if the label is too long it will wrap instead of being hidden"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
                          "line": 35,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L35"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [588]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
                      "line": 33,
                      "character": 44,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L33"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 585,
          "name": "allowMultiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow more than one option to be selected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 591,
          "name": "emptyState",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Is rendered when there are no options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L42"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 579,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the Autocomplete"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 584,
          "name": "listTitle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Title of the list of options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 589,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display loading state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L38"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 580,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of options to be listed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L21"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "SectionDescriptor"
                }
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "OptionDescriptor"
                }
              }
            ]
          }
        },
        {
          "id": 583,
          "name": "preferredPosition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The preferred direction to open the popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredPosition"
          }
        },
        {
          "id": 581,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The selected options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L23"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 582,
          "name": "textField",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The text field component attached to the list of options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "JSXElementConstructor",
                    "qualifiedName": "React.JSXElementConstructor",
                    "package": "@types/react"
                  }
                ]
              }
            ],
            "name": "ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          }
        },
        {
          "id": 590,
          "name": "willLoadMoreResults",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if more results will load dynamically"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 595,
          "name": "onLoadMoreResults",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 46,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L46"
            }
          ],
          "signatures": [
            {
              "id": 596,
              "name": "onLoadMoreResults",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the end of the list is reached"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 592,
          "name": "onSelect",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L44"
            }
          ],
          "signatures": [
            {
              "id": 593,
              "name": "onSelect",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the selection of options is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 594,
                  "name": "selected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [586, 585, 591, 579, 584, 589, 580, 583, 581, 582, 590]
        },
        {
          "title": "Methods",
          "children": [595, 592]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "line": 17,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L17"
        }
      ]
    },
    {
      "id": 600,
      "name": "AvatarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 609,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accessible label for the avatar image"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 64,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L64"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 605,
          "name": "customer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the avatar is for a customer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 58,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L58"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 604,
          "name": "initials",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initials of person to display"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 56,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L56"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 603,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the person"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 54,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L54"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 602,
          "name": "shape",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Shape of avatar"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'round'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 52,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L52"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Shape"
          }
        },
        {
          "id": 601,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of avatar"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L47"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        },
        {
          "id": 606,
          "name": "source",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "URL of the avatar image which falls back to initials if the image fails to load"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 60,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L60"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 607,
          "name": "onError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
              "line": 62,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L62"
            }
          ],
          "signatures": [
            {
              "id": 608,
              "name": "onError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired when the image fails to load"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [609, 605, 604, 603, 602, 601, 606]
        },
        {
          "title": "Methods",
          "children": [607]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
          "line": 42,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L42"
        }
      ]
    },
    {
      "id": 613,
      "name": "BackdropProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 614,
          "name": "belowNavigation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L9"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 620,
          "name": "setClosing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                ],
                "name": "SetStateAction",
                "qualifiedName": "React.SetStateAction",
                "package": "@types/react"
              }
            ],
            "name": "Dispatch",
            "qualifiedName": "React.Dispatch",
            "package": "@types/react"
          }
        },
        {
          "id": 615,
          "name": "transparent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L10"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 616,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L11"
            }
          ],
          "signatures": [
            {
              "id": 617,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 618,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L12"
            }
          ],
          "signatures": [
            {
              "id": 619,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [614, 620, 615]
        },
        {
          "title": "Methods",
          "children": [616, 618]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "line": 8,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L8"
        }
      ]
    },
    {
      "id": 157,
      "name": "BadgeAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 158,
          "name": "badge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 125,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L125"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 159,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 161,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 127,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L127"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 160,
                  "name": "status",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 126,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L126"
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "new"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [161, 160]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/types.ts",
                  "line": 125,
                  "character": 10,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L125"
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [158]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 124,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L124"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 306,
          "name": "MenuGroupDescriptor"
        }
      ]
    },
    {
      "id": 662,
      "name": "BannerHandles",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 663,
          "name": "focus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 259,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L259"
            }
          ],
          "signatures": [
            {
              "id": 664,
              "name": "focus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "children": [663]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Banner/Banner.tsx",
          "line": 258,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L258"
        }
      ]
    },
    {
      "id": 650,
      "name": "BannerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 656,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Action for banner"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 46,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L46"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "id": 174,
                "name": "DisableableAction"
              },
              {
                "type": "reference",
                "id": 213,
                "name": "LoadableAction"
              }
            ]
          }
        },
        {
          "id": 655,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The child elements to render in the banner."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L44"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 653,
          "name": "hideIcon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Renders the banner without a status icon."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 652,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Status icon to display in the banner. Use only major icons"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        },
        {
          "id": 657,
          "name": "secondaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Action | Displays a secondary action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L48"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 654,
          "name": "status",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the status of the banner."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L42"
            }
          ],
          "type": {
            "type": "reference",
            "id": 661,
            "name": "BannerStatus"
          }
        },
        {
          "id": 660,
          "name": "stopAnnouncements",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables screen reader announcements when changing the content of the banner"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 52,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L52"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 651,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Title content for the banner."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 658,
          "name": "onDismiss",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Banner/Banner.tsx",
              "line": 50,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L50"
            }
          ],
          "signatures": [
            {
              "id": 659,
              "name": "onDismiss",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when banner is dismissed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [656, 655, 653, 652, 657, 654, 660, 651]
        },
        {
          "title": "Methods",
          "children": [658]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Banner/Banner.tsx",
          "line": 34,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L34"
        }
      ]
    },
    {
      "id": 104,
      "name": "BaseButton",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 113,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 118,
          "name": "ariaChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current checked state of the button when acting as a toggle or switch"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L73"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              }
            ]
          }
        },
        {
          "id": 115,
          "name": "ariaControls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Id of the element the button controls"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 117,
          "name": "ariaDescribedBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that describes the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 116,
          "name": "ariaExpanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells screen reader the controlled element is expanded"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 110,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables the button, disallowing merchant interaction"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 108,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L53"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          }
        },
        {
          "id": 107,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 105,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 111,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Replaces button text with a spinner while a background action is being performed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 112,
          "name": "pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the button in a pressed state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 114,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid WAI-ARIA role to define the semantic value of this element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 109,
          "name": "submit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows the button to submit a form"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 106,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the href attribute of a link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 123,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 79,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L79"
            }
          ],
          "signatures": [
            {
              "id": 124,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus leaves button"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 119,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L75"
            }
          ],
          "signatures": [
            {
              "id": 120,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 121,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 77,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L77"
            }
          ],
          "signatures": [
            {
              "id": 122,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when button becomes focussed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 131,
          "name": "onKeyDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L85"
            }
          ],
          "signatures": [
            {
              "id": 132,
              "name": "onKeyDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keydown event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 133,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 125,
          "name": "onKeyPress",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 81,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L81"
            }
          ],
          "signatures": [
            {
              "id": 126,
              "name": "onKeyPress",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keypress event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 127,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 128,
          "name": "onKeyUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L83"
            }
          ],
          "signatures": [
            {
              "id": 129,
              "name": "onKeyUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keyup event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 130,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 134,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L87"
            }
          ],
          "signatures": [
            {
              "id": 135,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 138,
          "name": "onPointerDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L91"
            }
          ],
          "signatures": [
            {
              "id": 139,
              "name": "onPointerDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when pointerdown event is being triggered"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 136,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L89"
            }
          ],
          "signatures": [
            {
              "id": 137,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            113, 118, 115, 117, 116, 110, 108, 107, 105, 111, 112, 114, 109, 106
          ]
        },
        {
          "title": "Methods",
          "children": [123, 119, 121, 131, 125, 128, 134, 138, 136]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 45,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L45"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 857,
          "name": "ButtonProps"
        },
        {
          "type": "reference",
          "id": 3402,
          "name": "UnstyledButtonProps"
        }
      ]
    },
    {
      "id": 162,
      "name": "BaseCallbackAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 165,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 137,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L137"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 164,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 135,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L135"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 163,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 133,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L133"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 166,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 139,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L139"
            }
          ],
          "signatures": [
            {
              "id": 167,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [165, 164, 163]
        },
        {
          "title": "Methods",
          "children": [166]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 131,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L131"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 168,
          "name": "CallbackAction"
        }
      ]
    },
    {
      "id": 668,
      "name": "BleedProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 676,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-activedescendant"
          }
        },
        {
          "id": 677,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-atomic"
          }
        },
        {
          "id": 678,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-autocomplete"
          }
        },
        {
          "id": 679,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-busy"
          }
        },
        {
          "id": 680,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-checked"
          }
        },
        {
          "id": 681,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colcount"
          }
        },
        {
          "id": 682,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colindex"
          }
        },
        {
          "id": 683,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colspan"
          }
        },
        {
          "id": 684,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-controls"
          }
        },
        {
          "id": 685,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-current"
          }
        },
        {
          "id": 686,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-describedby"
          }
        },
        {
          "id": 687,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-details"
          }
        },
        {
          "id": 688,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-disabled"
          }
        },
        {
          "id": 689,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-dropeffect"
          }
        },
        {
          "id": 690,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-errormessage"
          }
        },
        {
          "id": 691,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-expanded"
          }
        },
        {
          "id": 692,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-flowto"
          }
        },
        {
          "id": 693,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-grabbed"
          }
        },
        {
          "id": 694,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-haspopup"
          }
        },
        {
          "id": 695,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-hidden"
          }
        },
        {
          "id": 696,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-invalid"
          }
        },
        {
          "id": 697,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-keyshortcuts"
          }
        },
        {
          "id": 698,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-label"
          }
        },
        {
          "id": 699,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-labelledby"
          }
        },
        {
          "id": 700,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-level"
          }
        },
        {
          "id": 701,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-live"
          }
        },
        {
          "id": 702,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-modal"
          }
        },
        {
          "id": 703,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiline"
          }
        },
        {
          "id": 704,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiselectable"
          }
        },
        {
          "id": 705,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-orientation"
          }
        },
        {
          "id": 706,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-owns"
          }
        },
        {
          "id": 707,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-placeholder"
          }
        },
        {
          "id": 708,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-posinset"
          }
        },
        {
          "id": 709,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-pressed"
          }
        },
        {
          "id": 710,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-readonly"
          }
        },
        {
          "id": 711,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-relevant"
          }
        },
        {
          "id": 712,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-required"
          }
        },
        {
          "id": 713,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-roledescription"
          }
        },
        {
          "id": 714,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowcount"
          }
        },
        {
          "id": 715,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowindex"
          }
        },
        {
          "id": 716,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowspan"
          }
        },
        {
          "id": 717,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-selected"
          }
        },
        {
          "id": 718,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-setsize"
          }
        },
        {
          "id": 719,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-sort"
          }
        },
        {
          "id": 720,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemax"
          }
        },
        {
          "id": 721,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemin"
          }
        },
        {
          "id": 722,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuenow"
          }
        },
        {
          "id": 723,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuetext"
          }
        },
        {
          "id": 669,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L15"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 671,
          "name": "marginBlock",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative vertical space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L19"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 673,
          "name": "marginBlockEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative bottom space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 672,
          "name": "marginBlockStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative top space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L21"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 670,
          "name": "marginInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative horizontal space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L17"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 675,
          "name": "marginInlineEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative right space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 674,
          "name": "marginInlineStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Negative left space around children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
            689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
            702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
            715, 716, 717, 718, 719, 720, 721, 722, 723, 669, 671, 673, 672,
            670, 675, 674
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
          "line": 14,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L14"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "AriaAttributes",
          "qualifiedName": "React.AriaAttributes",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 727,
      "name": "BoxProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 772,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-activedescendant"
          }
        },
        {
          "id": 773,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-atomic"
          }
        },
        {
          "id": 774,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-autocomplete"
          }
        },
        {
          "id": 775,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-busy"
          }
        },
        {
          "id": 776,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-checked"
          }
        },
        {
          "id": 777,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colcount"
          }
        },
        {
          "id": 778,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colindex"
          }
        },
        {
          "id": 779,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colspan"
          }
        },
        {
          "id": 780,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-controls"
          }
        },
        {
          "id": 781,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-current"
          }
        },
        {
          "id": 782,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-describedby"
          }
        },
        {
          "id": 783,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-details"
          }
        },
        {
          "id": 784,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-disabled"
          }
        },
        {
          "id": 785,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-dropeffect"
          }
        },
        {
          "id": 786,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-errormessage"
          }
        },
        {
          "id": 787,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-expanded"
          }
        },
        {
          "id": 788,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-flowto"
          }
        },
        {
          "id": 789,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-grabbed"
          }
        },
        {
          "id": 790,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-haspopup"
          }
        },
        {
          "id": 791,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-hidden"
          }
        },
        {
          "id": 792,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-invalid"
          }
        },
        {
          "id": 793,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-keyshortcuts"
          }
        },
        {
          "id": 794,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-label"
          }
        },
        {
          "id": 795,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-labelledby"
          }
        },
        {
          "id": 796,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-level"
          }
        },
        {
          "id": 797,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-live"
          }
        },
        {
          "id": 798,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-modal"
          }
        },
        {
          "id": 799,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiline"
          }
        },
        {
          "id": 800,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiselectable"
          }
        },
        {
          "id": 801,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-orientation"
          }
        },
        {
          "id": 802,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-owns"
          }
        },
        {
          "id": 803,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-placeholder"
          }
        },
        {
          "id": 804,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-posinset"
          }
        },
        {
          "id": 805,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-pressed"
          }
        },
        {
          "id": 806,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-readonly"
          }
        },
        {
          "id": 807,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-relevant"
          }
        },
        {
          "id": 808,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-required"
          }
        },
        {
          "id": 809,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-roledescription"
          }
        },
        {
          "id": 810,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowcount"
          }
        },
        {
          "id": 811,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowindex"
          }
        },
        {
          "id": 812,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowspan"
          }
        },
        {
          "id": 813,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-selected"
          }
        },
        {
          "id": 814,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-setsize"
          }
        },
        {
          "id": 815,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-sort"
          }
        },
        {
          "id": 816,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemax"
          }
        },
        {
          "id": 817,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemin"
          }
        },
        {
          "id": 818,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuenow"
          }
        },
        {
          "id": 819,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuetext"
          }
        },
        {
          "id": 729,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "HTML Element type"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'div'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L75"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        },
        {
          "id": 730,
          "name": "background",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Background color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 77,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L77"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BackgroundColors"
          }
        },
        {
          "id": 731,
          "name": "border",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 79,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L79"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 732,
          "name": "borderBlockEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical end border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 81,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L81"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 743,
          "name": "borderBlockEndWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical end border width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 103,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L103"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ShapeBorderWidthScale"
          }
        },
        {
          "id": 735,
          "name": "borderBlockStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical start border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L87"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 742,
          "name": "borderBlockStartWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical start border width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 101,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L101"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ShapeBorderWidthScale"
          }
        },
        {
          "id": 734,
          "name": "borderInlineEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal end border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L85"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 745,
          "name": "borderInlineEndWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal end border width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 107,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L107"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ShapeBorderWidthScale"
          }
        },
        {
          "id": 733,
          "name": "borderInlineStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal start border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L83"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 744,
          "name": "borderInlineStartWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal start border width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 105,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L105"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ShapeBorderWidthScale"
          }
        },
        {
          "id": 736,
          "name": "borderRadius",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L89"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadiusTokenScale"
          }
        },
        {
          "id": 738,
          "name": "borderRadiusEndEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical end horizontal end border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 93,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L93"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadiusTokenScale"
          }
        },
        {
          "id": 737,
          "name": "borderRadiusEndStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical end horizontal start border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L91"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadiusTokenScale"
          }
        },
        {
          "id": 740,
          "name": "borderRadiusStartEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical start horizontal end border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 97,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L97"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadiusTokenScale"
          }
        },
        {
          "id": 739,
          "name": "borderRadiusStartStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical start horizontal start border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 95,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L95"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadiusTokenScale"
          }
        },
        {
          "id": 741,
          "name": "borderWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Border width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 99,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L99"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ShapeBorderWidthScale"
          }
        },
        {
          "id": 728,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L71"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 746,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Color of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 109,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L109"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ColorTokenScale"
          }
        },
        {
          "id": 747,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "HTML id attribute"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 111,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L111"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 764,
          "name": "insetBlockEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Bottom position of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 169,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L169"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 763,
          "name": "insetBlockStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Top position of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 167,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L167"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 766,
          "name": "insetInlineEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Right position of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 173,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L173"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 765,
          "name": "insetInlineStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Left position of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 171,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L171"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 750,
          "name": "maxWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Maximum width of container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 117,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L117"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 748,
          "name": "minHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Minimum height of container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 113,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L113"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 749,
          "name": "minWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Minimum width of container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 115,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L115"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 767,
          "name": "opacity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Opacity of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 175,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L175"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 768,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Outline style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 177,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L177"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        },
        {
          "id": 751,
          "name": "overflowX",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clip horizontal content of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 119,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L119"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Overflow"
          }
        },
        {
          "id": 752,
          "name": "overflowY",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Clip vertical content of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 121,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L121"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Overflow"
          }
        },
        {
          "id": 753,
          "name": "padding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npadding='4'\npadding={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 127,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L127"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 755,
          "name": "paddingBlockEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npaddingBlockEnd='4'\npaddingBlockEnd={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 139,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L139"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 754,
          "name": "paddingBlockStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npaddingBlockStart='4'\npaddingBlockStart={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 133,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L133"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 757,
          "name": "paddingInlineEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal end spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npaddingInlineEnd='4'\npaddingInlineEnd={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 151,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L151"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 756,
          "name": "paddingInlineStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal start spacing around children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\npaddingInlineStart='4'\npaddingInlineStart={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 145,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L145"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 762,
          "name": "position",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Position of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 165,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L165"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Position"
          }
        },
        {
          "id": 769,
          "name": "printHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the contents during print"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 179,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L179"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 758,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Aria role"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 153,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L153"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "status"
              },
              {
                "type": "literal",
                "value": "combobox"
              },
              {
                "type": "literal",
                "value": "presentation"
              }
            ]
          }
        },
        {
          "id": 759,
          "name": "shadow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Shadow on box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 158,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L158"
            }
          ],
          "type": {
            "type": "reference",
            "name": "DepthShadowAlias"
          }
        },
        {
          "id": 760,
          "name": "tabIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set tab order"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 160,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L160"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 770,
          "name": "visuallyHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the contents (still announced by screenreader)"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 181,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L181"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 761,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Width of container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 162,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L162"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 771,
          "name": "zIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "z-index of box"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Box/Box.tsx",
              "line": 183,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L183"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
            785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
            798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
            811, 812, 813, 814, 815, 816, 817, 818, 819, 729, 730, 731, 732,
            743, 735, 742, 734, 745, 733, 744, 736, 738, 737, 740, 739, 741,
            728, 746, 747, 764, 763, 766, 765, 750, 748, 749, 767, 768, 751,
            752, 753, 755, 754, 757, 756, 762, 769, 758, 759, 760, 770, 761, 771
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Box/Box.tsx",
          "line": 70,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L70"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "AriaAttributes",
          "qualifiedName": "React.AriaAttributes",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 823,
      "name": "BreadcrumbsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 825,
          "name": "backAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Back action link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx#L16"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 152,
                "name": "LinkAction"
              },
              {
                "type": "reference",
                "id": 168,
                "name": "CallbackAction"
              }
            ]
          }
        },
        {
          "id": 824,
          "name": "breadcrumbs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Collection of breadcrumbs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx#L14"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 152,
                "name": "LinkAction"
              },
              {
                "type": "reference",
                "id": 168,
                "name": "CallbackAction"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 152,
                      "name": "LinkAction"
                    },
                    {
                      "type": "reference",
                      "id": 168,
                      "name": "CallbackAction"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [825, 824]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
          "line": 12,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx#L12"
        }
      ]
    },
    {
      "id": 910,
      "name": "ButtonGroupProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 916,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Button components"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 914,
          "name": "connectedTop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Remove top left and right border radius"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 913,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Buttons will stretch/shrink to occupy the full width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L17"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 915,
          "name": "noWrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prevent buttons in button group from wrapping to next line"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 912,
          "name": "segmented",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Join buttons as segmented group"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 911,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the space between button group items"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [916, 914, 913, 915, 912, 911]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L11"
        }
      ]
    },
    {
      "id": 857,
      "name": "ButtonProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 880,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 113,
            "name": "BaseButton.accessibilityLabel"
          }
        },
        {
          "id": 885,
          "name": "ariaChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current checked state of the button when acting as a toggle or switch"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L73"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 118,
            "name": "BaseButton.ariaChecked"
          }
        },
        {
          "id": 882,
          "name": "ariaControls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Id of the element the button controls"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 115,
            "name": "BaseButton.ariaControls"
          }
        },
        {
          "id": 884,
          "name": "ariaDescribedBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that describes the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 117,
            "name": "BaseButton.ariaDescribedBy"
          }
        },
        {
          "id": 883,
          "name": "ariaExpanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells screen reader the controlled element is expanded"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 116,
            "name": "BaseButton.ariaExpanded"
          }
        },
        {
          "id": 858,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L26"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ]
          }
        },
        {
          "id": 870,
          "name": "connectedDisclosure",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disclosure button connected right of the button. Toggles a popover action list."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L53"
            }
          ],
          "type": {
            "type": "reference",
            "id": 325,
            "name": "ConnectedDisclosure"
          }
        },
        {
          "id": 871,
          "name": "dataPrimaryLink",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether or not the button is the primary navigation link when rendered inside of an "
              },
              {
                "kind": "code",
                "text": "`IndexTable.Row`"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 860,
          "name": "destructive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates a dangerous or potentially negative action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 877,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables the button, disallowing merchant interaction"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 110,
            "name": "BaseButton.disabled"
          }
        },
        {
          "id": 865,
          "name": "disclosure",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Displays the button with a disclosure icon. Defaults to "
              },
              {
                "kind": "code",
                "text": "`down`"
              },
              {
                "kind": "text",
                "text": " when set to true"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L43"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "select"
              },
              {
                "type": "literal",
                "value": "down"
              },
              {
                "type": "literal",
                "value": "up"
              }
            ]
          }
        },
        {
          "id": 875,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L53"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 108,
            "name": "BaseButton.download"
          }
        },
        {
          "id": 874,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 107,
            "name": "BaseButton.external"
          }
        },
        {
          "id": 864,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows the button to grow to the width of its container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },

        {
          "id": 872,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 105,
            "name": "BaseButton.id"
          }
        },
        {
          "id": 878,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Replaces button text with a spinner while a background action is being performed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 111,
            "name": "BaseButton.loading"
          }
        },
        {
          "id": 867,
          "name": "monochrome",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Makes "
              },
              {
                "kind": "code",
                "text": "`plain`"
              },
              {
                "kind": "text",
                "text": " and "
              },
              {
                "kind": "code",
                "text": "`outline`"
              },
              {
                "kind": "text",
                "text": " Button colors (text, borders, icons) the same as the current text color. Also adds an underline to "
              },
              {
                "kind": "code",
                "text": "`plain`"
              },
              {
                "kind": "text",
                "text": " Buttons"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 863,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 866,
          "name": "plain",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Renders a button that looks like a link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L45"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 879,
          "name": "pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the button in a pressed state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 112,
            "name": "BaseButton.pressed"
          }
        },
        {
          "id": 859,
          "name": "primary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Provides extra visual weight and identifies the primary action in a set of buttons"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 868,
          "name": "removeUnderline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes underline from button text (including on interaction) when "
              },
              {
                "kind": "code",
                "text": "`monochrome`"
              },
              {
                "kind": "text",
                "text": " and "
              },
              {
                "kind": "code",
                "text": "`plain`"
              },
              {
                "kind": "text",
                "text": " are true"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 881,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid WAI-ARIA role to define the semantic value of this element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 114,
            "name": "BaseButton.role"
          }
        },
        {
          "id": 861,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the size of the button, giving it more or less padding"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L35"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "medium"
              },
              {
                "type": "literal",
                "value": "large"
              },
              {
                "type": "literal",
                "value": "slim"
              }
            ]
          }
        },
        {
          "id": 876,
          "name": "submit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows the button to submit a form"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 109,
            "name": "BaseButton.submit"
          }
        },
        {
          "id": 862,
          "name": "textAlign",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Changes the inner text alignment of the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Button/Button.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L37"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "start"
              },
              {
                "type": "literal",
                "value": "end"
              },
              {
                "type": "literal",
                "value": "center"
              },
              {
                "type": "literal",
                "value": "left"
              },
              {
                "type": "literal",
                "value": "right"
              }
            ]
          }
        },
        {
          "id": 873,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the href attribute of a link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 106,
            "name": "BaseButton.url"
          }
        },
        {
          "id": 890,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 79,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L79"
            }
          ],
          "signatures": [
            {
              "id": 891,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus leaves button"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 124,
                "name": "BaseButton.onBlur"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 123,
            "name": "BaseButton.onBlur"
          }
        },
        {
          "id": 886,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L75"
            }
          ],
          "signatures": [
            {
              "id": 887,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 120,
                "name": "BaseButton.onClick"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 119,
            "name": "BaseButton.onClick"
          }
        },
        {
          "id": 888,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 77,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L77"
            }
          ],
          "signatures": [
            {
              "id": 889,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when button becomes focussed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 122,
                "name": "BaseButton.onFocus"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 121,
            "name": "BaseButton.onFocus"
          }
        },
        {
          "id": 898,
          "name": "onKeyDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L85"
            }
          ],
          "signatures": [
            {
              "id": 899,
              "name": "onKeyDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keydown event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 900,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 132,
                "name": "BaseButton.onKeyDown"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 131,
            "name": "BaseButton.onKeyDown"
          }
        },
        {
          "id": 892,
          "name": "onKeyPress",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 81,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L81"
            }
          ],
          "signatures": [
            {
              "id": 893,
              "name": "onKeyPress",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keypress event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 894,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 126,
                "name": "BaseButton.onKeyPress"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 125,
            "name": "BaseButton.onKeyPress"
          }
        },
        {
          "id": 895,
          "name": "onKeyUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L83"
            }
          ],
          "signatures": [
            {
              "id": 896,
              "name": "onKeyUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keyup event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 897,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 129,
                "name": "BaseButton.onKeyUp"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 128,
            "name": "BaseButton.onKeyUp"
          }
        },
        {
          "id": 901,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L87"
            }
          ],
          "signatures": [
            {
              "id": 902,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 135,
                "name": "BaseButton.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 134,
            "name": "BaseButton.onMouseEnter"
          }
        },
        {
          "id": 905,
          "name": "onPointerDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L91"
            }
          ],
          "signatures": [
            {
              "id": 906,
              "name": "onPointerDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when pointerdown event is being triggered"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 139,
                "name": "BaseButton.onPointerDown"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 138,
            "name": "BaseButton.onPointerDown"
          }
        },
        {
          "id": 903,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L89"
            }
          ],
          "signatures": [
            {
              "id": 904,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 137,
                "name": "BaseButton.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 136,
            "name": "BaseButton.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            880, 885, 882, 884, 883, 858, 870, 871, 860, 877, 865, 875, 874,
            864, 869, 872, 878, 867, 863, 866, 879, 859, 868, 881, 861, 876,
            862, 873
          ]
        },
        {
          "title": "Methods",
          "children": [890, 886, 888, 898, 892, 895, 901, 905, 903]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Button/Button.tsx",
          "line": 24,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L24"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 104,
          "name": "BaseButton"
        }
      ]
    },
    {
      "id": 168,
      "name": "CallbackAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 171,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 137,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L137"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 165,
            "name": "BaseCallbackAction.accessibilityLabel"
          }
        },
        {
          "id": 170,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 135,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L135"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 164,
            "name": "BaseCallbackAction.content"
          }
        },
        {
          "id": 169,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 133,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L133"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 163,
            "name": "BaseCallbackAction.id"
          }
        },
        {
          "id": 172,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 139,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L139"
            }
          ],
          "signatures": [
            {
              "id": 173,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 167,
                "name": "BaseCallbackAction.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 166,
            "name": "BaseCallbackAction.onAction"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [171, 170, 169]
        },
        {
          "title": "Methods",
          "children": [172]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 142,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L142"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 162,
          "name": "BaseCallbackAction"
        }
      ]
    },
    {
      "id": 920,
      "name": "CalloutCardProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 921,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the callout card."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L18"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 923,
          "name": "illustration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "URL to the card illustration"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 924,
          "name": "primaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary action for the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 925,
          "name": "secondaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Secondary action for the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 922,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The title of the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L20"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 926,
          "name": "onDismiss",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L28"
            }
          ],
          "signatures": [
            {
              "id": 927,
              "name": "onDismiss",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when banner is dismissed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [921, 923, 924, 925, 922]
        },
        {
          "title": "Methods",
          "children": [926]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "line": 16,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L16"
        }
      ]
    },
    {
      "id": 931,
      "name": "CaptionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 932,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to use as a graph label or timestamp"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Caption/Caption.tsx",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Caption/Caption.tsx#L7"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [932]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Caption/Caption.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Caption/Caption.tsx#L5"
        }
      ]
    },
    {
      "id": 969,
      "name": "CardHeaderProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 971,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Header/Header.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Header/Header.tsx#L12"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 174,
              "name": "DisableableAction"
            }
          }
        },
        {
          "id": 972,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Header/Header.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Header/Header.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 970,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Header/Header.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Header/Header.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [971, 972, 970]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/components/Header/Header.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Header/Header.tsx#L10"
        }
      ]
    },
    {
      "id": 950,
      "name": "CardProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 955,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Card header actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L33"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 174,
              "name": "DisableableAction"
            }
          }
        },
        {
          "id": 952,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 959,
          "name": "footerActionAlignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Alignment of the footer actions on the card, defaults to right"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L41"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "left"
              },
              {
                "type": "literal",
                "value": "right"
              }
            ]
          }
        },
        {
          "id": 960,
          "name": "hideOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow the card to be hidden when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 956,
          "name": "primaryFooterAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary action in the card footer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L35"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          }
        },
        {
          "id": 957,
          "name": "secondaryFooterActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Secondary actions in the card footer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L37"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 268,
              "name": "ComplexAction"
            }
          }
        },
        {
          "id": 958,
          "name": "secondaryFooterActionsDisclosureText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content of the disclosure button rendered when there is more than one secondary footer action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 954,
          "name": "sectioned",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Auto wrap content in section"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 953,
          "name": "subdued",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A less prominent card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 951,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Title content for the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/Card.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [955, 952, 959, 960, 956, 957, 958, 954, 953, 951]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 23,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L23"
        }
      ]
    },
    {
      "id": 961,
      "name": "CardSectionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 968,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L19"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 268,
              "name": "ComplexAction"
            }
          }
        },
        {
          "id": 963,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 965,
          "name": "flush",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 966,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 967,
          "name": "hideOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow the card to be hidden when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 964,
          "name": "subdued",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 962,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [968, 963, 965, 966, 967, 964, 962]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/components/Section/Section.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Section/Section.tsx#L11"
        }
      ]
    },
    {
      "id": 973,
      "name": "CardSubsectionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 974,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Card/components/Subsection/Subsection.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Subsection/Subsection.tsx#L6"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [974]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/components/Subsection/Subsection.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/components/Subsection/Subsection.tsx#L5"
        }
      ]
    },
    {
      "id": 329,
      "name": "CheckboxHandles",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 330,
          "name": "focus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 361,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L361"
            }
          ],
          "signatures": [
            {
              "id": 331,
              "name": "focus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "children": [330]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 360,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L360"
        }
      ]
    },
    {
      "id": 978,
      "name": "CheckboxProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 979,
          "name": "ariaControls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that is controlled by the checkbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 980,
          "name": "ariaDescribedBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that describes the checkbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 983,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Checkbox is selected. "
              },
              {
                "kind": "code",
                "text": "`indeterminate`"
              },
              {
                "kind": "text",
                "text": " shows a horizontal line in the checkbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L30"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "indeterminate"
              }
            ]
          }
        },
        {
          "id": 985,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 989,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display an error message"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L42"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "reference",
                "id": 103,
                "name": "Error"
              }
            ]
          }
        },
        {
          "id": 984,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional text to aide in use"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L32"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 986,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 981,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the checkbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 982,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 987,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L38"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 988,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Value for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 996,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L48"
            }
          ],
          "signatures": [
            {
              "id": 997,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus is removed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 990,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L44"
            }
          ],
          "signatures": [
            {
              "id": 991,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when checkbox is toggled"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 992,
                  "name": "newChecked",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 993,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 994,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
              "line": 46,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L46"
            }
          ],
          "signatures": [
            {
              "id": 995,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when checkbox is focussed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [979, 980, 983, 985, 989, 984, 986, 981, 982, 987, 988]
        },
        {
          "title": "Methods",
          "children": [996, 990, 994]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "line": 20,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L20"
        }
      ]
    },
    {
      "id": 1001,
      "name": "ChoiceListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1006,
          "name": "allowMultiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow merchants to select multiple options at once"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1003,
          "name": "choices",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of choices"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L35"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "Choice"
            }
          }
        },
        {
          "id": 1009,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable all choices *"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1008,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display an error message"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L45"
            }
          ],
          "type": {
            "type": "reference",
            "id": 103,
            "name": "Error"
          }
        },
        {
          "id": 1005,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1004,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of selected choices"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L37"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 1002,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for list of choices"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L33"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1007,
          "name": "titleHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Toggles display of the title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1010,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L49"
            }
          ],
          "signatures": [
            {
              "id": 1011,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the selected choices change"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1012,
                  "name": "selected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                },
                {
                  "id": 1013,
                  "name": "name",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1006, 1003, 1009, 1008, 1005, 1004, 1002, 1007]
        },
        {
          "title": "Methods",
          "children": [1010]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "line": 31,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L31"
        }
      ]
    },
    {
      "id": 1017,
      "name": "CollapsibleProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1025,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the collapsible."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1019,
          "name": "expandOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Option to show collapsible content when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1018,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering component’s aria-controls prop."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1020,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Toggle whether the collapsible is expanded or not."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1022,
          "name": "preventMeasuringOnChildrenUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Re-measuring is no longer necessary on children update *"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1021,
          "name": "transition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Override transition properties. When set to false, disables transition completely."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "transition={{duration: 'var(--p-duration-150)', timingFunction: 'var(--p-ease-in-out)'}}"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L24"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "reference",
                "name": "Transition"
              }
            ]
          }
        },
        {
          "id": 1023,
          "name": "onAnimationEnd",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L28"
            }
          ],
          "signatures": [
            {
              "id": 1024,
              "name": "onAnimationEnd",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the animation completes."
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1025, 1019, 1018, 1020, 1022, 1021]
        },
        {
          "title": "Methods",
          "children": [1023]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "line": 14,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L14"
        }
      ]
    },
    {
      "id": 1134,
      "name": "ColorPickerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1137,
          "name": "allowAlpha",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow user to select an alpha value"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1136,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The currently selected color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Color"
          }
        },
        {
          "id": 1138,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow HuePicker to take the full width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1135,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for the element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1139,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L36"
            }
          ],
          "signatures": [
            {
              "id": 1140,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when color is selected"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1141,
                  "name": "color",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 3832,
                    "name": "HSBAColor"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1137, 1136, 1138, 1135]
        },
        {
          "title": "Methods",
          "children": [1139]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ColorPicker/ColorPicker.tsx",
          "line": 26,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ColorPicker/ColorPicker.tsx#L26"
        }
      ]
    },
    {
      "id": 1145,
      "name": "ColumnsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1149,
          "name": "alignItems",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical alignment of children. If not set, inline elements will stretch to the height of the parent."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nalignItems='start'\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Columns/Columns.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ColumnsAlignItems"
          }
        },
        {
          "id": 1150,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-activedescendant"
          }
        },
        {
          "id": 1151,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-atomic"
          }
        },
        {
          "id": 1152,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-autocomplete"
          }
        },
        {
          "id": 1153,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-busy"
          }
        },
        {
          "id": 1154,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-checked"
          }
        },
        {
          "id": 1155,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colcount"
          }
        },
        {
          "id": 1156,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colindex"
          }
        },
        {
          "id": 1157,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colspan"
          }
        },
        {
          "id": 1158,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-controls"
          }
        },
        {
          "id": 1159,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-current"
          }
        },
        {
          "id": 1160,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-describedby"
          }
        },
        {
          "id": 1161,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-details"
          }
        },
        {
          "id": 1162,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-disabled"
          }
        },
        {
          "id": 1163,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-dropeffect"
          }
        },
        {
          "id": 1164,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-errormessage"
          }
        },
        {
          "id": 1165,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-expanded"
          }
        },
        {
          "id": 1166,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-flowto"
          }
        },
        {
          "id": 1167,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-grabbed"
          }
        },
        {
          "id": 1168,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-haspopup"
          }
        },
        {
          "id": 1169,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-hidden"
          }
        },
        {
          "id": 1170,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-invalid"
          }
        },
        {
          "id": 1171,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-keyshortcuts"
          }
        },
        {
          "id": 1172,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-label"
          }
        },
        {
          "id": 1173,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-labelledby"
          }
        },
        {
          "id": 1174,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-level"
          }
        },
        {
          "id": 1175,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-live"
          }
        },
        {
          "id": 1176,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-modal"
          }
        },
        {
          "id": 1177,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiline"
          }
        },
        {
          "id": 1178,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiselectable"
          }
        },
        {
          "id": 1179,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-orientation"
          }
        },
        {
          "id": 1180,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-owns"
          }
        },
        {
          "id": 1181,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-placeholder"
          }
        },
        {
          "id": 1182,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-posinset"
          }
        },
        {
          "id": 1183,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-pressed"
          }
        },
        {
          "id": 1184,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-readonly"
          }
        },
        {
          "id": 1185,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-relevant"
          }
        },
        {
          "id": 1186,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-required"
          }
        },
        {
          "id": 1187,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-roledescription"
          }
        },
        {
          "id": 1188,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowcount"
          }
        },
        {
          "id": 1189,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowindex"
          }
        },
        {
          "id": 1190,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowspan"
          }
        },
        {
          "id": 1191,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-selected"
          }
        },
        {
          "id": 1192,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-setsize"
          }
        },
        {
          "id": 1193,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-sort"
          }
        },
        {
          "id": 1194,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemax"
          }
        },
        {
          "id": 1195,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemin"
          }
        },
        {
          "id": 1196,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuenow"
          }
        },
        {
          "id": 1197,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuetext"
          }
        },
        {
          "id": 1146,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Columns/Columns.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L21"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1147,
          "name": "columns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The number of columns to display. Accepts either a single value or an object of values for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\ncolumns={6}\ncolumns={{xs: 1, sm: 1, md: 3, lg: 6, xl: 6}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Columns/Columns.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Columns"
          }
        },
        {
          "id": 1148,
          "name": "gap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The spacing between children. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\ngap='2'\ngap={{xs: '1', sm: '2', md: '3', lg: '4', xl: '5'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Columns/Columns.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L33"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Gap"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
            1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
            1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
            1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
            1193, 1194, 1195, 1196, 1197, 1146, 1147, 1148
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Columns/Columns.tsx",
          "line": 20,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L20"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "AriaAttributes",
          "qualifiedName": "React.AriaAttributes",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 1206,
      "name": "ComboboxProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1207,
          "name": "activator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The text field component to activate the Popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L21"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 3304,
                "name": "TextFieldProps"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "JSXElementConstructor",
                    "qualifiedName": "React.JSXElementConstructor",
                    "package": "@types/react"
                  }
                ]
              }
            ],
            "name": "ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          }
        },
        {
          "id": 1208,
          "name": "allowMultiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows more than one option to be selected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L23"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1209,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L25"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 2262,
                    "name": "ListboxProps"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        },
        {
          "id": 1212,
          "name": "height",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Height to set on the Popover Pane."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1210,
          "name": "preferredPosition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The preferred direction to open the popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredPosition"
          }
        },
        {
          "id": 1211,
          "name": "willLoadMoreOptions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not more options are available to lazy load when the bottom of the listbox reached. Use the hasMoreResults boolean provided by the GraphQL API of the paginated data."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1215,
          "name": "onClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L35"
            }
          ],
          "signatures": [
            {
              "id": 1216,
              "name": "onClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired when the popover closes"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1213,
          "name": "onScrolledToBottom",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L33"
            }
          ],
          "signatures": [
            {
              "id": 1214,
              "name": "onScrolledToBottom",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired when the bottom of the lisbox is reached. Use to lazy load when listbox option data is paginated."
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1207, 1208, 1209, 1212, 1210, 1211]
        },
        {
          "title": "Methods",
          "children": [1215, 1213]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
          "line": 19,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L19"
        }
      ]
    },
    {
      "id": 268,
      "name": "ComplexAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 271,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 217,
            "name": "LoadableAction.accessibilityLabel"
          }
        },
        {
          "id": 270,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 216,
            "name": "LoadableAction.content"
          }
        },
        {
          "id": 281,
          "name": "destructive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Destructive action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 151,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L151"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 188,
            "name": "DestructableAction.destructive"
          }
        },
        {
          "id": 280,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the action is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L146"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 175,
            "name": "DisableableAction.disabled"
          }
        },
        {
          "id": 273,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 219,
            "name": "LoadableAction.external"
          }
        },
        {
          "id": 282,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Source of the icon"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 156,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L156"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 201,
            "name": "IconableAction.icon"
          }
        },
        {
          "id": 269,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 215,
            "name": "LoadableAction.id"
          }
        },
        {
          "id": 284,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should a spinner be displayed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 161,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L161"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 214,
            "name": "LoadableAction.loading"
          }
        },
        {
          "id": 283,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should action be displayed as an outlined button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 166,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L166"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 227,
            "name": "OutlineableAction.outline"
          }
        },
        {
          "id": 285,
          "name": "plain",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should action be displayed as a plain link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 171,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L171"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "PlainAction.plain"
          }
        },
        {
          "id": 272,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 218,
            "name": "LoadableAction.url"
          }
        },
        {
          "id": 274,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 275,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 221,
                "name": "LoadableAction.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 220,
            "name": "LoadableAction.onAction"
          }
        },
        {
          "id": 276,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 277,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 223,
                "name": "LoadableAction.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 222,
            "name": "LoadableAction.onMouseEnter"
          }
        },
        {
          "id": 278,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 279,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 225,
                "name": "LoadableAction.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 224,
            "name": "LoadableAction.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [271, 270, 281, 280, 273, 282, 269, 284, 283, 285, 272]
        },
        {
          "title": "Methods",
          "children": [274, 276, 278]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 214,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L214"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        },
        {
          "type": "reference",
          "id": 174,
          "name": "DisableableAction"
        },
        {
          "type": "reference",
          "id": 187,
          "name": "DestructableAction"
        },
        {
          "type": "reference",
          "id": 200,
          "name": "IconableAction"
        },
        {
          "type": "reference",
          "id": 226,
          "name": "OutlineableAction"
        },
        {
          "type": "reference",
          "id": 213,
          "name": "LoadableAction"
        },
        {
          "type": "reference",
          "name": "PlainAction"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 286,
          "name": "MenuActionDescriptor"
        }
      ]
    },
    {
      "id": 325,
      "name": "ConnectedDisclosure",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 326,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden label for the connected disclosure button."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'Related actions'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 251,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L251"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 328,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 255,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L255"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 239,
              "name": "ActionListItemDescriptor"
            }
          }
        },
        {
          "id": 327,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the disclosure is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 253,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L253"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [326, 328, 327]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 247,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L247"
        }
      ]
    },
    {
      "id": 1220,
      "name": "ConnectedProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1223,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Connected content"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Connected/Connected.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Connected/Connected.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1221,
          "name": "left",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display on the left"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Connected/Connected.tsx",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Connected/Connected.tsx#L8"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1222,
          "name": "right",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display on the right"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Connected/Connected.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Connected/Connected.tsx#L10"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1223, 1221, 1222]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Connected/Connected.tsx",
          "line": 6,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Connected/Connected.tsx#L6"
        }
      ]
    },
    {
      "id": 1227,
      "name": "ContextualSaveBarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1228,
          "name": "alignContentFlush",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Extend the contents section to be flush with the left edge"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.alignContentFlush"
          }
        },
        {
          "id": 1233,
          "name": "contextControl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a component that is used to help users switch between different contexts"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L49"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.contextControl"
          }
        },
        {
          "id": 1231,
          "name": "discardAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Discard or cancel contextual save bar action with text defaulting to 'Discard'"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L45"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ContextualSaveBarCombinedActionProps"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.discardAction"
          }
        },
        {
          "id": 1232,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Remove the normal max-width on the contextual save bar"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.fullWidth"
          }
        },
        {
          "id": 1229,
          "name": "message",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a string of content that will be rendered to the left of the actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.message"
          }
        },
        {
          "id": 1230,
          "name": "saveAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Save or commit contextual save bar action with text defaulting to 'Save'"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L43"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ContextualSaveBarAction"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.saveAction"
          }
        },
        {
          "id": 1234,
          "name": "secondaryMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a node that is rendered to the left of the discard and save actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L51"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ContextualSaveBarProps1.secondaryMenu"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1228, 1233, 1231, 1232, 1229, 1230, 1234]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "line": 12,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx#L12"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "ContextualSaveBarProps"
        }
      ]
    },
    {
      "id": 1238,
      "name": "DataTableProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1239,
          "name": "columnContentTypes",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L47"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1269,
              "name": "ColumnContentType"
            }
          }
        },
        {
          "id": 1254,
          "name": "defaultSortDirection",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'ascending'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L83"
            }
          ],
          "type": {
            "type": "reference",
            "id": 1268,
            "name": "SortDirection"
          }
        },
        {
          "id": 1265,
          "name": "firstColumnMinWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify a min width for the first column if neccessary"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1264,
          "name": "fixedFirstColumns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Add fixed columns on horizontal scroll."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 1251,
          "name": "footerContent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content centered in the full width cell of the table footer row."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 74,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L74"
            }
          ],
          "type": {
            "type": "reference",
            "id": 1266,
            "name": "TableData"
          }
        },
        {
          "id": 1263,
          "name": "hasFixedFirstColumn",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Add a fixed first column on horizontal scroll. Use fixedFirstColumns={n} instead."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1261,
          "name": "hasZebraStripingOnData",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Add zebra striping to data rows"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 94,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L94"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1240,
          "name": "headings",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of column headings."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L49"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "ReactNode",
              "qualifiedName": "React.ReactNode",
              "package": "@types/react"
            }
          }
        },
        {
          "id": 1248,
          "name": "hideScrollIndicator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 64,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L64"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1252,
          "name": "hoverable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Table row has hover state. Defaults to true."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 76,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L76"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1260,
          "name": "increasedTableDensity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Increased density"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 92,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L92"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1255,
          "name": "initialSortColumnIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The index of the heading that the table rows are initially sorted by. Defaults to the first column."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "0"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 88,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L88"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 1247,
          "name": "rows",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Lists of data points which map to table body rows."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 60,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L60"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "array",
              "elementType": {
                "type": "reference",
                "id": 1266,
                "name": "TableData"
              }
            }
          }
        },
        {
          "id": 1246,
          "name": "showTotalsInFooter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Placement of totals row within table"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 58,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L58"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1253,
          "name": "sortable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 78,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L78"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "boolean"
            }
          }
        },
        {
          "id": 1262,
          "name": "stickyHeader",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Header becomes sticky and pins to top of table when scrolling"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1241,
          "name": "totals",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of numeric column totals, highlighted in the table’s header below column headings. Use empty strings as placeholders for columns with no total."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L51"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1266,
              "name": "TableData"
            }
          }
        },
        {
          "id": 1242,
          "name": "totalsName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Custom totals row heading"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L53"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1243,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 1245,
                  "name": "plural",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
                      "line": 55,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L55"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactNode",
                    "qualifiedName": "React.ReactNode",
                    "package": "@types/react"
                  }
                },
                {
                  "id": 1244,
                  "name": "singular",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
                      "line": 54,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L54"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "name": "ReactNode",
                    "qualifiedName": "React.ReactNode",
                    "package": "@types/react"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [1245, 1244]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
                  "line": 53,
                  "character": 15,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L53"
                }
              ]
            }
          }
        },
        {
          "id": 1249,
          "name": "truncate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Truncate content in first column instead of wrapping."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 68,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L68"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1250,
          "name": "verticalAlign",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical alignment of content in the cells."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'top'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 72,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L72"
            }
          ],
          "type": {
            "type": "reference",
            "name": "VerticalAlign"
          }
        },
        {
          "id": 1256,
          "name": "onSort",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
              "line": 90,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L90"
            }
          ],
          "signatures": [
            {
              "id": 1257,
              "name": "onSort",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired on click or keypress of a sortable column heading."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1258,
                  "name": "headingIndex",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1259,
                  "name": "direction",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1268,
                    "name": "SortDirection"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1239, 1254, 1265, 1264, 1251, 1263, 1261, 1240, 1248, 1252, 1260,
            1255, 1247, 1246, 1253, 1262, 1241, 1242, 1249, 1250
          ]
        },
        {
          "title": "Methods",
          "children": [1256]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
          "line": 45,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L45"
        }
      ]
    },
    {
      "id": 1273,
      "name": "DatePickerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1278,
          "name": "allowRange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow a range of dates to be selected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1284,
          "name": "dayAccessibilityLabelPrefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden prefix text for selected days on single selection date pickers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1280,
          "name": "disableDatesAfter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable selecting dates after this."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Date",
            "qualifiedName": "Date",
            "package": "typescript"
          }
        },
        {
          "id": 1279,
          "name": "disableDatesBefore",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable selecting dates before this."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Date",
            "qualifiedName": "Date",
            "package": "typescript"
          }
        },
        {
          "id": 1281,
          "name": "disableSpecificDates",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable specific dates."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L40"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "Date",
              "qualifiedName": "Date",
              "package": "typescript"
            }
          }
        },
        {
          "id": 1274,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for the element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1276,
          "name": "month",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 1282,
          "name": "multiMonth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The selection can span multiple months"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L42"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1275,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The selected date or range of dates"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L28"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "Date",
                "qualifiedName": "Date",
                "package": "typescript"
              },
              {
                "type": "reference",
                "id": 1292,
                "name": "Range"
              }
            ]
          }
        },
        {
          "id": 1283,
          "name": "weekStartsOn",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "0"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 1277,
          "name": "year",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The year to show"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 1285,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L51"
            }
          ],
          "signatures": [
            {
              "id": 1286,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when date is selected."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1287,
                  "name": "date",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 1292,
                    "name": "Range"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1288,
          "name": "onMonthChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L53"
            }
          ],
          "signatures": [
            {
              "id": 1289,
              "name": "onMonthChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when month is changed."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1290,
                  "name": "month",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 1291,
                  "name": "year",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1278, 1284, 1280, 1279, 1281, 1274, 1276, 1282, 1275, 1283, 1277
          ]
        },
        {
          "title": "Methods",
          "children": [1285, 1288]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "line": 24,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L24"
        }
      ]
    },
    {
      "id": 1298,
      "name": "DescriptionListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1299,
          "name": "items",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of items for list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DescriptionList/DescriptionList.tsx#L17"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "Item"
            }
          }
        },
        {
          "id": 1300,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the spacing between list items"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DescriptionList/DescriptionList.tsx#L19"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "tight"
              },
              {
                "type": "literal",
                "value": "loose"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1299, 1300]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "line": 15,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DescriptionList/DescriptionList.tsx#L15"
        }
      ]
    },
    {
      "id": 187,
      "name": "DestructableAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 191,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 143,
            "name": "Action.accessibilityLabel"
          }
        },
        {
          "id": 190,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 142,
            "name": "Action.content"
          }
        },
        {
          "id": 188,
          "name": "destructive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Destructive action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 151,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L151"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 193,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 145,
            "name": "Action.external"
          }
        },
        {
          "id": 189,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 141,
            "name": "Action.id"
          }
        },
        {
          "id": 192,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 144,
            "name": "Action.url"
          }
        },
        {
          "id": 194,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 195,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 147,
                "name": "Action.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 146,
            "name": "Action.onAction"
          }
        },
        {
          "id": 196,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 197,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 149,
                "name": "Action.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 148,
            "name": "Action.onMouseEnter"
          }
        },
        {
          "id": 198,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 199,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 151,
                "name": "Action.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 150,
            "name": "Action.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [191, 190, 188, 193, 189, 192]
        },
        {
          "title": "Methods",
          "children": [194, 196, 198]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 149,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L149"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 239,
          "name": "ActionListItemDescriptor"
        },
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 174,
      "name": "DisableableAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 178,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 143,
            "name": "Action.accessibilityLabel"
          }
        },
        {
          "id": 177,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 142,
            "name": "Action.content"
          }
        },
        {
          "id": 175,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the action is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L146"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 180,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 145,
            "name": "Action.external"
          }
        },
        {
          "id": 176,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 141,
            "name": "Action.id"
          }
        },
        {
          "id": 179,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 144,
            "name": "Action.url"
          }
        },
        {
          "id": 181,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 182,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 147,
                "name": "Action.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 146,
            "name": "Action.onAction"
          }
        },
        {
          "id": 183,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 184,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 149,
                "name": "Action.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 148,
            "name": "Action.onMouseEnter"
          }
        },
        {
          "id": 185,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 186,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 151,
                "name": "Action.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 150,
            "name": "Action.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [178, 177, 175, 180, 176, 179]
        },
        {
          "title": "Methods",
          "children": [181, 183, 185]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 144,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L144"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 239,
          "name": "ActionListItemDescriptor"
        },
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 1304,
      "name": "DisplayTextProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1307,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DisplayText/DisplayText.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DisplayText/DisplayText.tsx#L22"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1305,
          "name": "element",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name of element to use for text"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'p'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DisplayText/DisplayText.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DisplayText/DisplayText.tsx#L15"
            }
          ],
          "type": {
            "type": "reference",
            "id": 102,
            "name": "HeadingTagName"
          }
        },
        {
          "id": 1306,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of the text"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DisplayText/DisplayText.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DisplayText/DisplayText.tsx#L20"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1307, 1305, 1306]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DisplayText/DisplayText.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DisplayText/DisplayText.tsx#L10"
        }
      ]
    },
    {
      "id": 1311,
      "name": "DividerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1312,
          "name": "borderStyle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Divider border style"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Divider/Divider.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Divider/Divider.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderTokenAlias"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1312]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Divider/Divider.tsx",
          "line": 12,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Divider/Divider.tsx#L12"
        }
      ]
    },
    {
      "id": 1322,
      "name": "DropZoneProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1327,
          "name": "accept",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allowed file types"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L48"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1329,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets an active state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1335,
          "name": "allowMultiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows multiple files to be uploaded at once"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 76,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L76"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1337,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The child elements to render in the dropzone."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 80,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L80"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1336,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets a disabled state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 78,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L78"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1338,
          "name": "dropOnPage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows a file to be dropped anywhere on the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 82,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L82"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1330,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets an error state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1334,
          "name": "errorOverlayText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text that appears in the overlay when set in error state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1326,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for file input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 46,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L46"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1323,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the file input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L40"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1324,
          "name": "labelAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds an action to the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L42"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 1325,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L44"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1339,
          "name": "openFileDialog",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the default file dialog state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 84,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L84"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1331,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Displays an outline border"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 62,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L62"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1332,
          "name": "overlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Displays an overlay on hover"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1333,
          "name": "overlayText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text that appears in the overlay"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1328,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether is a file or an image"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'file'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L53"
            }
          ],
          "type": {
            "type": "reference",
            "name": "DropZoneFileType"
          }
        },
        {
          "id": 1340,
          "name": "variableHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows child content to adjust height"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 86,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L86"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1341,
          "name": "customValidator",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 88,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L88"
            }
          ],
          "signatures": [
            {
              "id": 1342,
              "name": "customValidator",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Adds custom validations"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1343,
                  "name": "file",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "File",
                    "qualifiedName": "File",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 1344,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 90,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L90"
            }
          ],
          "signatures": [
            {
              "id": 1345,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered on click"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1346,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLElement",
                        "qualifiedName": "HTMLElement",
                        "package": "typescript"
                      },
                      {
                        "type": "reference",
                        "name": "MouseEvent",
                        "qualifiedName": "MouseEvent",
                        "package": "typescript"
                      }
                    ],
                    "name": "MouseEvent",
                    "qualifiedName": "React.MouseEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1360,
          "name": "onDragEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L100"
            }
          ],
          "signatures": [
            {
              "id": 1361,
              "name": "onDragEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when one or more files entered the drag area"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1362,
          "name": "onDragLeave",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L102"
            }
          ],
          "signatures": [
            {
              "id": 1363,
              "name": "onDragLeave",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when one or more files left the drag area"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1358,
          "name": "onDragOver",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L98"
            }
          ],
          "signatures": [
            {
              "id": 1359,
              "name": "onDragOver",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when one or more files are dragging over the drag area"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1347,
          "name": "onDrop",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 92,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L92"
            }
          ],
          "signatures": [
            {
              "id": 1348,
              "name": "onDrop",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered on any file drop"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1349,
                  "name": "files",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "File",
                      "qualifiedName": "File",
                      "package": "typescript"
                    }
                  }
                },
                {
                  "id": 1350,
                  "name": "acceptedFiles",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "File",
                      "qualifiedName": "File",
                      "package": "typescript"
                    }
                  }
                },
                {
                  "id": 1351,
                  "name": "rejectedFiles",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "File",
                      "qualifiedName": "File",
                      "package": "typescript"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1352,
          "name": "onDropAccepted",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 94,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L94"
            }
          ],
          "signatures": [
            {
              "id": 1353,
              "name": "onDropAccepted",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when at least one of the files dropped was accepted"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1354,
                  "name": "acceptedFiles",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "File",
                      "qualifiedName": "File",
                      "package": "typescript"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1355,
          "name": "onDropRejected",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L96"
            }
          ],
          "signatures": [
            {
              "id": 1356,
              "name": "onDropRejected",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when at least one of the files dropped was rejected"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1357,
                  "name": "rejectedFiles",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "name": "File",
                      "qualifiedName": "File",
                      "package": "typescript"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1364,
          "name": "onFileDialogClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L104"
            }
          ],
          "signatures": [
            {
              "id": 1365,
              "name": "onFileDialogClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback triggered when the file dialog is canceled"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1327, 1329, 1335, 1337, 1336, 1338, 1330, 1334, 1326, 1323, 1324,
            1325, 1339, 1331, 1332, 1333, 1328, 1340
          ]
        },
        {
          "title": "Methods",
          "children": [1341, 1344, 1360, 1362, 1358, 1347, 1352, 1355, 1364]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
          "line": 38,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L38"
        }
      ]
    },
    {
      "id": 1369,
      "name": "EmptySearchResultProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1371,
          "name": "description",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx#L12"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1370,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx#L11"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1372,
          "name": "withIllustration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1371, 1370, 1372]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx#L10"
        }
      ]
    },
    {
      "id": 1376,
      "name": "EmptyStateProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1383,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary action for empty state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L32"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          }
        },
        {
          "id": 1382,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Elements to display inside empty state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1385,
          "name": "footerContent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Secondary elements to display below empty state actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1381,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the content should span the full width of its container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1377,
          "name": "heading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The empty state heading"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L17"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1378,
          "name": "image",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1380,
          "name": "imageContained",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not to limit the image to the size of its container on large screens"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1379,
          "name": "largeImage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The path to the image to display on large screens"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1384,
          "name": "secondaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Secondary action for empty state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L34"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1383, 1382, 1385, 1381, 1377, 1378, 1380, 1379, 1384]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "line": 15,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L15"
        }
      ]
    },
    {
      "id": 1466,
      "name": "EventListenerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1469,
          "name": "capture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 5,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L5"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseEventProps.capture"
          }
        },
        {
          "id": 1468,
          "name": "event",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 4,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L4"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseEventProps.event"
          }
        },
        {
          "id": 1467,
          "name": "passive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L10"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1470,
          "name": "handler",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L6"
            }
          ],
          "signatures": [
            {
              "id": 1471,
              "name": "handler",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 1472,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "Event",
                    "qualifiedName": "Event",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "BaseEventProps.handler"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "BaseEventProps.handler"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1469, 1468, 1467]
        },
        {
          "title": "Methods",
          "children": [1470]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/EventListener/EventListener.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EventListener/EventListener.tsx#L9"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "BaseEventProps"
        }
      ]
    },
    {
      "id": 1476,
      "name": "ExceptionListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1477,
          "name": "items",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of items for list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ExceptionList/ExceptionList.tsx#L29"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "Item"
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1477]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "line": 27,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ExceptionList/ExceptionList.tsx#L27"
        }
      ]
    },
    {
      "id": 1510,
      "name": "FilterInterface",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1515,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the filter is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1513,
          "name": "filter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The markup for the given filter"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L53"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1516,
          "name": "hideClearButton",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false\nWhether or not the clear button is displayed"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 62,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L62"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1511,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique key used to identify the filter"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1512,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The label for the filter"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1514,
          "name": "shortcut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the filter should have a shortcut popover displayed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1515, 1513, 1516, 1511, 1512, 1514]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Filters/Filters.tsx",
          "line": 47,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L47"
        }
      ]
    },
    {
      "id": 1481,
      "name": "FiltersProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1486,
          "name": "appliedFilters",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Applied filters which are rendered as tags. The remove callback is called with the respective key"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L75"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1504,
              "name": "AppliedFilterInterface"
            }
          }
        },
        {
          "id": 1498,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inline with the controls"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L87"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1503,
          "name": "disableQueryField",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable the query field"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 97,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L97"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1499,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable all filters"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L89"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1485,
          "name": "filters",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L73"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1510,
              "name": "FilterInterface"
            }
          }
        },
        {
          "id": 1484,
          "name": "focused",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the query field is focused"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1500,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional hint text to display below the filters"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L91"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1502,
          "name": "hideQueryField",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the query field"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 95,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L95"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1501,
          "name": "hideTags",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide tags for applied filters"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 93,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L93"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1483,
          "name": "queryPlaceholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Placeholder text for the query field"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1482,
          "name": "queryValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Currently entered text in the query field"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1492,
          "name": "onClearAll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 81,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L81"
            }
          ],
          "signatures": [
            {
              "id": 1493,
              "name": "onClearAll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the reset all button is pressed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1494,
          "name": "onQueryBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L83"
            }
          ],
          "signatures": [
            {
              "id": 1495,
              "name": "onQueryBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the query field is blurred"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1487,
          "name": "onQueryChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 77,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L77"
            }
          ],
          "signatures": [
            {
              "id": 1488,
              "name": "onQueryChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the query field is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1489,
                  "name": "queryValue",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1490,
          "name": "onQueryClear",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 79,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L79"
            }
          ],
          "signatures": [
            {
              "id": 1491,
              "name": "onQueryClear",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the clear button is triggered"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 1496,
          "name": "onQueryFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Filters/Filters.tsx",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L85"
            }
          ],
          "signatures": [
            {
              "id": 1497,
              "name": "onQueryFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the query field is focused"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1486, 1498, 1503, 1499, 1485, 1484, 1500, 1502, 1501, 1483, 1482
          ]
        },
        {
          "title": "Methods",
          "children": [1492, 1494, 1487, 1490, 1496]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Filters/Filters.tsx",
          "line": 65,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L65"
        }
      ]
    },
    {
      "id": 1520,
      "name": "FocusProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1521,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Focus/Focus.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Focus/Focus.tsx#L6"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1522,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Focus/Focus.tsx",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Focus/Focus.tsx#L7"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1523,
          "name": "root",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Focus/Focus.tsx",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Focus/Focus.tsx#L8"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "HTMLElement",
                "qualifiedName": "HTMLElement",
                "package": "typescript"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "HTMLElement",
                    "qualifiedName": "HTMLElement",
                    "package": "typescript"
                  }
                ],
                "name": "RefObject",
                "qualifiedName": "React.RefObject",
                "package": "@types/react"
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1521, 1522, 1523]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Focus/Focus.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Focus/Focus.tsx#L5"
        }
      ]
    },
    {
      "id": 1527,
      "name": "FooterHelpProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1528,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the layout."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/FooterHelp/FooterHelp.tsx",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FooterHelp/FooterHelp.tsx#L7"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1528]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/FooterHelp/FooterHelp.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FooterHelp/FooterHelp.tsx#L5"
        }
      ]
    },
    {
      "id": 1550,
      "name": "FormLayoutProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1551,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the layout."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/FormLayout/FormLayout.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FormLayout/FormLayout.tsx#L10"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1551]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/FormLayout/FormLayout.tsx",
          "line": 8,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FormLayout/FormLayout.tsx#L8"
        }
      ]
    },
    {
      "id": 1532,
      "name": "FormProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1533,
          "name": "acceptCharset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Space separated list of character encodings"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L17"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1534,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Where to send form-data on submittal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1535,
          "name": "autoComplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Grants the browser the ability to autocomplete input elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1536,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the form."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1537,
          "name": "encType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Media type when submitting content to server"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Enctype"
          }
        },
        {
          "id": 1538,
          "name": "implicitSubmit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Toggles if form submits on Enter keypress. Defaults to true."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L27"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1539,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Method used to submit form"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L29"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Method"
          }
        },
        {
          "id": 1540,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique name for the form"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1541,
          "name": "noValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not form is validated when submitting"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1542,
          "name": "preventDefault",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Blocks the default form action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1543,
          "name": "target",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Where to display response after form submittal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L37"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1544,
          "name": "onSubmit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Form/Form.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L39"
            }
          ],
          "signatures": [
            {
              "id": 1545,
              "name": "onSubmit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when form is submitted"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 1546,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLFormElement",
                        "qualifiedName": "HTMLFormElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "FormEvent",
                    "qualifiedName": "React.FormEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543
          ]
        },
        {
          "title": "Methods",
          "children": [1544]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Form/Form.tsx",
          "line": 15,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L15"
        }
      ]
    },
    {
      "id": 1557,
      "name": "FrameProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1560,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the frame."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1563,
          "name": "globalRibbon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a global ribbon component that will be rendered fixed to the bottom of an application frame"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L44"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1558,
          "name": "logo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the logo for the TopBar, Navigation, and ContextualSaveBar components"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L34"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Logo"
          }
        },
        {
          "id": 1562,
          "name": "navigation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a navigation component that will be rendered in the left sidebar of an application frame"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L42"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1559,
          "name": "offset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A horizontal offset that pushes the frame to the right, leaving empty space on the left"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1564,
          "name": "showMobileNavigation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A boolean property indicating whether the mobile navigation is currently visible"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L48"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1565,
          "name": "skipToContentTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a ref to the html anchor element you wish to focus when clicking the skip to content link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 50,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L50"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "RefObject",
            "qualifiedName": "React.RefObject",
            "package": "@types/react"
          }
        },
        {
          "id": 1561,
          "name": "topBar",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a top bar component that will be rendered at the top-most portion of an application frame"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L40"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1566,
          "name": "onNavigationDismiss",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Frame/Frame.tsx",
              "line": 52,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L52"
            }
          ],
          "signatures": [
            {
              "id": 1567,
              "name": "onNavigationDismiss",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A callback function to handle clicking the mobile navigation dismiss button"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1560, 1563, 1558, 1562, 1559, 1564, 1565, 1561]
        },
        {
          "title": "Methods",
          "children": [1566]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Frame/Frame.tsx",
          "line": 32,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L32"
        }
      ]
    },
    {
      "id": 1571,
      "name": "FullscreenBarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1575,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Render child elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FullscreenBar/FullscreenBar.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1572,
          "name": "onAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FullscreenBar/FullscreenBar.tsx#L11"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1573,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
                  "line": 11,
                  "character": 12,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FullscreenBar/FullscreenBar.tsx#L11"
                }
              ],
              "signatures": [
                {
                  "id": 1574,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Callback when back button is clicked"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1575, 1572]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FullscreenBar/FullscreenBar.tsx#L9"
        }
      ]
    },
    {
      "id": 1590,
      "name": "GridCellProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1591,
          "name": "area",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L27"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1595,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1592,
          "name": "column",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Cell"
          }
        },
        {
          "id": 1593,
          "name": "columnSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L29"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Columns"
          }
        },
        {
          "id": 1594,
          "name": "row",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Cell"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1591, 1595, 1592, 1593, 1594]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Grid/components/Cell/Cell.tsx",
          "line": 26,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/components/Cell/Cell.tsx#L26"
        }
      ]
    },
    {
      "id": 1585,
      "name": "GridProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1586,
          "name": "areas",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/Grid.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Areas"
          }
        },
        {
          "id": 1589,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/Grid.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1587,
          "name": "columns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/Grid.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Columns"
          }
        },
        {
          "id": 1588,
          "name": "gap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Grid/Grid.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Gap"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1586, 1589, 1587, 1588]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Grid/Grid.tsx",
          "line": 21,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L21"
        }
      ]
    },
    {
      "id": 3832,
      "name": "HSBAColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3833,
          "name": "alpha",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Level of transparency"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3834,
          "name": "brightness",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Brightness of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3824,
            "name": "HSBColor.brightness"
          }
        },
        {
          "id": 3835,
          "name": "hue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3825,
            "name": "HSBColor.hue"
          }
        },
        {
          "id": 3836,
          "name": "saturation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saturation of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3826,
            "name": "HSBColor.saturation"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3833, 3834, 3835, 3836]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 30,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L30"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 3823,
          "name": "HSBColor"
        }
      ]
    },
    {
      "id": 3823,
      "name": "HSBColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3824,
          "name": "brightness",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Brightness of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3825,
          "name": "hue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HSColor.hue"
          }
        },
        {
          "id": 3826,
          "name": "saturation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saturation of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HSColor.saturation"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3824, 3825, 3826]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 18,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L18"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "HSColor"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 3832,
          "name": "HSBAColor"
        }
      ]
    },
    {
      "id": 3841,
      "name": "HSLAColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3842,
          "name": "alpha",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Level of transparency"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L37"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3844,
          "name": "hue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3839,
            "name": "HSLColor.hue"
          }
        },
        {
          "id": 3843,
          "name": "lightness",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Lightness of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3838,
            "name": "HSLColor.lightness"
          }
        },
        {
          "id": 3845,
          "name": "saturation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saturation of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3840,
            "name": "HSLColor.saturation"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3842, 3844, 3843, 3845]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 35,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L35"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 3837,
          "name": "HSLColor"
        }
      ]
    },
    {
      "id": 3837,
      "name": "HSLColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3839,
          "name": "hue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HSColor.hue"
          }
        },
        {
          "id": 3838,
          "name": "lightness",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Lightness of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3840,
          "name": "saturation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Saturation of the color"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HSColor.saturation"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3839, 3838, 3840]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 23,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L23"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "HSColor"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 3841,
          "name": "HSLAColor"
        }
      ]
    },
    {
      "id": 1599,
      "name": "HeadingProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1601,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the heading"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Heading/Heading.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Heading/Heading.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 1600,
          "name": "element",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element name to use for the heading"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'h2'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Heading/Heading.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Heading/Heading.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "id": 102,
            "name": "HeadingTagName"
          }
        },
        {
          "id": 1602,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the heading, used for reference in anchor links"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Heading/Heading.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Heading/Heading.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1601, 1600, 1602]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Heading/Heading.tsx",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Heading/Heading.tsx#L7"
        }
      ]
    },
    {
      "id": 1606,
      "name": "IconProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1610,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Descriptive text to be read to screenreaders"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Icon/Icon.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1609,
          "name": "backdrop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Show a backdrop behind the icon"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Icon/Icon.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 1608,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Set the color for the SVG fill"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Icon/Icon.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L32"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Color"
          }
        },
        {
          "id": 1607,
          "name": "source",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The SVG contents to display in the icon (icons should fit in a 20 × 20 pixel viewBox)"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Icon/Icon.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1610, 1609, 1608, 1607]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Icon/Icon.tsx",
          "line": 28,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L28"
        }
      ]
    },
    {
      "id": 200,
      "name": "IconableAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 204,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 143,
            "name": "Action.accessibilityLabel"
          }
        },
        {
          "id": 203,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 142,
            "name": "Action.content"
          }
        },
        {
          "id": 206,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 145,
            "name": "Action.external"
          }
        },
        {
          "id": 201,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Source of the icon"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 156,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L156"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        },
        {
          "id": 202,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 141,
            "name": "Action.id"
          }
        },
        {
          "id": 205,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 144,
            "name": "Action.url"
          }
        },
        {
          "id": 207,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 208,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 147,
                "name": "Action.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 146,
            "name": "Action.onAction"
          }
        },
        {
          "id": 209,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 210,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 149,
                "name": "Action.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 148,
            "name": "Action.onMouseEnter"
          }
        },
        {
          "id": 211,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 212,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 151,
                "name": "Action.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 150,
            "name": "Action.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [204, 203, 206, 201, 202, 205]
        },
        {
          "title": "Methods",
          "children": [207, 209, 211]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 154,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L154"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 1614,
      "name": "ImageProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1748,
          "name": "about",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1876,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.about"
          }
        },
        {
          "id": 1623,
          "name": "accept",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1914,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.accept"
          }
        },
        {
          "id": 1624,
          "name": "acceptCharset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1915,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.acceptCharset"
          }
        },
        {
          "id": 1731,
          "name": "accessKey",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1852,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.accessKey"
          }
        },
        {
          "id": 1625,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1916,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.action"
          }
        },
        {
          "id": 1626,
          "name": "allowFullScreen",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1917,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.allowFullScreen"
          }
        },
        {
          "id": 1627,
          "name": "allowTransparency",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1918,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.allowTransparency"
          }
        },
        {
          "id": 1615,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L11"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "React.HTMLProps.alt"
          }
        },
        {
          "id": 1770,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-activedescendant"
          }
        },
        {
          "id": 1771,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-atomic"
          }
        },
        {
          "id": 1772,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-autocomplete"
          }
        },
        {
          "id": 1773,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-busy"
          }
        },
        {
          "id": 1774,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-checked"
          }
        },
        {
          "id": 1775,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colcount"
          }
        },
        {
          "id": 1776,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colindex"
          }
        },
        {
          "id": 1777,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colspan"
          }
        },
        {
          "id": 1778,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-controls"
          }
        },
        {
          "id": 1779,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-current"
          }
        },
        {
          "id": 1780,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-describedby"
          }
        },
        {
          "id": 1781,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-details"
          }
        },
        {
          "id": 1782,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-disabled"
          }
        },
        {
          "id": 1783,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-dropeffect"
          }
        },
        {
          "id": 1784,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-errormessage"
          }
        },
        {
          "id": 1785,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-expanded"
          }
        },
        {
          "id": 1786,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-flowto"
          }
        },
        {
          "id": 1787,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-grabbed"
          }
        },
        {
          "id": 1788,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-haspopup"
          }
        },
        {
          "id": 1789,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-hidden"
          }
        },
        {
          "id": 1790,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-invalid"
          }
        },
        {
          "id": 1791,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-keyshortcuts"
          }
        },
        {
          "id": 1792,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-label"
          }
        },
        {
          "id": 1793,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-labelledby"
          }
        },
        {
          "id": 1794,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-level"
          }
        },
        {
          "id": 1795,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-live"
          }
        },
        {
          "id": 1796,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-modal"
          }
        },
        {
          "id": 1797,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-multiline"
          }
        },
        {
          "id": 1798,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-multiselectable"
          }
        },
        {
          "id": 1799,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-orientation"
          }
        },
        {
          "id": 1800,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-owns"
          }
        },
        {
          "id": 1801,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-placeholder"
          }
        },
        {
          "id": 1802,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-posinset"
          }
        },
        {
          "id": 1803,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-pressed"
          }
        },
        {
          "id": 1804,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-readonly"
          }
        },
        {
          "id": 1805,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-relevant"
          }
        },
        {
          "id": 1806,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-required"
          }
        },
        {
          "id": 1807,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-roledescription"
          }
        },
        {
          "id": 1808,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowcount"
          }
        },
        {
          "id": 1809,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowindex"
          }
        },
        {
          "id": 1810,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowspan"
          }
        },
        {
          "id": 1811,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-selected"
          }
        },
        {
          "id": 1812,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-setsize"
          }
        },
        {
          "id": 1813,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-sort"
          }
        },
        {
          "id": 1814,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuemax"
          }
        },
        {
          "id": 1815,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuemin"
          }
        },
        {
          "id": 1816,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuenow"
          }
        },
        {
          "id": 1817,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuetext"
          }
        },
        {
          "id": 1628,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1920,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.as"
          }
        },
        {
          "id": 1629,
          "name": "async",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1921,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.async"
          }
        },
        {
          "id": 1756,
          "name": "autoCapitalize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1886,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoCapitalize"
          }
        },
        {
          "id": 1630,
          "name": "autoComplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1922,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoComplete"
          }
        },
        {
          "id": 1757,
          "name": "autoCorrect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1887,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoCorrect"
          }
        },
        {
          "id": 1631,
          "name": "autoFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1923,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoFocus"
          }
        },
        {
          "id": 1632,
          "name": "autoPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1924,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoPlay"
          }
        },
        {
          "id": 1758,
          "name": "autoSave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1888,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoSave"
          }
        },
        {
          "id": 1633,
          "name": "capture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1925,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "user"
              },
              {
                "type": "literal",
                "value": "environment"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.capture"
          }
        },
        {
          "id": 1634,
          "name": "cellPadding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1926,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cellPadding"
          }
        },
        {
          "id": 1635,
          "name": "cellSpacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1927,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cellSpacing"
          }
        },
        {
          "id": 1637,
          "name": "challenge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1929,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.challenge"
          }
        },
        {
          "id": 1636,
          "name": "charSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1928,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.charSet"
          }
        },
        {
          "id": 1638,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1930,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.checked"
          }
        },
        {
          "id": 1818,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1374,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.children"
          }
        },
        {
          "id": 1639,
          "name": "cite",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1931,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cite"
          }
        },
        {
          "id": 1640,
          "name": "classID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1932,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.classID"
          }
        },
        {
          "id": 1732,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1853,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.className"
          }
        },
        {
          "id": 1642,
          "name": "colSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1934,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.colSpan"
          }
        },
        {
          "id": 1759,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1889,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.color"
          }
        },
        {
          "id": 1641,
          "name": "cols",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1933,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cols"
          }
        },
        {
          "id": 1643,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1935,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.content"
          }
        },
        {
          "id": 1733,
          "name": "contentEditable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1854,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "Booleanish",
                "qualifiedName": "Booleanish",
                "package": "@types/react"
              },
              {
                "type": "literal",
                "value": "inherit"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.contentEditable"
          }
        },
        {
          "id": 1734,
          "name": "contextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1855,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.contextMenu"
          }
        },
        {
          "id": 1644,
          "name": "controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1936,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.controls"
          }
        },
        {
          "id": 1645,
          "name": "coords",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1937,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.coords"
          }
        },
        {
          "id": 1617,
          "name": "crossOrigin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "CrossOrigin"
          },
          "overwrites": {
            "type": "reference",
            "name": "React.HTMLProps.crossOrigin"
          }
        },
        {
          "id": 1819,
          "name": "dangerouslySetInnerHTML",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1375,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1820,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 1821,
                  "name": "__html",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 1376,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [1821]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1375,
                  "character": 34
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dangerouslySetInnerHTML"
          }
        },
        {
          "id": 1646,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1939,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.data"
          }
        },
        {
          "id": 1749,
          "name": "datatype",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1877,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.datatype"
          }
        },
        {
          "id": 1647,
          "name": "dateTime",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1940,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dateTime"
          }
        },
        {
          "id": 1648,
          "name": "default",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1941,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.default"
          }
        },
        {
          "id": 1727,
          "name": "defaultChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1846,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defaultChecked"
          }
        },
        {
          "id": 1728,
          "name": "defaultValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1847,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defaultValue"
          }
        },
        {
          "id": 1649,
          "name": "defer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1942,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defer"
          }
        },
        {
          "id": 1735,
          "name": "dir",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1856,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dir"
          }
        },
        {
          "id": 1650,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1943,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.disabled"
          }
        },
        {
          "id": 1651,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1944,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.download"
          }
        },
        {
          "id": 1736,
          "name": "draggable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1857,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.draggable"
          }
        },
        {
          "id": 1652,
          "name": "encType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1945,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.encType"
          }
        },
        {
          "id": 1653,
          "name": "form",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1946,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.form"
          }
        },
        {
          "id": 1654,
          "name": "formAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1947,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formAction"
          }
        },
        {
          "id": 1655,
          "name": "formEncType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1948,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formEncType"
          }
        },
        {
          "id": 1656,
          "name": "formMethod",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1949,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formMethod"
          }
        },
        {
          "id": 1657,
          "name": "formNoValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1950,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formNoValidate"
          }
        },
        {
          "id": 1658,
          "name": "formTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1951,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formTarget"
          }
        },
        {
          "id": 1659,
          "name": "frameBorder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1952,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.frameBorder"
          }
        },
        {
          "id": 1660,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1953,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.headers"
          }
        },
        {
          "id": 1661,
          "name": "height",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1954,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.height"
          }
        },
        {
          "id": 1737,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1858,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.hidden"
          }
        },
        {
          "id": 1662,
          "name": "high",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1955,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.high"
          }
        },
        {
          "id": 1663,
          "name": "href",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1956,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.href"
          }
        },
        {
          "id": 1664,
          "name": "hrefLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1957,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.hrefLang"
          }
        },
        {
          "id": 1665,
          "name": "htmlFor",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1958,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.htmlFor"
          }
        },
        {
          "id": 1666,
          "name": "httpEquiv",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1959,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.httpEquiv"
          }
        },
        {
          "id": 1738,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1859,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.id"
          }
        },
        {
          "id": 1750,
          "name": "inlist",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1878,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.inlist"
          }
        },
        {
          "id": 1768,
          "name": "inputMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1904,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "url"
              },
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "search"
              },
              {
                "type": "literal",
                "value": "numeric"
              },
              {
                "type": "literal",
                "value": "tel"
              },
              {
                "type": "literal",
                "value": "email"
              },
              {
                "type": "literal",
                "value": "decimal"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.inputMode"
          }
        },
        {
          "id": 1667,
          "name": "integrity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1960,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.integrity"
          }
        },
        {
          "id": 1769,
          "name": "is",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1909,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.is"
          }
        },
        {
          "id": 1763,
          "name": "itemID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1893,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemID"
          }
        },
        {
          "id": 1760,
          "name": "itemProp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1890,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemProp"
          }
        },
        {
          "id": 1764,
          "name": "itemRef",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1894,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemRef"
          }
        },
        {
          "id": 1761,
          "name": "itemScope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1891,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemScope"
          }
        },
        {
          "id": 1762,
          "name": "itemType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1892,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemType"
          }
        },
        {
          "id": 1981,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 131,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Key",
                "qualifiedName": "React.Key",
                "package": "@types/react"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.key"
          }
        },
        {
          "id": 1668,
          "name": "keyParams",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1961,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.keyParams"
          }
        },
        {
          "id": 1669,
          "name": "keyType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1962,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.keyType"
          }
        },
        {
          "id": 1670,
          "name": "kind",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1963,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.kind"
          }
        },
        {
          "id": 1671,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1964,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.label"
          }
        },
        {
          "id": 1739,
          "name": "lang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1860,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.lang"
          }
        },
        {
          "id": 1672,
          "name": "list",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1965,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.list"
          }
        },
        {
          "id": 1673,
          "name": "loop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1966,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.loop"
          }
        },
        {
          "id": 1674,
          "name": "low",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1967,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.low"
          }
        },
        {
          "id": 1675,
          "name": "manifest",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1968,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.manifest"
          }
        },
        {
          "id": 1676,
          "name": "marginHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1969,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.marginHeight"
          }
        },
        {
          "id": 1677,
          "name": "marginWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1970,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.marginWidth"
          }
        },
        {
          "id": 1678,
          "name": "max",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1971,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.max"
          }
        },
        {
          "id": 1679,
          "name": "maxLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1972,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.maxLength"
          }
        },
        {
          "id": 1680,
          "name": "media",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1973,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.media"
          }
        },
        {
          "id": 1681,
          "name": "mediaGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1974,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.mediaGroup"
          }
        },
        {
          "id": 1682,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1975,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.method"
          }
        },
        {
          "id": 1683,
          "name": "min",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1976,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.min"
          }
        },
        {
          "id": 1684,
          "name": "minLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1977,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.minLength"
          }
        },
        {
          "id": 1685,
          "name": "multiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1978,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.multiple"
          }
        },
        {
          "id": 1686,
          "name": "muted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1979,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.muted"
          }
        },
        {
          "id": 1687,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1980,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.name"
          }
        },
        {
          "id": 1689,
          "name": "noValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1982,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.noValidate"
          }
        },
        {
          "id": 1688,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1981,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.nonce"
          }
        },
        {
          "id": 1858,
          "name": "onAbort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1432,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAbort"
          }
        },
        {
          "id": 1859,
          "name": "onAbortCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1433,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAbortCapture"
          }
        },
        {
          "id": 1974,
          "name": "onAnimationEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1562,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationEnd"
          }
        },
        {
          "id": 1975,
          "name": "onAnimationEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1563,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationEndCapture"
          }
        },
        {
          "id": 1976,
          "name": "onAnimationIteration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1564,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationIteration"
          }
        },
        {
          "id": 1977,
          "name": "onAnimationIterationCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1565,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationIterationCapture"
          }
        },
        {
          "id": 1972,
          "name": "onAnimationStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1560,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationStart"
          }
        },
        {
          "id": 1973,
          "name": "onAnimationStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1561,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationStartCapture"
          }
        },
        {
          "id": 1902,
          "name": "onAuxClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1478,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAuxClick"
          }
        },
        {
          "id": 1903,
          "name": "onAuxClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1479,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAuxClickCapture"
          }
        },
        {
          "id": 1840,
          "name": "onBeforeInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1404,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBeforeInput"
          }
        },
        {
          "id": 1841,
          "name": "onBeforeInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1405,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBeforeInputCapture"
          }
        },
        {
          "id": 1836,
          "name": "onBlur",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1398,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBlur"
          }
        },
        {
          "id": 1837,
          "name": "onBlurCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1399,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBlurCapture"
          }
        },
        {
          "id": 1860,
          "name": "onCanPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1434,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlay"
          }
        },
        {
          "id": 1861,
          "name": "onCanPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1435,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayCapture"
          }
        },
        {
          "id": 1862,
          "name": "onCanPlayThrough",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1436,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayThrough"
          }
        },
        {
          "id": 1863,
          "name": "onCanPlayThroughCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1437,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayThroughCapture"
          }
        },
        {
          "id": 1838,
          "name": "onChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1402,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onChange"
          }
        },
        {
          "id": 1839,
          "name": "onChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1403,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onChangeCapture"
          }
        },
        {
          "id": 1904,
          "name": "onClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1480,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onClick"
          }
        },
        {
          "id": 1905,
          "name": "onClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1481,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onClickCapture"
          }
        },
        {
          "id": 1828,
          "name": "onCompositionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1388,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionEnd"
          }
        },
        {
          "id": 1829,
          "name": "onCompositionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1389,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionEndCapture"
          }
        },
        {
          "id": 1830,
          "name": "onCompositionStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1390,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionStart"
          }
        },
        {
          "id": 1831,
          "name": "onCompositionStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1391,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionStartCapture"
          }
        },
        {
          "id": 1832,
          "name": "onCompositionUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1392,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionUpdate"
          }
        },
        {
          "id": 1833,
          "name": "onCompositionUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1393,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionUpdateCapture"
          }
        },
        {
          "id": 1906,
          "name": "onContextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1482,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onContextMenu"
          }
        },
        {
          "id": 1907,
          "name": "onContextMenuCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1483,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onContextMenuCapture"
          }
        },
        {
          "id": 1822,
          "name": "onCopy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1380,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCopy"
          }
        },
        {
          "id": 1823,
          "name": "onCopyCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1381,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCopyCapture"
          }
        },
        {
          "id": 1824,
          "name": "onCut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1382,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCut"
          }
        },
        {
          "id": 1825,
          "name": "onCutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1383,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCutCapture"
          }
        },
        {
          "id": 1908,
          "name": "onDoubleClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1484,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDoubleClick"
          }
        },
        {
          "id": 1909,
          "name": "onDoubleClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1485,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDoubleClickCapture"
          }
        },
        {
          "id": 1910,
          "name": "onDrag",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1486,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDrag"
          }
        },
        {
          "id": 1911,
          "name": "onDragCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1487,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragCapture"
          }
        },
        {
          "id": 1912,
          "name": "onDragEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1488,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnd"
          }
        },
        {
          "id": 1913,
          "name": "onDragEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1489,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEndCapture"
          }
        },
        {
          "id": 1914,
          "name": "onDragEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1490,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnter"
          }
        },
        {
          "id": 1915,
          "name": "onDragEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1491,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnterCapture"
          }
        },
        {
          "id": 1916,
          "name": "onDragExit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1492,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragExit"
          }
        },
        {
          "id": 1917,
          "name": "onDragExitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1493,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragExitCapture"
          }
        },
        {
          "id": 1918,
          "name": "onDragLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1494,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragLeave"
          }
        },
        {
          "id": 1919,
          "name": "onDragLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1495,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragLeaveCapture"
          }
        },
        {
          "id": 1920,
          "name": "onDragOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1496,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragOver"
          }
        },
        {
          "id": 1921,
          "name": "onDragOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1497,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragOverCapture"
          }
        },
        {
          "id": 1922,
          "name": "onDragStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1498,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragStart"
          }
        },
        {
          "id": 1923,
          "name": "onDragStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1499,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragStartCapture"
          }
        },
        {
          "id": 1924,
          "name": "onDrop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1500,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDrop"
          }
        },
        {
          "id": 1925,
          "name": "onDropCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1501,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDropCapture"
          }
        },
        {
          "id": 1864,
          "name": "onDurationChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1438,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDurationChange"
          }
        },
        {
          "id": 1865,
          "name": "onDurationChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1439,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDurationChangeCapture"
          }
        },
        {
          "id": 1866,
          "name": "onEmptied",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1440,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEmptied"
          }
        },
        {
          "id": 1867,
          "name": "onEmptiedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1441,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEmptiedCapture"
          }
        },
        {
          "id": 1868,
          "name": "onEncrypted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1442,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEncrypted"
          }
        },
        {
          "id": 1869,
          "name": "onEncryptedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1443,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEncryptedCapture"
          }
        },
        {
          "id": 1870,
          "name": "onEnded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1444,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEnded"
          }
        },
        {
          "id": 1871,
          "name": "onEndedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1445,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEndedCapture"
          }
        },
        {
          "id": 1851,
          "name": "onErrorCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1419,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onErrorCapture"
          }
        },
        {
          "id": 1834,
          "name": "onFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1396,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onFocus"
          }
        },
        {
          "id": 1835,
          "name": "onFocusCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1397,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onFocusCapture"
          }
        },
        {
          "id": 1964,
          "name": "onGotPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1546,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onGotPointerCapture"
          }
        },
        {
          "id": 1965,
          "name": "onGotPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1547,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onGotPointerCaptureCapture"
          }
        },
        {
          "id": 1842,
          "name": "onInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1406,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInput"
          }
        },
        {
          "id": 1843,
          "name": "onInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1407,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInputCapture"
          }
        },
        {
          "id": 1848,
          "name": "onInvalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1412,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInvalid"
          }
        },
        {
          "id": 1849,
          "name": "onInvalidCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1413,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInvalidCapture"
          }
        },
        {
          "id": 1852,
          "name": "onKeyDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1422,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyDown"
          }
        },
        {
          "id": 1853,
          "name": "onKeyDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1423,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyDownCapture"
          }
        },
        {
          "id": 1854,
          "name": "onKeyPress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1425,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyPress"
          }
        },
        {
          "id": 1855,
          "name": "onKeyPressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1427,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyPressCapture"
          }
        },
        {
          "id": 1856,
          "name": "onKeyUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1428,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyUp"
          }
        },
        {
          "id": 1857,
          "name": "onKeyUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1429,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyUpCapture"
          }
        },
        {
          "id": 1850,
          "name": "onLoadCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1417,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadCapture"
          }
        },
        {
          "id": 1876,
          "name": "onLoadStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1450,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadStart"
          }
        },
        {
          "id": 1877,
          "name": "onLoadStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1451,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadStartCapture"
          }
        },
        {
          "id": 1872,
          "name": "onLoadedData",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1446,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedData"
          }
        },
        {
          "id": 1873,
          "name": "onLoadedDataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1447,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedDataCapture"
          }
        },
        {
          "id": 1874,
          "name": "onLoadedMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1448,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedMetadata"
          }
        },
        {
          "id": 1875,
          "name": "onLoadedMetadataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1449,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedMetadataCapture"
          }
        },
        {
          "id": 1966,
          "name": "onLostPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1548,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLostPointerCapture"
          }
        },
        {
          "id": 1967,
          "name": "onLostPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1549,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLostPointerCaptureCapture"
          }
        },
        {
          "id": 1926,
          "name": "onMouseDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1502,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseDown"
          }
        },
        {
          "id": 1927,
          "name": "onMouseDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1503,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseDownCapture"
          }
        },
        {
          "id": 1928,
          "name": "onMouseEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1504,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseEnter"
          }
        },
        {
          "id": 1929,
          "name": "onMouseLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1505,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseLeave"
          }
        },
        {
          "id": 1930,
          "name": "onMouseMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1506,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseMove"
          }
        },
        {
          "id": 1931,
          "name": "onMouseMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1507,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseMoveCapture"
          }
        },
        {
          "id": 1932,
          "name": "onMouseOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1508,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOut"
          }
        },
        {
          "id": 1933,
          "name": "onMouseOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1509,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOutCapture"
          }
        },
        {
          "id": 1934,
          "name": "onMouseOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1510,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOver"
          }
        },
        {
          "id": 1935,
          "name": "onMouseOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1511,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOverCapture"
          }
        },
        {
          "id": 1936,
          "name": "onMouseUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1512,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseUp"
          }
        },
        {
          "id": 1937,
          "name": "onMouseUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1513,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseUpCapture"
          }
        },
        {
          "id": 1826,
          "name": "onPaste",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1384,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPaste"
          }
        },
        {
          "id": 1827,
          "name": "onPasteCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1385,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPasteCapture"
          }
        },
        {
          "id": 1878,
          "name": "onPause",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1452,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPause"
          }
        },
        {
          "id": 1879,
          "name": "onPauseCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1453,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPauseCapture"
          }
        },
        {
          "id": 1880,
          "name": "onPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1454,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlay"
          }
        },
        {
          "id": 1881,
          "name": "onPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1455,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlayCapture"
          }
        },
        {
          "id": 1882,
          "name": "onPlaying",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1456,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlaying"
          }
        },
        {
          "id": 1883,
          "name": "onPlayingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1457,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlayingCapture"
          }
        },
        {
          "id": 1954,
          "name": "onPointerCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1536,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerCancel"
          }
        },
        {
          "id": 1955,
          "name": "onPointerCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1537,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerCancelCapture"
          }
        },
        {
          "id": 1948,
          "name": "onPointerDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1530,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerDown"
          }
        },
        {
          "id": 1949,
          "name": "onPointerDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1531,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerDownCapture"
          }
        },
        {
          "id": 1956,
          "name": "onPointerEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1538,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerEnter"
          }
        },
        {
          "id": 1957,
          "name": "onPointerEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1539,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerEnterCapture"
          }
        },
        {
          "id": 1958,
          "name": "onPointerLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1540,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerLeave"
          }
        },
        {
          "id": 1959,
          "name": "onPointerLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1541,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerLeaveCapture"
          }
        },
        {
          "id": 1950,
          "name": "onPointerMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1532,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerMove"
          }
        },
        {
          "id": 1951,
          "name": "onPointerMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1533,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerMoveCapture"
          }
        },
        {
          "id": 1962,
          "name": "onPointerOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1544,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOut"
          }
        },
        {
          "id": 1963,
          "name": "onPointerOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1545,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOutCapture"
          }
        },
        {
          "id": 1960,
          "name": "onPointerOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1542,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOver"
          }
        },
        {
          "id": 1961,
          "name": "onPointerOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1543,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOverCapture"
          }
        },
        {
          "id": 1952,
          "name": "onPointerUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1534,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerUp"
          }
        },
        {
          "id": 1953,
          "name": "onPointerUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1535,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerUpCapture"
          }
        },
        {
          "id": 1884,
          "name": "onProgress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1458,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onProgress"
          }
        },
        {
          "id": 1885,
          "name": "onProgressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1459,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onProgressCapture"
          }
        },
        {
          "id": 1886,
          "name": "onRateChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1460,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onRateChange"
          }
        },
        {
          "id": 1887,
          "name": "onRateChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1461,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onRateChangeCapture"
          }
        },
        {
          "id": 1844,
          "name": "onReset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1408,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onReset"
          }
        },
        {
          "id": 1845,
          "name": "onResetCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1409,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onResetCapture"
          }
        },
        {
          "id": 1968,
          "name": "onScroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1552,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onScroll"
          }
        },
        {
          "id": 1969,
          "name": "onScrollCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1553,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onScrollCapture"
          }
        },
        {
          "id": 1888,
          "name": "onSeeked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1462,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeeked"
          }
        },
        {
          "id": 1889,
          "name": "onSeekedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1463,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeekedCapture"
          }
        },
        {
          "id": 1890,
          "name": "onSeeking",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1464,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeeking"
          }
        },
        {
          "id": 1891,
          "name": "onSeekingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1465,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeekingCapture"
          }
        },
        {
          "id": 1938,
          "name": "onSelect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1516,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSelect"
          }
        },
        {
          "id": 1939,
          "name": "onSelectCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1517,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSelectCapture"
          }
        },
        {
          "id": 1892,
          "name": "onStalled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1466,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onStalled"
          }
        },
        {
          "id": 1893,
          "name": "onStalledCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1467,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onStalledCapture"
          }
        },
        {
          "id": 1846,
          "name": "onSubmit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1410,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSubmit"
          }
        },
        {
          "id": 1847,
          "name": "onSubmitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1411,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSubmitCapture"
          }
        },
        {
          "id": 1894,
          "name": "onSuspend",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1468,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSuspend"
          }
        },
        {
          "id": 1895,
          "name": "onSuspendCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1469,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSuspendCapture"
          }
        },
        {
          "id": 1896,
          "name": "onTimeUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1470,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTimeUpdate"
          }
        },
        {
          "id": 1897,
          "name": "onTimeUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1471,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTimeUpdateCapture"
          }
        },
        {
          "id": 1940,
          "name": "onTouchCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1520,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchCancel"
          }
        },
        {
          "id": 1941,
          "name": "onTouchCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1521,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchCancelCapture"
          }
        },
        {
          "id": 1942,
          "name": "onTouchEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1522,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchEnd"
          }
        },
        {
          "id": 1943,
          "name": "onTouchEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1523,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchEndCapture"
          }
        },
        {
          "id": 1944,
          "name": "onTouchMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1524,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchMove"
          }
        },
        {
          "id": 1945,
          "name": "onTouchMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1525,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchMoveCapture"
          }
        },
        {
          "id": 1946,
          "name": "onTouchStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1526,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchStart"
          }
        },
        {
          "id": 1947,
          "name": "onTouchStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1527,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchStartCapture"
          }
        },
        {
          "id": 1978,
          "name": "onTransitionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1568,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTransitionEnd"
          }
        },
        {
          "id": 1979,
          "name": "onTransitionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1569,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTransitionEndCapture"
          }
        },
        {
          "id": 1898,
          "name": "onVolumeChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1472,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onVolumeChange"
          }
        },
        {
          "id": 1899,
          "name": "onVolumeChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1473,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onVolumeChangeCapture"
          }
        },
        {
          "id": 1900,
          "name": "onWaiting",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1474,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWaiting"
          }
        },
        {
          "id": 1901,
          "name": "onWaitingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1475,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWaitingCapture"
          }
        },
        {
          "id": 1970,
          "name": "onWheel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1556,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWheel"
          }
        },
        {
          "id": 1971,
          "name": "onWheelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1557,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWheelCapture"
          }
        },
        {
          "id": 1690,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1983,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.open"
          }
        },
        {
          "id": 1691,
          "name": "optimum",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1984,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.optimum"
          }
        },
        {
          "id": 1692,
          "name": "pattern",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1985,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.pattern"
          }
        },
        {
          "id": 1693,
          "name": "placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1986,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.placeholder"
          }
        },
        {
          "id": 1694,
          "name": "playsInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1987,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.playsInline"
          }
        },
        {
          "id": 1695,
          "name": "poster",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1988,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.poster"
          }
        },
        {
          "id": 1751,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1879,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.prefix"
          }
        },
        {
          "id": 1696,
          "name": "preload",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1989,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.preload"
          }
        },
        {
          "id": 1752,
          "name": "property",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1880,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.property"
          }
        },
        {
          "id": 1746,
          "name": "radioGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1870,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.radioGroup"
          }
        },
        {
          "id": 1697,
          "name": "readOnly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1990,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.readOnly"
          }
        },
        {
          "id": 1980,
          "name": "ref",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 137,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLImageElement",
                "qualifiedName": "HTMLImageElement",
                "package": "typescript"
              }
            ],
            "name": "LegacyRef",
            "qualifiedName": "React.LegacyRef",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.ref"
          }
        },
        {
          "id": 1698,
          "name": "rel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1991,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rel"
          }
        },
        {
          "id": 1699,
          "name": "required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1992,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.required"
          }
        },
        {
          "id": 1753,
          "name": "resource",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1881,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.resource"
          }
        },
        {
          "id": 1765,
          "name": "results",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1895,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.results"
          }
        },
        {
          "id": 1700,
          "name": "reversed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1993,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.reversed"
          }
        },
        {
          "id": 1747,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1873,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "AriaRole",
            "qualifiedName": "React.AriaRole",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.role"
          }
        },
        {
          "id": 1702,
          "name": "rowSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1995,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rowSpan"
          }
        },
        {
          "id": 1701,
          "name": "rows",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1994,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rows"
          }
        },
        {
          "id": 1703,
          "name": "sandbox",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1996,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.sandbox"
          }
        },
        {
          "id": 1704,
          "name": "scope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1997,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scope"
          }
        },
        {
          "id": 1705,
          "name": "scoped",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1998,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scoped"
          }
        },
        {
          "id": 1706,
          "name": "scrolling",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1999,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scrolling"
          }
        },
        {
          "id": 1707,
          "name": "seamless",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2000,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.seamless"
          }
        },
        {
          "id": 1766,
          "name": "security",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1896,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.security"
          }
        },
        {
          "id": 1708,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2001,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.selected"
          }
        },
        {
          "id": 1709,
          "name": "shape",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2002,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.shape"
          }
        },
        {
          "id": 1710,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2003,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.size"
          }
        },
        {
          "id": 1711,
          "name": "sizes",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2004,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.sizes"
          }
        },
        {
          "id": 1740,
          "name": "slot",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1862,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.slot"
          }
        },
        {
          "id": 1616,
          "name": "source",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L12"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 1618,
          "name": "sourceSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L14"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "SourceSet"
            }
          }
        },
        {
          "id": 1712,
          "name": "span",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2005,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.span"
          }
        },
        {
          "id": 1741,
          "name": "spellCheck",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1863,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.spellCheck"
          }
        },
        {
          "id": 1713,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2006,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.src"
          }
        },
        {
          "id": 1714,
          "name": "srcDoc",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2007,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcDoc"
          }
        },
        {
          "id": 1715,
          "name": "srcLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2008,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcLang"
          }
        },
        {
          "id": 1716,
          "name": "srcSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2009,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcSet"
          }
        },
        {
          "id": 1717,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2010,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.start"
          }
        },
        {
          "id": 1718,
          "name": "step",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2011,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.step"
          }
        },
        {
          "id": 1742,
          "name": "style",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1864,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "CSSProperties",
            "qualifiedName": "React.CSSProperties",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.style"
          }
        },
        {
          "id": 1719,
          "name": "summary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2012,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.summary"
          }
        },
        {
          "id": 1729,
          "name": "suppressContentEditableWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1848,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.suppressContentEditableWarning"
          }
        },
        {
          "id": 1730,
          "name": "suppressHydrationWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1849,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.suppressHydrationWarning"
          }
        },
        {
          "id": 1743,
          "name": "tabIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1865,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.tabIndex"
          }
        },
        {
          "id": 1720,
          "name": "target",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2013,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.target"
          }
        },
        {
          "id": 1744,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1866,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.title"
          }
        },
        {
          "id": 1745,
          "name": "translate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1867,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "yes"
              },
              {
                "type": "literal",
                "value": "no"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.translate"
          }
        },
        {
          "id": 1721,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2014,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.type"
          }
        },
        {
          "id": 1754,
          "name": "typeof",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1882,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.typeof"
          }
        },
        {
          "id": 1767,
          "name": "unselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1897,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "on"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.unselectable"
          }
        },
        {
          "id": 1722,
          "name": "useMap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2015,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.useMap"
          }
        },
        {
          "id": 1723,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2016,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.value"
          }
        },
        {
          "id": 1755,
          "name": "vocab",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1883,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.vocab"
          }
        },
        {
          "id": 1724,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2017,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.width"
          }
        },
        {
          "id": 1725,
          "name": "wmode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2018,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.wmode"
          }
        },
        {
          "id": 1726,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2019,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.wrap"
          }
        },
        {
          "id": 1621,
          "name": "onError",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L16"
            }
          ],
          "signatures": [
            {
              "id": 1622,
              "name": "onError",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "React.HTMLProps.onError"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "React.HTMLProps.onError"
          }
        },
        {
          "id": 1619,
          "name": "onLoad",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Image/Image.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L15"
            }
          ],
          "signatures": [
            {
              "id": 1620,
              "name": "onLoad",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "overwrites": {
                "type": "reference",
                "name": "React.HTMLProps.onLoad"
              }
            }
          ],
          "overwrites": {
            "type": "reference",
            "name": "React.HTMLProps.onLoad"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1748, 1623, 1624, 1731, 1625, 1626, 1627, 1615, 1770, 1771, 1772,
            1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
            1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
            1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
            1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
            1817, 1628, 1629, 1756, 1630, 1757, 1631, 1632, 1758, 1633, 1634,
            1635, 1637, 1636, 1638, 1818, 1639, 1640, 1732, 1642, 1759, 1641,
            1643, 1733, 1734, 1644, 1645, 1617, 1819, 1646, 1749, 1647, 1648,
            1727, 1728, 1649, 1735, 1650, 1651, 1736, 1652, 1653, 1654, 1655,
            1656, 1657, 1658, 1659, 1660, 1661, 1737, 1662, 1663, 1664, 1665,
            1666, 1738, 1750, 1768, 1667, 1769, 1763, 1760, 1764, 1761, 1762,
            1981, 1668, 1669, 1670, 1671, 1739, 1672, 1673, 1674, 1675, 1676,
            1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
            1689, 1688, 1858, 1859, 1974, 1975, 1976, 1977, 1972, 1973, 1902,
            1903, 1840, 1841, 1836, 1837, 1860, 1861, 1862, 1863, 1838, 1839,
            1904, 1905, 1828, 1829, 1830, 1831, 1832, 1833, 1906, 1907, 1822,
            1823, 1824, 1825, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
            1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1864,
            1865, 1866, 1867, 1868, 1869, 1870, 1871, 1851, 1834, 1835, 1964,
            1965, 1842, 1843, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1857,
            1850, 1876, 1877, 1872, 1873, 1874, 1875, 1966, 1967, 1926, 1927,
            1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1826,
            1827, 1878, 1879, 1880, 1881, 1882, 1883, 1954, 1955, 1948, 1949,
            1956, 1957, 1958, 1959, 1950, 1951, 1962, 1963, 1960, 1961, 1952,
            1953, 1884, 1885, 1886, 1887, 1844, 1845, 1968, 1969, 1888, 1889,
            1890, 1891, 1938, 1939, 1892, 1893, 1846, 1847, 1894, 1895, 1896,
            1897, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1978, 1979,
            1898, 1899, 1900, 1901, 1970, 1971, 1690, 1691, 1692, 1693, 1694,
            1695, 1751, 1696, 1752, 1746, 1697, 1980, 1698, 1699, 1753, 1765,
            1700, 1747, 1702, 1701, 1703, 1704, 1705, 1706, 1707, 1766, 1708,
            1709, 1710, 1711, 1740, 1616, 1618, 1712, 1741, 1713, 1714, 1715,
            1716, 1717, 1718, 1742, 1719, 1729, 1730, 1743, 1720, 1744, 1745,
            1721, 1754, 1767, 1722, 1723, 1755, 1724, 1725, 1726
          ]
        },
        {
          "title": "Methods",
          "children": [1621, 1619]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Image/Image.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L10"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "name": "HTMLImageElement",
              "qualifiedName": "HTMLImageElement",
              "package": "typescript"
            }
          ],
          "name": "HTMLProps",
          "qualifiedName": "React.HTMLProps",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 1988,
      "name": "IndexTableProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1991,
          "name": "bulkActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 88,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L88"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 265,
                  "name": "ActionListSection"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.bulkActions"
          }
        },
        {
          "id": 1992,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L89"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.children"
          }
        },
        {
          "id": 2016,
          "name": "condensed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.condensed"
          }
        },
        {
          "id": 1999,
          "name": "defaultSortDirection",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to descending."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'descending'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 101,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L101"
            }
          ],
          "type": {
            "type": "reference",
            "name": "IndexTableSortDirection"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.defaultSortDirection"
          }
        },
        {
          "id": 1993,
          "name": "emptyState",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 90,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L90"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.emptyState"
          }
        },
        {
          "id": 2015,
          "name": "hasMoreItems",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.hasMoreItems"
          }
        },
        {
          "id": 2007,
          "name": "hasZebraStriping",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Add zebra striping to table rows"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 114,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L114"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.hasZebraStriping"
          }
        },
        {
          "id": 1989,
          "name": "headings",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 86,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L86"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "IndexTableHeading"
              }
            ],
            "name": "NonEmptyArray"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.headings"
          }
        },
        {
          "id": 2008,
          "name": "itemCount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L17"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.itemCount"
          }
        },
        {
          "id": 1996,
          "name": "lastColumnSticky",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 93,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L93"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.lastColumnSticky"
          }
        },
        {
          "id": 2014,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L23"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.loading"
          }
        },
        {
          "id": 1995,
          "name": "paginatedSelectAllActionText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 92,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L92"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.paginatedSelectAllActionText"
          }
        },
        {
          "id": 1990,
          "name": "promotedBulkActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L87"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 306,
                  "name": "MenuGroupDescriptor"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.promotedBulkActions"
          }
        },
        {
          "id": 2010,
          "name": "resourceName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L19"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2011,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 2013,
                  "name": "plural",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/index-provider/types.ts",
                      "line": 21,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L21"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2012,
                  "name": "singular",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/index-provider/types.ts",
                      "line": 20,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L20"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2013, 2012]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/utilities/index-provider/types.ts",
                  "line": 19,
                  "character": 17,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L19"
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.resourceName"
          }
        },
        {
          "id": 1997,
          "name": "selectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 94,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L94"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.selectable"
          }
        },
        {
          "id": 2009,
          "name": "selectedItemsCount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L18"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "literal",
                "value": "All"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.selectedItemsCount"
          }
        },
        {
          "id": 1994,
          "name": "sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L91"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.sort"
          }
        },
        {
          "id": 2001,
          "name": "sortColumnIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The index of the heading that the table rows are sorted by."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 107,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L107"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.sortColumnIndex"
          }
        },
        {
          "id": 2000,
          "name": "sortDirection",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The current sorting direction."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 103,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L103"
            }
          ],
          "type": {
            "type": "reference",
            "name": "IndexTableSortDirection"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.sortDirection"
          }
        },
        {
          "id": 2006,
          "name": "sortToggleLabels",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Optional dictionary of sort toggle labels for each sortable column, with ascending and descending label,\nwith the key as the index of the column"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 112,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L112"
            }
          ],
          "type": {
            "type": "reference",
            "name": "IndexTableSortToggleLabels"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.sortToggleLabels"
          }
        },
        {
          "id": 1998,
          "name": "sortable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L96"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "boolean"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.sortable"
          }
        },
        {
          "id": 2017,
          "name": "onSelectionChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/index-provider/types.ts",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L26"
            }
          ],
          "signatures": [
            {
              "id": 2018,
              "name": "onSelectionChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 2019,
                  "name": "selectionType",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 3935,
                    "name": "SelectionType"
                  }
                },
                {
                  "id": 2020,
                  "name": "toggleType",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2021,
                  "name": "selection",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "name": "Range"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "IndexProviderProps.onSelectionChange"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexProviderProps.onSelectionChange"
          }
        },
        {
          "id": 2002,
          "name": "onSort",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
              "line": 109,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L109"
            }
          ],
          "signatures": [
            {
              "id": 2003,
              "name": "onSort",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired on click or keypress of a sortable column heading."
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2004,
                  "name": "headingIndex",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 2005,
                  "name": "direction",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "IndexTableSortDirection"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "IndexTableBaseProps.onSort"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "IndexTableBaseProps.onSort"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            1991, 1992, 2016, 1999, 1993, 2015, 2007, 1989, 2008, 1996, 2014,
            1995, 1990, 2010, 1997, 2009, 1994, 2001, 2000, 2006, 1998
          ]
        },
        {
          "title": "Methods",
          "children": [2017, 2002]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1121,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1121"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "IndexTableBaseProps"
        },
        {
          "type": "reference",
          "name": "IndexProviderProps"
        }
      ]
    },
    {
      "id": 2025,
      "name": "IndicatorProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2026,
          "name": "pulse",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Indicator/Indicator.tsx",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Indicator/Indicator.tsx#L8"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2026]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Indicator/Indicator.tsx",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Indicator/Indicator.tsx#L7"
        }
      ]
    },
    {
      "id": 2087,
      "name": "InlineCodeProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2088,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to render inside the code block"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/InlineCode/InlineCode.tsx",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineCode/InlineCode.tsx#L7"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2088]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/InlineCode/InlineCode.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineCode/InlineCode.tsx#L5"
        }
      ]
    },
    {
      "id": 2095,
      "name": "InlineErrorProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2097,
          "name": "fieldID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Unique identifier of the invalid form field that the message describes"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/InlineError/InlineError.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineError/InlineError.tsx#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2096,
          "name": "message",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content briefly explaining how to resolve the invalid form field input."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/InlineError/InlineError.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineError/InlineError.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "id": 103,
            "name": "Error"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2097, 2096]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/InlineError/InlineError.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineError/InlineError.tsx#L9"
        }
      ]
    },
    {
      "id": 2030,
      "name": "InlineProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2032,
          "name": "align",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Horizontal alignment of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Inline/Inline.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Align"
          }
        },
        {
          "id": 2036,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-activedescendant"
          }
        },
        {
          "id": 2037,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-atomic"
          }
        },
        {
          "id": 2038,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-autocomplete"
          }
        },
        {
          "id": 2039,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-busy"
          }
        },
        {
          "id": 2040,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-checked"
          }
        },
        {
          "id": 2041,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colcount"
          }
        },
        {
          "id": 2042,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colindex"
          }
        },
        {
          "id": 2043,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-colspan"
          }
        },
        {
          "id": 2044,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-controls"
          }
        },
        {
          "id": 2045,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-current"
          }
        },
        {
          "id": 2046,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-describedby"
          }
        },
        {
          "id": 2047,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-details"
          }
        },
        {
          "id": 2048,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-disabled"
          }
        },
        {
          "id": 2049,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-dropeffect"
          }
        },
        {
          "id": 2050,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-errormessage"
          }
        },
        {
          "id": 2051,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-expanded"
          }
        },
        {
          "id": 2052,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-flowto"
          }
        },
        {
          "id": 2053,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-grabbed"
          }
        },
        {
          "id": 2054,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-haspopup"
          }
        },
        {
          "id": 2055,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-hidden"
          }
        },
        {
          "id": 2056,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-invalid"
          }
        },
        {
          "id": 2057,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-keyshortcuts"
          }
        },
        {
          "id": 2058,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-label"
          }
        },
        {
          "id": 2059,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-labelledby"
          }
        },
        {
          "id": 2060,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-level"
          }
        },
        {
          "id": 2061,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-live"
          }
        },
        {
          "id": 2062,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-modal"
          }
        },
        {
          "id": 2063,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiline"
          }
        },
        {
          "id": 2064,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-multiselectable"
          }
        },
        {
          "id": 2065,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-orientation"
          }
        },
        {
          "id": 2066,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-owns"
          }
        },
        {
          "id": 2067,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-placeholder"
          }
        },
        {
          "id": 2068,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-posinset"
          }
        },
        {
          "id": 2069,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-pressed"
          }
        },
        {
          "id": 2070,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-readonly"
          }
        },
        {
          "id": 2071,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-relevant"
          }
        },
        {
          "id": 2072,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-required"
          }
        },
        {
          "id": 2073,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-roledescription"
          }
        },
        {
          "id": 2074,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowcount"
          }
        },
        {
          "id": 2075,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowindex"
          }
        },
        {
          "id": 2076,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-rowspan"
          }
        },
        {
          "id": 2077,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-selected"
          }
        },
        {
          "id": 2078,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-setsize"
          }
        },
        {
          "id": 2079,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-sort"
          }
        },
        {
          "id": 2080,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemax"
          }
        },
        {
          "id": 2081,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuemin"
          }
        },
        {
          "id": 2082,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuenow"
          }
        },
        {
          "id": 2083,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.AriaAttributes.aria-valuetext"
          }
        },
        {
          "id": 2033,
          "name": "blockAlign",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertical alignment of children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Inline/Inline.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BlockAlign"
          }
        },
        {
          "id": 2031,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Inline/Inline.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L21"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2034,
          "name": "gap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The spacing between elements. Accepts a spacing token or an object of spacing tokens for different screen sizes."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\ngap='2'\ngap={{xs: '2', sm: '3', md: '4', lg: '5', xl: '6'}}\n```"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Inline/Inline.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Gap"
          }
        },
        {
          "id": 2035,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Wrap stack elements to additional rows as needed on small screens"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Inline/Inline.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2032, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
            2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
            2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
            2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
            2079, 2080, 2081, 2082, 2083, 2033, 2031, 2034, 2035
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Inline/Inline.tsx",
          "line": 20,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L20"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "AriaAttributes",
          "qualifiedName": "React.AriaAttributes",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 2101,
      "name": "KeyboardKeyProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2102,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeyboardKey/KeyboardKey.tsx#L10"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2103,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeyboardKey/KeyboardKey.tsx#L11"
            }
          ],
          "type": {
            "type": "literal",
            "value": "small"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2102, 2103]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeyboardKey/KeyboardKey.tsx#L9"
        }
      ]
    },
    {
      "id": 2117,
      "name": "KonamiCodeProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2118,
          "name": "handler",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/KonamiCode/KonamiCode.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KonamiCode/KonamiCode.tsx#L6"
            }
          ],
          "signatures": [
            {
              "id": 2119,
              "name": "handler",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 2120,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "KeyboardEvent",
                    "qualifiedName": "KeyboardEvent",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "children": [2118]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/KonamiCode/KonamiCode.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KonamiCode/KonamiCode.tsx#L5"
        }
      ]
    },
    {
      "id": 2127,
      "name": "LabelProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2128,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label content"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Label/Label.tsx",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L9"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2130,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Label/Label.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2129,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Label/Label.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L11"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2131,
          "name": "requiredIndicator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visual required indicator for the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Label/Label.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2128, 2130, 2129, 2131]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Label/Label.tsx",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L7"
        }
      ]
    },
    {
      "id": 2135,
      "name": "LabelledProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2139,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L22"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 2141,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display inside the connected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2138,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Error to display beneath the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L20"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "reference",
                "id": 103,
                "name": "Error"
              }
            ]
          }
        },
        {
          "id": 2140,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional hint text to display"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2136,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2137,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text for the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L18"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2142,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2143,
          "name": "requiredIndicator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visual required indicator for the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2139, 2141, 2138, 2140, 2136, 2137, 2142, 2143]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
          "line": 14,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L14"
        }
      ]
    },
    {
      "id": 2157,
      "name": "LayoutProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2159,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the layout."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Layout/Layout.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L10"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2158,
          "name": "sectioned",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Automatically adds sections to layout."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Layout/Layout.tsx",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L8"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2159, 2158]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 6,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L6"
        }
      ]
    },
    {
      "id": 2196,
      "name": "LegacyCardHeaderProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2198,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Header/Header.tsx#L12"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 174,
              "name": "DisableableAction"
            }
          }
        },
        {
          "id": 2199,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Header/Header.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2197,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Header/Header.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2198, 2199, 2197]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/components/Header/Header.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Header/Header.tsx#L10"
        }
      ]
    },
    {
      "id": 2177,
      "name": "LegacyCardProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2182,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Card header actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L32"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 174,
              "name": "DisableableAction"
            }
          }
        },
        {
          "id": 2179,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2186,
          "name": "footerActionAlignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Alignment of the footer actions on the card, defaults to right"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L40"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "left"
              },
              {
                "type": "literal",
                "value": "right"
              }
            ]
          }
        },
        {
          "id": 2187,
          "name": "hideOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow the card to be hidden when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L42"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2183,
          "name": "primaryFooterAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary action in the card footer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L34"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          }
        },
        {
          "id": 2184,
          "name": "secondaryFooterActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Secondary actions in the card footer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L36"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 268,
              "name": "ComplexAction"
            }
          }
        },
        {
          "id": 2185,
          "name": "secondaryFooterActionsDisclosureText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content of the disclosure button rendered when there is more than one secondary footer action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L38"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2181,
          "name": "sectioned",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Auto wrap content in section"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2180,
          "name": "subdued",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A less prominent card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2178,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Title content for the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2182, 2179, 2186, 2187, 2183, 2184, 2185, 2181, 2180, 2178
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 22,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L22"
        }
      ]
    },
    {
      "id": 2188,
      "name": "LegacyCardSectionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2195,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L19"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 268,
              "name": "ComplexAction"
            }
          }
        },
        {
          "id": 2190,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2192,
          "name": "flush",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2193,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2194,
          "name": "hideOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow the card to be hidden when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2191,
          "name": "subdued",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2189,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2195, 2190, 2192, 2193, 2194, 2191, 2189]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/components/Section/Section.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Section/Section.tsx#L11"
        }
      ]
    },
    {
      "id": 2200,
      "name": "LegacyCardSubsectionProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2201,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx#L6"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2201]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/components/Subsection/Subsection.tsx#L5"
        }
      ]
    },
    {
      "id": 2205,
      "name": "LegacyStackProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2210,
          "name": "alignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust vertical alignment of elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L37"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Alignment"
          }
        },
        {
          "id": 2206,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Elements to display inside stack"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L29"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2211,
          "name": "distribution",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust horizontal alignment of elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L39"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Distribution"
          }
        },
        {
          "id": 2209,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust spacing between elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L35"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 2208,
          "name": "vertical",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Stack the elements vertically"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2207,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2210, 2206, 2211, 2209, 2208, 2207]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "line": 27,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L27"
        }
      ]
    },
    {
      "id": 152,
      "name": "LinkAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 155,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 119,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L119"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 154,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 117,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L117"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 153,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 115,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L115"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 156,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 121,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L121"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [155, 154, 153, 156]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 113,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L113"
        }
      ]
    },
    {
      "id": 2215,
      "name": "LinkProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2224,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Descriptive text to be read to screenreaders"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2218,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L15"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2225,
          "name": "dataPrimaryLink",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether or not the link is the primary navigation link when rendered inside of an "
              },
              {
                "kind": "code",
                "text": "`IndexTable.Row`"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L27"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2219,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Makes the link open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L17"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2216,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for the link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L11"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2220,
          "name": "monochrome",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Makes the link color the same as the current text color and adds an underline"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2221,
          "name": "removeUnderline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes text decoration underline to the link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2217,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The url to link to"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L13"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2222,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Link/Link.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L23"
            }
          ],
          "signatures": [
            {
              "id": 2223,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a link is clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2224, 2218, 2225, 2219, 2216, 2220, 2221, 2217]
        },
        {
          "title": "Methods",
          "children": [2222]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Link/Link.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L9"
        }
      ]
    },
    {
      "id": 2235,
      "name": "ListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2238,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List item elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/List/List.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2236,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Determines the space between list items"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'loose'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/List/List.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L17"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 2237,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Type of list to display"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'bullet'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/List/List.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L22"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Type"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2238, 2236, 2237]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/List/List.tsx",
          "line": 12,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L12"
        }
      ]
    },
    {
      "id": 2262,
      "name": "ListboxProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2266,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2264,
          "name": "autoSelection",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the default active option in the list. Patterns that support option creation should default the active option to the first option."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "AutoSelection.FirstSelected"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L51"
            }
          ],
          "type": {
            "type": "reference",
            "id": 2258,
            "name": "AutoSelection"
          }
        },
        {
          "id": 2263,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the listbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L47"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2267,
          "name": "customListId",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Provide a custom ID for the list element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2265,
          "name": "enableKeyboardControl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Explicitly enable keyboard control"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L53"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2271,
          "name": "onActiveOptionChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L61"
            }
          ],
          "signatures": [
            {
              "id": 2272,
              "name": "onActiveOptionChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired when an option becomes active"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2273,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2274,
                  "name": "domId",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2268,
          "name": "onSelect",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L59"
            }
          ],
          "signatures": [
            {
              "id": 2269,
              "name": "onSelect",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback fired when an option is selected"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2270,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2266, 2264, 2263, 2267, 2265]
        },
        {
          "title": "Methods",
          "children": [2271, 2268]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 45,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L45"
        }
      ]
    },
    {
      "id": 213,
      "name": "LoadableAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 217,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 143,
            "name": "Action.accessibilityLabel"
          }
        },
        {
          "id": 216,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 142,
            "name": "Action.content"
          }
        },
        {
          "id": 219,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 145,
            "name": "Action.external"
          }
        },
        {
          "id": 215,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 141,
            "name": "Action.id"
          }
        },
        {
          "id": 214,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should a spinner be displayed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 161,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L161"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 218,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 144,
            "name": "Action.url"
          }
        },
        {
          "id": 220,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 221,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 147,
                "name": "Action.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 146,
            "name": "Action.onAction"
          }
        },
        {
          "id": 222,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 223,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 149,
                "name": "Action.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 148,
            "name": "Action.onMouseEnter"
          }
        },
        {
          "id": 224,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 225,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 151,
                "name": "Action.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 150,
            "name": "Action.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [217, 216, 219, 215, 214, 218]
        },
        {
          "title": "Methods",
          "children": [220, 222, 224]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 159,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L159"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 2278,
      "name": "LoadingProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Loading/Loading.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Loading/Loading.tsx#L5"
        }
      ]
    },
    {
      "id": 286,
      "name": "MenuActionDescriptor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 290,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 271,
            "name": "ComplexAction.accessibilityLabel"
          }
        },
        {
          "id": 289,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 270,
            "name": "ComplexAction.content"
          }
        },
        {
          "id": 300,
          "name": "destructive",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Destructive action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 151,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L151"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 281,
            "name": "ComplexAction.destructive"
          }
        },
        {
          "id": 299,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the action is disabled"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 146,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L146"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 280,
            "name": "ComplexAction.disabled"
          }
        },
        {
          "id": 292,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 273,
            "name": "ComplexAction.external"
          }
        },
        {
          "id": 305,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text content to render in a tooltip"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 176,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L176"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "TooltipAction.helpText"
          }
        },
        {
          "id": 301,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Source of the icon"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 156,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L156"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 282,
            "name": "ComplexAction.icon"
          }
        },
        {
          "id": 288,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 269,
            "name": "ComplexAction.id"
          }
        },
        {
          "id": 287,
          "name": "index",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Zero-indexed numerical position. Overrides the action's order in the menu"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 225,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L225"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 303,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should a spinner be displayed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 161,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L161"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 284,
            "name": "ComplexAction.loading"
          }
        },
        {
          "id": 302,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should action be displayed as an outlined button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 166,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L166"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 283,
            "name": "ComplexAction.outline"
          }
        },
        {
          "id": 304,
          "name": "plain",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should action be displayed as a plain link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 171,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L171"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 285,
            "name": "ComplexAction.plain"
          }
        },
        {
          "id": 291,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 272,
            "name": "ComplexAction.url"
          }
        },
        {
          "id": 293,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 294,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 275,
                "name": "ComplexAction.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 274,
            "name": "ComplexAction.onAction"
          }
        },
        {
          "id": 295,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 296,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 277,
                "name": "ComplexAction.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 276,
            "name": "ComplexAction.onMouseEnter"
          }
        },
        {
          "id": 297,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 298,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 279,
                "name": "ComplexAction.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 278,
            "name": "ComplexAction.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            290, 289, 300, 299, 292, 305, 301, 288, 287, 303, 302, 304, 291
          ]
        },
        {
          "title": "Methods",
          "children": [293, 295, 297]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 223,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L223"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        },
        {
          "type": "reference",
          "name": "TooltipAction"
        }
      ]
    },
    {
      "id": 306,
      "name": "MenuGroupDescriptor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 308,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 232,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L232"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 239,
              "name": "ActionListItemDescriptor"
            }
          }
        },
        {
          "id": 321,
          "name": "badge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 125,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L125"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 322,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 324,
                  "name": "content",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 127,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L127"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 323,
                  "name": "status",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/types.ts",
                      "line": 126,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L126"
                    }
                  ],
                  "type": {
                    "type": "literal",
                    "value": "new"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [324, 323]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/types.ts",
                  "line": 125,
                  "character": 10,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L125"
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 158,
            "name": "BadgeAction.badge"
          }
        },
        {
          "id": 310,
          "name": "details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Action details"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 236,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L236"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 311,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables action button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 238,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L238"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 309,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Icon to display"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 234,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L234"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        },
        {
          "id": 312,
          "name": "index",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Zero-indexed numerical position. Overrides the group's order in the menu."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 240,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L240"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 313,
          "name": "onActionAnyItem",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 242,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L242"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 314,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/types.ts",
                  "line": 106,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
                }
              ],
              "signatures": [
                {
                  "id": 315,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Callback when any action takes place"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 307,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Menu group title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 230,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L230"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 316,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 244,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L244"
            }
          ],
          "signatures": [
            {
              "id": 317,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the menu is clicked"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 318,
                  "name": "openActions",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 319,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/types.ts",
                          "line": 244,
                          "character": 24,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L244"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 320,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [308, 321, 310, 311, 309, 312, 313, 307]
        },
        {
          "title": "Methods",
          "children": [316]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 228,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L228"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 157,
          "name": "BadgeAction"
        }
      ]
    },
    {
      "id": 2291,
      "name": "ModalProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2314,
          "name": "activator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element or the RefObject that activates the Modal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L61"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "HTMLElement",
                    "qualifiedName": "HTMLElement",
                    "package": "typescript"
                  }
                ],
                "name": "RefObject",
                "qualifiedName": "React.RefObject",
                "package": "@types/react"
              }
            ]
          }
        },
        {
          "id": 2297,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside modal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L37"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "overwrites": {
            "type": "reference",
            "name": "FooterProps.children"
          }
        },
        {
          "id": 2298,
          "name": "footer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the footer"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L39"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2316,
          "name": "fullScreen",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets modal to the height of the viewport on small screens"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2294,
          "name": "iFrameName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The name of the modal content iframe"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2299,
          "name": "instant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable animations and open modal instantly"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2301,
          "name": "large",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Increases the modal width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L45"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2303,
          "name": "limitHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Limits modal height on large sceens with scrolling"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2304,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Replaces modal content with a spinner while a background action is being performed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2315,
          "name": "noScroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes Scrollable container from the modal content"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2292,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the modal is open or not"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2317,
          "name": "primaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/components/Footer/Footer.tsx#L10"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "FooterProps.primaryAction"
          }
        },
        {
          "id": 2318,
          "name": "secondaryActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of secondary actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/components/Footer/Footer.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/components/Footer/Footer.tsx#L12"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 268,
              "name": "ComplexAction"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "FooterProps.secondaryActions"
          }
        },
        {
          "id": 2300,
          "name": "sectioned",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Automatically adds sections to modal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2302,
          "name": "small",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Decreases the modal width"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2293,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The url that will be loaded as the content of the modal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2295,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content for the title of the modal"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2296,
          "name": "titleHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hide the title in the modal"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2305,
          "name": "onClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L53"
            }
          ],
          "signatures": [
            {
              "id": 2306,
              "name": "onClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the modal is closed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2307,
          "name": "onIFrameLoad",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L55"
            }
          ],
          "signatures": [
            {
              "id": 2308,
              "name": "onIFrameLoad",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when iframe has loaded"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2309,
                  "name": "evt",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLIFrameElement",
                        "qualifiedName": "HTMLIFrameElement",
                        "package": "typescript"
                      },
                      {
                        "type": "reference",
                        "name": "Event",
                        "qualifiedName": "Event",
                        "package": "typescript"
                      }
                    ],
                    "name": "SyntheticEvent",
                    "qualifiedName": "React.SyntheticEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2312,
          "name": "onScrolledToBottom",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L59"
            }
          ],
          "signatures": [
            {
              "id": 2313,
              "name": "onScrolledToBottom",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the bottom of the modal content is reached"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2310,
          "name": "onTransitionEnd",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Modal/Modal.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L57"
            }
          ],
          "signatures": [
            {
              "id": 2311,
              "name": "onTransitionEnd",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when modal transition animation has ended"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2314, 2297, 2298, 2316, 2294, 2299, 2301, 2303, 2304, 2315, 2292,
            2317, 2318, 2300, 2302, 2293, 2295, 2296
          ]
        },
        {
          "title": "Methods",
          "children": [2305, 2307, 2312, 2310]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Modal/Modal.tsx",
          "line": 22,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L22"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "FooterProps"
        }
      ]
    },
    {
      "id": 2344,
      "name": "NavigationItemProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2349,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2346,
          "name": "badge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 58,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L58"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2348,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 60,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L60"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2356,
          "name": "displayActionsOnHover",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2351,
          "name": "exactMatch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "overwrites": {
            "type": "reference",
            "name": "ItemURLDetails.exactMatch"
          }
        },
        {
          "id": 2367,
          "name": "excludePaths",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L34"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.excludePaths"
          }
        },
        {
          "id": 2361,
          "name": "expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 72,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L72"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2368,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.external"
          }
        },
        {
          "id": 2345,
          "name": "icon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L57"
            }
          ],
          "type": {
            "type": "reference",
            "id": 101,
            "name": "IconSource"
          }
        },
        {
          "id": 2347,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2366,
          "name": "matchPaths",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L33"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.matchPaths"
          }
        },
        {
          "id": 2365,
          "name": "matches",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.matches"
          }
        },
        {
          "id": 2352,
          "name": "new",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 64,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L64"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2354,
          "name": "secondaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use secondaryActions instead."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L67"
            }
          ],
          "type": {
            "type": "reference",
            "name": "SecondaryAction"
          }
        },
        {
          "id": 2355,
          "name": "secondaryActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 68,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L68"
            }
          ],
          "type": {
            "type": "reference",
            "name": "SecondaryActions"
          }
        },
        {
          "id": 2350,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 62,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L62"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2362,
          "name": "shouldResizeIcon",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L73"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2353,
          "name": "subNavigationItems",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L65"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 2369,
              "name": "SubNavigationItem"
            }
          }
        },
        {
          "id": 2363,
          "name": "truncateText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 74,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L74"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2364,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.url"
          }
        },
        {
          "id": 2357,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 70,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L70"
            }
          ],
          "signatures": [
            {
              "id": 2358,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2359,
          "name": "onToggleExpandedState",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L71"
            }
          ],
          "signatures": [
            {
              "id": 2360,
              "name": "onToggleExpandedState",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2349, 2346, 2348, 2356, 2351, 2367, 2361, 2368, 2345, 2347, 2366,
            2365, 2352, 2354, 2355, 2350, 2362, 2353, 2363, 2364
          ]
        },
        {
          "title": "Methods",
          "children": [2357, 2359]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "line": 56,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L56"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "ItemURLDetails"
        }
      ]
    },
    {
      "id": 2336,
      "name": "NavigationProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2342,
          "name": "ariaLabelledBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "id of the element used as aria-labelledby"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2338,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L17"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2339,
          "name": "contextControl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L18"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2337,
          "name": "location",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2343,
          "name": "logoSuffix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a component that is used to supplement the logo markup"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2340,
          "name": "onDismiss",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L19"
            }
          ],
          "signatures": [
            {
              "id": 2341,
              "name": "onDismiss",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2342, 2338, 2339, 2337, 2343]
        },
        {
          "title": "Methods",
          "children": [2340]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 15,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L15"
        }
      ]
    },
    {
      "id": 2384,
      "name": "OptionListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2392,
          "name": "allowMultiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow more than one option to be selected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2385,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the option list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2389,
          "name": "optionRole",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a specific role attribute for each option in the list"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2387,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of options to be listed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L26"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "OptionDescriptor"
            }
          }
        },
        {
          "id": 2388,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a specific role attribute for the list itself"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2390,
          "name": "sections",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sections containing a header and related options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L32"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "SectionDescriptor"
            }
          }
        },
        {
          "id": 2391,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The selected options"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L34"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        },
        {
          "id": 2386,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2393,
          "name": "verticalAlign",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Vertically align child content to the center, top, or bottom."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Alignment"
          }
        },
        {
          "id": 2394,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L40"
            }
          ],
          "signatures": [
            {
              "id": 2395,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when selection is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2396,
                  "name": "selected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2392, 2385, 2389, 2387, 2388, 2390, 2391, 2386, 2393]
        },
        {
          "title": "Methods",
          "children": [2394]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
          "line": 20,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L20"
        }
      ]
    },
    {
      "id": 226,
      "name": "OutlineableAction",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 230,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 100,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L100"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 143,
            "name": "Action.accessibilityLabel"
          }
        },
        {
          "id": 229,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content the action displays"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 98,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L98"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 142,
            "name": "Action.content"
          }
        },
        {
          "id": 232,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 104,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L104"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 145,
            "name": "Action.external"
          }
        },
        {
          "id": 228,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 96,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L96"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 141,
            "name": "Action.id"
          }
        },
        {
          "id": 227,
          "name": "outline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Should action be displayed as an outlined button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 166,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L166"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 231,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 102,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L102"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 144,
            "name": "Action.url"
          }
        },
        {
          "id": 233,
          "name": "onAction",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 106,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L106"
            }
          ],
          "signatures": [
            {
              "id": 234,
              "name": "onAction",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when an action takes place"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 147,
                "name": "Action.onAction"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 146,
            "name": "Action.onAction"
          }
        },
        {
          "id": 235,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 108,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L108"
            }
          ],
          "signatures": [
            {
              "id": 236,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 149,
                "name": "Action.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 148,
            "name": "Action.onMouseEnter"
          }
        },
        {
          "id": 237,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 110,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L110"
            }
          ],
          "signatures": [
            {
              "id": 238,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 151,
                "name": "Action.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 150,
            "name": "Action.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [230, 229, 232, 228, 227, 231]
        },
        {
          "title": "Methods",
          "children": [233, 235, 237]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 164,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L164"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 140,
          "name": "Action"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 268,
          "name": "ComplexAction"
        }
      ]
    },
    {
      "id": 2424,
      "name": "PageActionsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2425,
          "name": "primaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The primary action for the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PageActions/PageActions.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PageActions/PageActions.tsx#L18"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 174,
                    "name": "DisableableAction"
                  },
                  {
                    "type": "reference",
                    "id": 213,
                    "name": "LoadableAction"
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 2426,
          "name": "secondaryActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The secondary actions for the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PageActions/PageActions.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PageActions/PageActions.tsx#L20"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 268,
                  "name": "ComplexAction"
                }
              }
            ]
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2425, 2426]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/PageActions/PageActions.tsx",
          "line": 16,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PageActions/PageActions.tsx#L16"
        }
      ]
    },
    {
      "id": 2400,
      "name": "PageProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2411,
          "name": "actionGroups",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of page-level groups of secondary actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L59"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 306,
              "name": "MenuGroupDescriptor"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.actionGroups"
          }
        },
        {
          "id": 2413,
          "name": "additionalMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L63"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.additionalMetadata"
          }
        },
        {
          "id": 2412,
          "name": "additionalNavigation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Additional navigation markup"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L61"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.additionalNavigation"
          }
        },
        {
          "id": 2409,
          "name": "backAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A back action link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L55"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 152,
                "name": "LinkAction"
              },
              {
                "type": "reference",
                "id": 168,
                "name": "CallbackAction"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.backAction"
          }
        },
        {
          "id": 2408,
          "name": "breadcrumbs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Collection of breadcrumbs"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L53"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 152,
                "name": "LinkAction"
              },
              {
                "type": "reference",
                "id": 168,
                "name": "CallbackAction"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "union",
                  "types": [
                    {
                      "type": "reference",
                      "id": 152,
                      "name": "LinkAction"
                    },
                    {
                      "type": "reference",
                      "id": 168,
                      "name": "CallbackAction"
                    }
                  ]
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.breadcrumbs"
          }
        },
        {
          "id": 2401,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The contents of the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/Page.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2420,
          "name": "compactTitle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Removes spacing between title and subtitle"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/components/Title/Title.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.compactTitle"
          }
        },
        {
          "id": 2404,
          "name": "divider",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Displays a divider between the page header and the page content"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/Page.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2402,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Remove the normal max-width on the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/Page.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2403,
          "name": "narrowWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Decreases the maximum layout width. Intended for single-column layouts"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/Page.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2407,
          "name": "pagination",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Page-level pagination"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L51"
            }
          ],
          "type": {
            "type": "reference",
            "id": 2430,
            "name": "PaginationProps"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.pagination"
          }
        },
        {
          "id": 2406,
          "name": "primaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Primary page-level action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L49"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              },
              {
                "type": "reference",
                "name": "PrimaryAction"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.primaryAction"
          }
        },
        {
          "id": 2410,
          "name": "secondaryActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of secondary page-level actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L57"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 286,
                  "name": "MenuActionDescriptor"
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.secondaryActions"
          }
        },
        {
          "id": 2418,
          "name": "subtitle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Page subtitle, in regular type"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/components/Title/Title.tsx#L11"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.subtitle"
          }
        },
        {
          "id": 2417,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Page title, in large type"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/components/Title/Title.tsx#L9"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.title"
          }
        },
        {
          "id": 2405,
          "name": "titleHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the title"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.titleHidden"
          }
        },
        {
          "id": 2419,
          "name": "titleMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Important and non-interactive status information shown immediately after the title."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/components/Title/Title.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/components/Title/Title.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.titleMetadata"
          }
        },
        {
          "id": 2414,
          "name": "onActionRollup",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Page/components/Header/Header.tsx",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/components/Header/Header.tsx#L65"
            }
          ],
          "signatures": [
            {
              "id": 2415,
              "name": "onActionRollup",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback that returns true when secondary actions are rolled up into action groups, and false when not"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2416,
                  "name": "hasRolledUp",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "HeaderProps.onActionRollup"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "HeaderProps.onActionRollup"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2411, 2413, 2412, 2409, 2408, 2401, 2420, 2404, 2402, 2403, 2407,
            2406, 2410, 2418, 2417, 2405, 2419
          ]
        },
        {
          "title": "Methods",
          "children": [2414]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Page/Page.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L10"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "HeaderProps"
        }
      ]
    },
    {
      "id": 2430,
      "name": "PaginationProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2439,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accessible label for the pagination"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2440,
          "name": "accessibilityLabels",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accessible labels for the buttons and UnstyledLinks"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "AccessibilityLabels"
          }
        },
        {
          "id": 2437,
          "name": "hasNext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether there is a next page to show"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2438,
          "name": "hasPrevious",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether there is a previous page to show"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2445,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text to provide more context in between the arrow buttons"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L44"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2431,
          "name": "nextKeys",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Keyboard shortcuts for the next button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L20"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1,
              "name": "Key"
            }
          }
        },
        {
          "id": 2433,
          "name": "nextTooltip",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tooltip for the next button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2435,
          "name": "nextURL",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The URL of the next page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2432,
          "name": "previousKeys",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Keyboard shortcuts for the previous button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L22"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 1,
              "name": "Key"
            }
          }
        },
        {
          "id": 2434,
          "name": "previousTooltip",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tooltip for the previous button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2436,
          "name": "previousURL",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The URL of the previous page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L30"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2441,
          "name": "onNext",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L40"
            }
          ],
          "signatures": [
            {
              "id": 2442,
              "name": "onNext",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when next button is clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2443,
          "name": "onPrevious",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L42"
            }
          ],
          "signatures": [
            {
              "id": 2444,
              "name": "onPrevious",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when previous button is clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2439, 2440, 2437, 2438, 2445, 2431, 2433, 2435, 2432, 2434, 2436
          ]
        },
        {
          "title": "Methods",
          "children": [2441, 2443]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
          "line": 18,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L18"
        }
      ]
    },
    {
      "id": 2463,
      "name": "PopoverProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2468,
          "name": "activator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element to activate the Popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L43"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "JSXElementConstructor",
                    "qualifiedName": "React.JSXElementConstructor",
                    "package": "@types/react"
                  }
                ]
              }
            ],
            "name": "ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          }
        },
        {
          "id": 2470,
          "name": "activatorWrapper",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element type to wrap the activator with"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'div'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L53"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2467,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Show or hide the Popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2478,
          "name": "ariaHaspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Used to illustrate the type of popover element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L69"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          }
        },
        {
          "id": 2483,
          "name": "autofocusTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The preferred auto focus target defaulting to the popover container"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'container'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 78,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L78"
            }
          ],
          "type": {
            "type": "reference",
            "id": 2486,
            "name": "PopoverAutofocusTarget"
          }
        },
        {
          "id": 2485,
          "name": "captureOverscroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prevents page scrolling when the end of the scrollable Popover overlay content is reached - applied to Pane subcomponent"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "false"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L85"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2464,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L35"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2477,
          "name": "fixed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Remains in a fixed position"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2476,
          "name": "fluidContent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow popover content to determine the overlay width and height"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2475,
          "name": "fullHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow popover to stretch to fit content vertically"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2474,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow popover to stretch to the full width of its activator"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2479,
          "name": "hideOnPrint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allow the popover overlay to be hidden when printing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2469,
          "name": "preferInputActivator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Use the activator's input element to calculate the Popover position"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L48"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2466,
          "name": "preferredAlignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The preferred alignment of the popover relative to its activator"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L39"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredAlignment"
          }
        },
        {
          "id": 2465,
          "name": "preferredPosition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The preferred direction to open the popover"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L37"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredPosition"
          }
        },
        {
          "id": 2484,
          "name": "preventCloseOnChildOverlayClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prevents closing the popover when other overlays are clicked"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 80,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L80"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2472,
          "name": "preventFocusOnClose",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prevents focusing the activator or the next focusable element when the popover is deactivated"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2473,
          "name": "sectioned",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Automatically add wrap content in a section"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2471,
          "name": "zIndexOverride",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Override on the default z-index of 400"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2480,
          "name": "onClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L73"
            }
          ],
          "signatures": [
            {
              "id": 2481,
              "name": "onClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when popover is closed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2482,
                  "name": "source",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 2458,
                    "name": "PopoverCloseSource"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2468, 2470, 2467, 2478, 2483, 2485, 2464, 2477, 2476, 2475, 2474,
            2479, 2469, 2466, 2465, 2484, 2472, 2473, 2471
          ]
        },
        {
          "title": "Methods",
          "children": [2480]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Popover/Popover.tsx",
          "line": 33,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L33"
        }
      ]
    },
    {
      "id": 2487,
      "name": "PopoverPublicAPI",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2488,
          "name": "forceUpdatePosition",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Popover/Popover.tsx",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L89"
            }
          ],
          "signatures": [
            {
              "id": 2489,
              "name": "forceUpdatePosition",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Methods",
          "children": [2488]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Popover/Popover.tsx",
          "line": 88,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L88"
        }
      ]
    },
    {
      "id": 2493,
      "name": "PortalProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2494,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Portal/Portal.tsx",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Portal/Portal.tsx#L8"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2495,
          "name": "idPrefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Portal/Portal.tsx",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Portal/Portal.tsx#L9"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2496,
          "name": "onPortalCreated",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Portal/Portal.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Portal/Portal.tsx#L10"
            }
          ],
          "signatures": [
            {
              "id": 2497,
              "name": "onPortalCreated",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2494, 2495]
        },
        {
          "title": "Methods",
          "children": [2496]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Portal/Portal.tsx",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Portal/Portal.tsx#L7"
        }
      ]
    },
    {
      "id": 2501,
      "name": "PortalsManagerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2502,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PortalsManager/PortalsManager.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2503,
          "name": "container",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PortalsManager/PortalsManager.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PortalsContainerElement"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2502, 2503]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PortalsManager/PortalsManager.tsx#L10"
        }
      ]
    },
    {
      "id": 2595,
      "name": "PositionedOverlayProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2597,
          "name": "activator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L35"
            }
          ],
          "type": {
            "type": "reference",
            "name": "HTMLElement",
            "qualifiedName": "HTMLElement",
            "package": "typescript"
          }
        },
        {
          "id": 2596,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2604,
          "name": "classNames",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L42"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2602,
          "name": "fixed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2601,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2598,
          "name": "preferInputActivator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L36"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2600,
          "name": "preferredAlignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredAlignment"
          }
        },
        {
          "id": 2599,
          "name": "preferredPosition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L37"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredPosition"
          }
        },
        {
          "id": 2603,
          "name": "preventInteraction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2605,
          "name": "zIndexOverride",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2609,
          "name": "onScrollOut",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L45"
            }
          ],
          "signatures": [
            {
              "id": 2610,
              "name": "onScrollOut",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2606,
          "name": "render",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
              "line": 44,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L44"
            }
          ],
          "signatures": [
            {
              "id": 2607,
              "name": "render",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "parameters": [
                {
                  "id": 2608,
                  "name": "overlayDetails",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "OverlayDetails"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2597, 2596, 2604, 2602, 2601, 2598, 2600, 2599, 2603, 2605
          ]
        },
        {
          "title": "Methods",
          "children": [2609, 2606]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx",
          "line": 33,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PositionedOverlay/PositionedOverlay.tsx#L33"
        }
      ]
    },
    {
      "id": 2614,
      "name": "ProgressBarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2618,
          "name": "animated",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the fill animation is triggered"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'true'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2619,
          "name": "ariaLabelledBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Id (ids) of element (elements) that describes progressbar"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L37"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2617,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Color of progressbar"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'highlight'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Color"
          }
        },
        {
          "id": 2615,
          "name": "progress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The progression of certain tasks"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "0"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2616,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of progressbar"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2618, 2619, 2617, 2615, 2616]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "line": 13,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L13"
        }
      ]
    },
    {
      "id": 3827,
      "name": "RGBAColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3828,
          "name": "alpha",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L8"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3831,
          "name": "blue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 4,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L4"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3822,
            "name": "RGBColor.blue"
          }
        },
        {
          "id": 3830,
          "name": "green",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 3,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L3"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3821,
            "name": "RGBColor.green"
          }
        },
        {
          "id": 3829,
          "name": "red",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 2,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L2"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 3820,
            "name": "RGBColor.red"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3828, 3831, 3830, 3829]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L7"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "id": 3819,
          "name": "RGBColor"
        }
      ]
    },
    {
      "id": 3819,
      "name": "RGBColor",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3822,
          "name": "blue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 4,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L4"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3821,
          "name": "green",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 3,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L3"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3820,
          "name": "red",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/color-types.ts",
              "line": 2,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L2"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3822, 3821, 3820]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 1,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L1"
        }
      ],
      "extendedBy": [
        {
          "type": "reference",
          "id": 3827,
          "name": "RGBAColor"
        }
      ]
    },
    {
      "id": 2623,
      "name": "RadioButtonProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2624,
          "name": "ariaDescribedBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that describes the the radio button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L12"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2627,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Radio button is selected"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2629,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2628,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional text to aid in use"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L20"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2630,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2625,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the radio button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2626,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2631,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2632,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Value for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2639,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L34"
            }
          ],
          "signatures": [
            {
              "id": 2640,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus is removed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2633,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L30"
            }
          ],
          "signatures": [
            {
              "id": 2634,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the radio button is toggled"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2635,
                  "name": "newValue",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2636,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2637,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L32"
            }
          ],
          "signatures": [
            {
              "id": 2638,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when radio button is focussed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2624, 2627, 2629, 2628, 2630, 2625, 2626, 2631, 2632]
        },
        {
          "title": "Methods",
          "children": [2639, 2633, 2637]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L10"
        }
      ]
    },
    {
      "id": 1292,
      "name": "Range",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 1294,
          "name": "end",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/dates.ts",
              "line": 3,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/dates.ts#L3"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Date",
            "qualifiedName": "Date",
            "package": "typescript"
          }
        },
        {
          "id": 1293,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/dates.ts",
              "line": 2,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/dates.ts#L2"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Date",
            "qualifiedName": "Date",
            "package": "typescript"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [1294, 1293]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/dates.ts",
          "line": 1,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/dates.ts#L1"
        }
      ]
    },
    {
      "id": 2644,
      "name": "RangeSliderProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2656,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2655,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display an error message"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L30"
            }
          ],
          "type": {
            "type": "reference",
            "id": 103,
            "name": "Error"
          }
        },
        {
          "id": 2654,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional text to aid in use"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2648,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for range input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2645,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the range input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L10"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2646,
          "name": "labelAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds an action to the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L12"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 2647,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2651,
          "name": "max",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Maximum possible value for range input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2650,
          "name": "min",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Minimum possible value for range input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2653,
          "name": "output",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Provide a tooltip while sliding, indicating the current value"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L26"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2657,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Element to display before the input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L34"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2652,
          "name": "step",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Increment value for range input changes"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2658,
          "name": "suffix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Element to display after the input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2649,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Initial value for range input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L18"
            }
          ],
          "type": {
            "type": "reference",
            "name": "RangeSliderValue"
          }
        },
        {
          "id": 2665,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L42"
            }
          ],
          "signatures": [
            {
              "id": 2666,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus is removed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2659,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L38"
            }
          ],
          "signatures": [
            {
              "id": 2660,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the range input is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2661,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "RangeSliderValue"
                  }
                },
                {
                  "id": 2662,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2663,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/RangeSlider/types.ts",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L40"
            }
          ],
          "signatures": [
            {
              "id": 2664,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when range input is focused"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2656, 2655, 2654, 2648, 2645, 2646, 2647, 2651, 2650, 2653, 2657,
            2652, 2658, 2649
          ]
        },
        {
          "title": "Methods",
          "children": [2665, 2659, 2663]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/RangeSlider/types.ts",
          "line": 8,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/types.ts#L8"
        }
      ]
    },
    {
      "id": 2680,
      "name": "ResourceListProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2700,
          "name": "alternateTool",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ReactNode to display instead of the sort control"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 107,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L107"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2690,
          "name": "bulkActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Actions available on the currently selected items"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L87"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 265,
                  "name": "ActionListSection"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          }
        },
        {
          "id": 2684,
          "name": "emptySearchState",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The markup to display when no results are returned on search or filter of the list. Renders when "
              },
              {
                "kind": "code",
                "text": "`filterControl`"
              },
              {
                "kind": "text",
                "text": " is set, items are empty, and "
              },
              {
                "kind": "code",
                "text": "`emptyState`"
              },
              {
                "kind": "text",
                "text": " is not set."
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "EmptySearchResult"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 78,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L78"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2683,
          "name": "emptyState",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The markup to display when no resources exist yet. Renders when set and items is empty."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 74,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L74"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2682,
          "name": "filterControl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 72,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L72"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 2694,
          "name": "hasMoreItems",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 95,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L95"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2701,
          "name": "headerContent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Custom header text displayed above the list instead of the resource count."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 109,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L109"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2692,
          "name": "isFiltered",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the list has filter(s) applied"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L91"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2681,
          "name": "items",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Item data; each item is passed to renderItem"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L71"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 2721,
              "name": "TItemType"
            }
          }
        },
        {
          "id": 2695,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Overlays item list with a spinner while a background action is being performed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 97,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L97"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2689,
          "name": "promotedBulkActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Up to 2 bulk actions that will be given more prominence"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L85"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 306,
                  "name": "MenuGroupDescriptor"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          }
        },
        {
          "id": 2685,
          "name": "resourceName",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name of the resource, such as customers or products"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 80,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L80"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2686,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 2688,
                  "name": "plural",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
                      "line": 82,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L82"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2687,
                  "name": "singular",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
                      "line": 81,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L81"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2688, 2687]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
                  "line": 80,
                  "character": 17,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L80"
                }
              ]
            }
          }
        },
        {
          "id": 2693,
          "name": "selectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 93,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L93"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2691,
          "name": "selectedItems",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of IDs for the currently selected items"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L89"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ResourceListSelectedItems"
          }
        },
        {
          "id": 2696,
          "name": "showHeader",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Boolean to show or hide the header"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 99,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L99"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2699,
          "name": "sortOptions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Collection of sort options to choose from"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 105,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L105"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 3130,
              "name": "SelectOption"
            }
          }
        },
        {
          "id": 2698,
          "name": "sortValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Current value of the sort control"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 103,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L103"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2697,
          "name": "totalItemsCount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Total number of resources"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 101,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L101"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 2714,
          "name": "idForItem",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 117,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L117"
            }
          ],
          "signatures": [
            {
              "id": 2715,
              "name": "idForItem",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Function to customize the unique ID for each item"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2716,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 2721,
                    "name": "TItemType"
                  }
                },
                {
                  "id": 2717,
                  "name": "index",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2706,
          "name": "onSelectionChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 113,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L113"
            }
          ],
          "signatures": [
            {
              "id": 2707,
              "name": "onSelectionChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when selection is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2708,
                  "name": "selectedItems",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "name": "ResourceListSelectedItems"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2702,
          "name": "onSortChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 111,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L111"
            }
          ],
          "signatures": [
            {
              "id": 2703,
              "name": "onSortChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when sort option is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2704,
                  "name": "selected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2705,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2709,
          "name": "renderItem",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 115,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L115"
            }
          ],
          "signatures": [
            {
              "id": 2710,
              "name": "renderItem",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Function to render each list item, must return a ResourceItem component"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2711,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 2721,
                    "name": "TItemType"
                  }
                },
                {
                  "id": 2712,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2713,
                  "name": "index",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "ReactNode",
                "qualifiedName": "React.ReactNode",
                "package": "@types/react"
              }
            }
          ]
        },
        {
          "id": 2718,
          "name": "resolveItemId",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
              "line": 119,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L119"
            }
          ],
          "signatures": [
            {
              "id": 2719,
              "name": "resolveItemId",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Function to resolve the ids of items"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 2720,
                  "name": "item",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "id": 2721,
                    "name": "TItemType"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2700, 2690, 2684, 2683, 2682, 2694, 2701, 2692, 2681, 2695, 2689,
            2685, 2693, 2691, 2696, 2699, 2698, 2697
          ]
        },
        {
          "title": "Methods",
          "children": [2714, 2706, 2702, 2709, 2718]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "line": 69,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L69"
        }
      ],
      "typeParameters": [
        {
          "id": 2721,
          "name": "TItemType",
          "kind": 131072,
          "kindString": "Type parameter",
          "flags": {},
          "default": {
            "type": "intrinsic",
            "name": "any"
          }
        }
      ]
    },
    {
      "id": 2725,
      "name": "ScrollableProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2861,
          "name": "about",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1876,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.about"
          }
        },
        {
          "id": 2734,
          "name": "accept",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1914,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.accept"
          }
        },
        {
          "id": 2735,
          "name": "acceptCharset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1915,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.acceptCharset"
          }
        },
        {
          "id": 2844,
          "name": "accessKey",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1852,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.accessKey"
          }
        },
        {
          "id": 2736,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1916,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.action"
          }
        },
        {
          "id": 2737,
          "name": "allowFullScreen",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1917,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.allowFullScreen"
          }
        },
        {
          "id": 2738,
          "name": "allowTransparency",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1918,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.allowTransparency"
          }
        },
        {
          "id": 2739,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1919,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.alt"
          }
        },
        {
          "id": 2883,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-activedescendant"
          }
        },
        {
          "id": 2884,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-atomic"
          }
        },
        {
          "id": 2885,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-autocomplete"
          }
        },
        {
          "id": 2886,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-busy"
          }
        },
        {
          "id": 2887,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-checked"
          }
        },
        {
          "id": 2888,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colcount"
          }
        },
        {
          "id": 2889,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colindex"
          }
        },
        {
          "id": 2890,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-colspan"
          }
        },
        {
          "id": 2891,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-controls"
          }
        },
        {
          "id": 2892,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-current"
          }
        },
        {
          "id": 2893,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-describedby"
          }
        },
        {
          "id": 2894,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-details"
          }
        },
        {
          "id": 2895,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-disabled"
          }
        },
        {
          "id": 2896,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-dropeffect"
          }
        },
        {
          "id": 2897,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-errormessage"
          }
        },
        {
          "id": 2898,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-expanded"
          }
        },
        {
          "id": 2899,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-flowto"
          }
        },
        {
          "id": 2900,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-grabbed"
          }
        },
        {
          "id": 2901,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-haspopup"
          }
        },
        {
          "id": 2902,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-hidden"
          }
        },
        {
          "id": 2903,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-invalid"
          }
        },
        {
          "id": 2904,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-keyshortcuts"
          }
        },
        {
          "id": 2905,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-label"
          }
        },
        {
          "id": 2906,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-labelledby"
          }
        },
        {
          "id": 2907,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-level"
          }
        },
        {
          "id": 2908,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-live"
          }
        },
        {
          "id": 2909,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-modal"
          }
        },
        {
          "id": 2910,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-multiline"
          }
        },
        {
          "id": 2911,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-multiselectable"
          }
        },
        {
          "id": 2912,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-orientation"
          }
        },
        {
          "id": 2913,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-owns"
          }
        },
        {
          "id": 2914,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-placeholder"
          }
        },
        {
          "id": 2915,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-posinset"
          }
        },
        {
          "id": 2916,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-pressed"
          }
        },
        {
          "id": 2917,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-readonly"
          }
        },
        {
          "id": 2918,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-relevant"
          }
        },
        {
          "id": 2919,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-required"
          }
        },
        {
          "id": 2920,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-roledescription"
          }
        },
        {
          "id": 2921,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowcount"
          }
        },
        {
          "id": 2922,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowindex"
          }
        },
        {
          "id": 2923,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-rowspan"
          }
        },
        {
          "id": 2924,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-selected"
          }
        },
        {
          "id": 2925,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-setsize"
          }
        },
        {
          "id": 2926,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-sort"
          }
        },
        {
          "id": 2927,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuemax"
          }
        },
        {
          "id": 2928,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuemin"
          }
        },
        {
          "id": 2929,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuenow"
          }
        },
        {
          "id": 2930,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.aria-valuetext"
          }
        },
        {
          "id": 2740,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1920,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.as"
          }
        },
        {
          "id": 2741,
          "name": "async",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1921,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.async"
          }
        },
        {
          "id": 2869,
          "name": "autoCapitalize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1886,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoCapitalize"
          }
        },
        {
          "id": 2742,
          "name": "autoComplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1922,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoComplete"
          }
        },
        {
          "id": 2870,
          "name": "autoCorrect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1887,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoCorrect"
          }
        },
        {
          "id": 2743,
          "name": "autoFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1923,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoFocus"
          }
        },
        {
          "id": 2744,
          "name": "autoPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1924,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoPlay"
          }
        },
        {
          "id": 2871,
          "name": "autoSave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1888,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.autoSave"
          }
        },
        {
          "id": 2745,
          "name": "capture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1925,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "user"
              },
              {
                "type": "literal",
                "value": "environment"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.capture"
          }
        },
        {
          "id": 2746,
          "name": "cellPadding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1926,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cellPadding"
          }
        },
        {
          "id": 2747,
          "name": "cellSpacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1927,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cellSpacing"
          }
        },
        {
          "id": 2749,
          "name": "challenge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1929,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.challenge"
          }
        },
        {
          "id": 2748,
          "name": "charSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1928,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.charSet"
          }
        },
        {
          "id": 2750,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1930,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.checked"
          }
        },
        {
          "id": 2726,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display in scrollable area"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L29"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "overwrites": {
            "type": "reference",
            "name": "React.HTMLProps.children"
          }
        },
        {
          "id": 2751,
          "name": "cite",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1931,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cite"
          }
        },
        {
          "id": 2752,
          "name": "classID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1932,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.classID"
          }
        },
        {
          "id": 2845,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1853,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.className"
          }
        },
        {
          "id": 2754,
          "name": "colSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1934,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.colSpan"
          }
        },
        {
          "id": 2872,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1889,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.color"
          }
        },
        {
          "id": 2753,
          "name": "cols",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1933,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.cols"
          }
        },
        {
          "id": 2755,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1935,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.content"
          }
        },
        {
          "id": 2846,
          "name": "contentEditable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1854,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "Booleanish",
                "qualifiedName": "Booleanish",
                "package": "@types/react"
              },
              {
                "type": "literal",
                "value": "inherit"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.contentEditable"
          }
        },
        {
          "id": 2847,
          "name": "contextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1855,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.contextMenu"
          }
        },
        {
          "id": 2756,
          "name": "controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1936,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.controls"
          }
        },
        {
          "id": 2757,
          "name": "coords",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1937,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.coords"
          }
        },
        {
          "id": 2758,
          "name": "crossOrigin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1938,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.crossOrigin"
          }
        },
        {
          "id": 2931,
          "name": "dangerouslySetInnerHTML",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1375,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2932,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 2933,
                  "name": "__html",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 1376,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2933]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1375,
                  "character": 34
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dangerouslySetInnerHTML"
          }
        },
        {
          "id": 2759,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1939,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.data"
          }
        },
        {
          "id": 2862,
          "name": "datatype",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1877,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.datatype"
          }
        },
        {
          "id": 2760,
          "name": "dateTime",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1940,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dateTime"
          }
        },
        {
          "id": 2761,
          "name": "default",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1941,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.default"
          }
        },
        {
          "id": 2840,
          "name": "defaultChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1846,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defaultChecked"
          }
        },
        {
          "id": 2841,
          "name": "defaultValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1847,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defaultValue"
          }
        },
        {
          "id": 2762,
          "name": "defer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1942,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.defer"
          }
        },
        {
          "id": 2848,
          "name": "dir",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1856,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.dir"
          }
        },
        {
          "id": 2763,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1943,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.disabled"
          }
        },
        {
          "id": 2764,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1944,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.download"
          }
        },
        {
          "id": 2849,
          "name": "draggable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1857,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.draggable"
          }
        },
        {
          "id": 2765,
          "name": "encType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1945,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.encType"
          }
        },
        {
          "id": 2731,
          "name": "focusable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds a tabIndex to scrollable when children are not focusable"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2766,
          "name": "form",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1946,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.form"
          }
        },
        {
          "id": 2767,
          "name": "formAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1947,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formAction"
          }
        },
        {
          "id": 2768,
          "name": "formEncType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1948,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formEncType"
          }
        },
        {
          "id": 2769,
          "name": "formMethod",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1949,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formMethod"
          }
        },
        {
          "id": 2770,
          "name": "formNoValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1950,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formNoValidate"
          }
        },
        {
          "id": 2771,
          "name": "formTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1951,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.formTarget"
          }
        },
        {
          "id": 2772,
          "name": "frameBorder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1952,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.frameBorder"
          }
        },
        {
          "id": 2773,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1953,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.headers"
          }
        },
        {
          "id": 2774,
          "name": "height",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1954,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.height"
          }
        },
        {
          "id": 2850,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1858,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.hidden"
          }
        },
        {
          "id": 2775,
          "name": "high",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1955,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.high"
          }
        },
        {
          "id": 2730,
          "name": "hint",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Slightly hints content upon mounting when scrollable"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2728,
          "name": "horizontal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Scroll content horizontally"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L37"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2776,
          "name": "href",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1956,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.href"
          }
        },
        {
          "id": 2777,
          "name": "hrefLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1957,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.hrefLang"
          }
        },
        {
          "id": 2778,
          "name": "htmlFor",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1958,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.htmlFor"
          }
        },
        {
          "id": 2779,
          "name": "httpEquiv",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1959,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.httpEquiv"
          }
        },
        {
          "id": 2851,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1859,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.id"
          }
        },
        {
          "id": 2863,
          "name": "inlist",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1878,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.inlist"
          }
        },
        {
          "id": 2881,
          "name": "inputMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1904,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "url"
              },
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "search"
              },
              {
                "type": "literal",
                "value": "numeric"
              },
              {
                "type": "literal",
                "value": "tel"
              },
              {
                "type": "literal",
                "value": "email"
              },
              {
                "type": "literal",
                "value": "decimal"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.inputMode"
          }
        },
        {
          "id": 2780,
          "name": "integrity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1960,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.integrity"
          }
        },
        {
          "id": 2882,
          "name": "is",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1909,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.is"
          }
        },
        {
          "id": 2876,
          "name": "itemID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1893,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemID"
          }
        },
        {
          "id": 2873,
          "name": "itemProp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1890,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemProp"
          }
        },
        {
          "id": 2877,
          "name": "itemRef",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1894,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemRef"
          }
        },
        {
          "id": 2874,
          "name": "itemScope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1891,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemScope"
          }
        },
        {
          "id": 2875,
          "name": "itemType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1892,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.itemType"
          }
        },
        {
          "id": 3095,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 131,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Key",
                "qualifiedName": "React.Key",
                "package": "@types/react"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.key"
          }
        },
        {
          "id": 2781,
          "name": "keyParams",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1961,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.keyParams"
          }
        },
        {
          "id": 2782,
          "name": "keyType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1962,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.keyType"
          }
        },
        {
          "id": 2783,
          "name": "kind",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1963,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.kind"
          }
        },
        {
          "id": 2784,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1964,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.label"
          }
        },
        {
          "id": 2852,
          "name": "lang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1860,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.lang"
          }
        },
        {
          "id": 2785,
          "name": "list",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1965,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.list"
          }
        },
        {
          "id": 2786,
          "name": "loop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1966,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.loop"
          }
        },
        {
          "id": 2787,
          "name": "low",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1967,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.low"
          }
        },
        {
          "id": 2788,
          "name": "manifest",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1968,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.manifest"
          }
        },
        {
          "id": 2789,
          "name": "marginHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1969,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.marginHeight"
          }
        },
        {
          "id": 2790,
          "name": "marginWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1970,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.marginWidth"
          }
        },
        {
          "id": 2791,
          "name": "max",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1971,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.max"
          }
        },
        {
          "id": 2792,
          "name": "maxLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1972,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.maxLength"
          }
        },
        {
          "id": 2793,
          "name": "media",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1973,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.media"
          }
        },
        {
          "id": 2794,
          "name": "mediaGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1974,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.mediaGroup"
          }
        },
        {
          "id": 2795,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1975,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.method"
          }
        },
        {
          "id": 2796,
          "name": "min",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1976,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.min"
          }
        },
        {
          "id": 2797,
          "name": "minLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1977,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.minLength"
          }
        },
        {
          "id": 2798,
          "name": "multiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1978,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.multiple"
          }
        },
        {
          "id": 2799,
          "name": "muted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1979,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.muted"
          }
        },
        {
          "id": 2800,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1980,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.name"
          }
        },
        {
          "id": 2802,
          "name": "noValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1982,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.noValidate"
          }
        },
        {
          "id": 2801,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1981,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.nonce"
          }
        },
        {
          "id": 2972,
          "name": "onAbort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1432,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAbort"
          }
        },
        {
          "id": 2973,
          "name": "onAbortCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1433,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAbortCapture"
          }
        },
        {
          "id": 3088,
          "name": "onAnimationEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1562,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationEnd"
          }
        },
        {
          "id": 3089,
          "name": "onAnimationEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1563,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationEndCapture"
          }
        },
        {
          "id": 3090,
          "name": "onAnimationIteration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1564,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationIteration"
          }
        },
        {
          "id": 3091,
          "name": "onAnimationIterationCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1565,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationIterationCapture"
          }
        },
        {
          "id": 3086,
          "name": "onAnimationStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1560,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationStart"
          }
        },
        {
          "id": 3087,
          "name": "onAnimationStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1561,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAnimationStartCapture"
          }
        },
        {
          "id": 3016,
          "name": "onAuxClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1478,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAuxClick"
          }
        },
        {
          "id": 3017,
          "name": "onAuxClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1479,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onAuxClickCapture"
          }
        },
        {
          "id": 2952,
          "name": "onBeforeInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1404,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBeforeInput"
          }
        },
        {
          "id": 2953,
          "name": "onBeforeInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1405,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBeforeInputCapture"
          }
        },
        {
          "id": 2948,
          "name": "onBlur",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1398,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBlur"
          }
        },
        {
          "id": 2949,
          "name": "onBlurCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1399,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onBlurCapture"
          }
        },
        {
          "id": 2974,
          "name": "onCanPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1434,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlay"
          }
        },
        {
          "id": 2975,
          "name": "onCanPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1435,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayCapture"
          }
        },
        {
          "id": 2976,
          "name": "onCanPlayThrough",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1436,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayThrough"
          }
        },
        {
          "id": 2977,
          "name": "onCanPlayThroughCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1437,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCanPlayThroughCapture"
          }
        },
        {
          "id": 2950,
          "name": "onChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1402,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onChange"
          }
        },
        {
          "id": 2951,
          "name": "onChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1403,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onChangeCapture"
          }
        },
        {
          "id": 3018,
          "name": "onClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1480,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onClick"
          }
        },
        {
          "id": 3019,
          "name": "onClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1481,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onClickCapture"
          }
        },
        {
          "id": 2940,
          "name": "onCompositionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1388,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionEnd"
          }
        },
        {
          "id": 2941,
          "name": "onCompositionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1389,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionEndCapture"
          }
        },
        {
          "id": 2942,
          "name": "onCompositionStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1390,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionStart"
          }
        },
        {
          "id": 2943,
          "name": "onCompositionStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1391,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionStartCapture"
          }
        },
        {
          "id": 2944,
          "name": "onCompositionUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1392,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionUpdate"
          }
        },
        {
          "id": 2945,
          "name": "onCompositionUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1393,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCompositionUpdateCapture"
          }
        },
        {
          "id": 3020,
          "name": "onContextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1482,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onContextMenu"
          }
        },
        {
          "id": 3021,
          "name": "onContextMenuCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1483,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onContextMenuCapture"
          }
        },
        {
          "id": 2934,
          "name": "onCopy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1380,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCopy"
          }
        },
        {
          "id": 2935,
          "name": "onCopyCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1381,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCopyCapture"
          }
        },
        {
          "id": 2936,
          "name": "onCut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1382,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCut"
          }
        },
        {
          "id": 2937,
          "name": "onCutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1383,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onCutCapture"
          }
        },
        {
          "id": 3022,
          "name": "onDoubleClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1484,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDoubleClick"
          }
        },
        {
          "id": 3023,
          "name": "onDoubleClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1485,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDoubleClickCapture"
          }
        },
        {
          "id": 3024,
          "name": "onDrag",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1486,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDrag"
          }
        },
        {
          "id": 3025,
          "name": "onDragCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1487,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragCapture"
          }
        },
        {
          "id": 3026,
          "name": "onDragEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1488,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnd"
          }
        },
        {
          "id": 3027,
          "name": "onDragEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1489,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEndCapture"
          }
        },
        {
          "id": 3028,
          "name": "onDragEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1490,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnter"
          }
        },
        {
          "id": 3029,
          "name": "onDragEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1491,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragEnterCapture"
          }
        },
        {
          "id": 3030,
          "name": "onDragExit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1492,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragExit"
          }
        },
        {
          "id": 3031,
          "name": "onDragExitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1493,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragExitCapture"
          }
        },
        {
          "id": 3032,
          "name": "onDragLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1494,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragLeave"
          }
        },
        {
          "id": 3033,
          "name": "onDragLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1495,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragLeaveCapture"
          }
        },
        {
          "id": 3034,
          "name": "onDragOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1496,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragOver"
          }
        },
        {
          "id": 3035,
          "name": "onDragOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1497,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragOverCapture"
          }
        },
        {
          "id": 3036,
          "name": "onDragStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1498,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragStart"
          }
        },
        {
          "id": 3037,
          "name": "onDragStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1499,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDragStartCapture"
          }
        },
        {
          "id": 3038,
          "name": "onDrop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1500,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDrop"
          }
        },
        {
          "id": 3039,
          "name": "onDropCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1501,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDropCapture"
          }
        },
        {
          "id": 2978,
          "name": "onDurationChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1438,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDurationChange"
          }
        },
        {
          "id": 2979,
          "name": "onDurationChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1439,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onDurationChangeCapture"
          }
        },
        {
          "id": 2980,
          "name": "onEmptied",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1440,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEmptied"
          }
        },
        {
          "id": 2981,
          "name": "onEmptiedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1441,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEmptiedCapture"
          }
        },
        {
          "id": 2982,
          "name": "onEncrypted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1442,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEncrypted"
          }
        },
        {
          "id": 2983,
          "name": "onEncryptedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1443,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEncryptedCapture"
          }
        },
        {
          "id": 2984,
          "name": "onEnded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1444,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEnded"
          }
        },
        {
          "id": 2985,
          "name": "onEndedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1445,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onEndedCapture"
          }
        },
        {
          "id": 2964,
          "name": "onError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1418,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onError"
          }
        },
        {
          "id": 2965,
          "name": "onErrorCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1419,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onErrorCapture"
          }
        },
        {
          "id": 2946,
          "name": "onFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1396,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onFocus"
          }
        },
        {
          "id": 2947,
          "name": "onFocusCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1397,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onFocusCapture"
          }
        },
        {
          "id": 3078,
          "name": "onGotPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1546,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onGotPointerCapture"
          }
        },
        {
          "id": 3079,
          "name": "onGotPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1547,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onGotPointerCaptureCapture"
          }
        },
        {
          "id": 2954,
          "name": "onInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1406,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInput"
          }
        },
        {
          "id": 2955,
          "name": "onInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1407,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInputCapture"
          }
        },
        {
          "id": 2960,
          "name": "onInvalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1412,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInvalid"
          }
        },
        {
          "id": 2961,
          "name": "onInvalidCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1413,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onInvalidCapture"
          }
        },
        {
          "id": 2966,
          "name": "onKeyDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1422,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyDown"
          }
        },
        {
          "id": 2967,
          "name": "onKeyDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1423,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyDownCapture"
          }
        },
        {
          "id": 2968,
          "name": "onKeyPress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1425,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyPress"
          }
        },
        {
          "id": 2969,
          "name": "onKeyPressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1427,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyPressCapture"
          }
        },
        {
          "id": 2970,
          "name": "onKeyUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1428,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyUp"
          }
        },
        {
          "id": 2971,
          "name": "onKeyUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1429,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onKeyUpCapture"
          }
        },
        {
          "id": 2962,
          "name": "onLoad",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1416,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoad"
          }
        },
        {
          "id": 2963,
          "name": "onLoadCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1417,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadCapture"
          }
        },
        {
          "id": 2990,
          "name": "onLoadStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1450,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadStart"
          }
        },
        {
          "id": 2991,
          "name": "onLoadStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1451,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadStartCapture"
          }
        },
        {
          "id": 2986,
          "name": "onLoadedData",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1446,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedData"
          }
        },
        {
          "id": 2987,
          "name": "onLoadedDataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1447,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedDataCapture"
          }
        },
        {
          "id": 2988,
          "name": "onLoadedMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1448,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedMetadata"
          }
        },
        {
          "id": 2989,
          "name": "onLoadedMetadataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1449,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLoadedMetadataCapture"
          }
        },
        {
          "id": 3080,
          "name": "onLostPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1548,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLostPointerCapture"
          }
        },
        {
          "id": 3081,
          "name": "onLostPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1549,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onLostPointerCaptureCapture"
          }
        },
        {
          "id": 3040,
          "name": "onMouseDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1502,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseDown"
          }
        },
        {
          "id": 3041,
          "name": "onMouseDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1503,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseDownCapture"
          }
        },
        {
          "id": 3042,
          "name": "onMouseEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1504,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseEnter"
          }
        },
        {
          "id": 3043,
          "name": "onMouseLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1505,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseLeave"
          }
        },
        {
          "id": 3044,
          "name": "onMouseMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1506,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseMove"
          }
        },
        {
          "id": 3045,
          "name": "onMouseMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1507,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseMoveCapture"
          }
        },
        {
          "id": 3046,
          "name": "onMouseOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1508,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOut"
          }
        },
        {
          "id": 3047,
          "name": "onMouseOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1509,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOutCapture"
          }
        },
        {
          "id": 3048,
          "name": "onMouseOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1510,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOver"
          }
        },
        {
          "id": 3049,
          "name": "onMouseOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1511,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseOverCapture"
          }
        },
        {
          "id": 3050,
          "name": "onMouseUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1512,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseUp"
          }
        },
        {
          "id": 3051,
          "name": "onMouseUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1513,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onMouseUpCapture"
          }
        },
        {
          "id": 2938,
          "name": "onPaste",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1384,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPaste"
          }
        },
        {
          "id": 2939,
          "name": "onPasteCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1385,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPasteCapture"
          }
        },
        {
          "id": 2992,
          "name": "onPause",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1452,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPause"
          }
        },
        {
          "id": 2993,
          "name": "onPauseCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1453,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPauseCapture"
          }
        },
        {
          "id": 2994,
          "name": "onPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1454,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlay"
          }
        },
        {
          "id": 2995,
          "name": "onPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1455,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlayCapture"
          }
        },
        {
          "id": 2996,
          "name": "onPlaying",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1456,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlaying"
          }
        },
        {
          "id": 2997,
          "name": "onPlayingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1457,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPlayingCapture"
          }
        },
        {
          "id": 3068,
          "name": "onPointerCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1536,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerCancel"
          }
        },
        {
          "id": 3069,
          "name": "onPointerCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1537,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerCancelCapture"
          }
        },
        {
          "id": 3062,
          "name": "onPointerDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1530,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerDown"
          }
        },
        {
          "id": 3063,
          "name": "onPointerDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1531,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerDownCapture"
          }
        },
        {
          "id": 3070,
          "name": "onPointerEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1538,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerEnter"
          }
        },
        {
          "id": 3071,
          "name": "onPointerEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1539,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerEnterCapture"
          }
        },
        {
          "id": 3072,
          "name": "onPointerLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1540,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerLeave"
          }
        },
        {
          "id": 3073,
          "name": "onPointerLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1541,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerLeaveCapture"
          }
        },
        {
          "id": 3064,
          "name": "onPointerMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1532,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerMove"
          }
        },
        {
          "id": 3065,
          "name": "onPointerMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1533,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerMoveCapture"
          }
        },
        {
          "id": 3076,
          "name": "onPointerOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1544,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOut"
          }
        },
        {
          "id": 3077,
          "name": "onPointerOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1545,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOutCapture"
          }
        },
        {
          "id": 3074,
          "name": "onPointerOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1542,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOver"
          }
        },
        {
          "id": 3075,
          "name": "onPointerOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1543,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerOverCapture"
          }
        },
        {
          "id": 3066,
          "name": "onPointerUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1534,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerUp"
          }
        },
        {
          "id": 3067,
          "name": "onPointerUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1535,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onPointerUpCapture"
          }
        },
        {
          "id": 2998,
          "name": "onProgress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1458,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onProgress"
          }
        },
        {
          "id": 2999,
          "name": "onProgressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1459,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onProgressCapture"
          }
        },
        {
          "id": 3000,
          "name": "onRateChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1460,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onRateChange"
          }
        },
        {
          "id": 3001,
          "name": "onRateChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1461,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onRateChangeCapture"
          }
        },
        {
          "id": 2956,
          "name": "onReset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1408,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onReset"
          }
        },
        {
          "id": 2957,
          "name": "onResetCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1409,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onResetCapture"
          }
        },
        {
          "id": 3082,
          "name": "onScroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1552,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onScroll"
          }
        },
        {
          "id": 3083,
          "name": "onScrollCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1553,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onScrollCapture"
          }
        },
        {
          "id": 3002,
          "name": "onSeeked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1462,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeeked"
          }
        },
        {
          "id": 3003,
          "name": "onSeekedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1463,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeekedCapture"
          }
        },
        {
          "id": 3004,
          "name": "onSeeking",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1464,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeeking"
          }
        },
        {
          "id": 3005,
          "name": "onSeekingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1465,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSeekingCapture"
          }
        },
        {
          "id": 3052,
          "name": "onSelect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1516,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSelect"
          }
        },
        {
          "id": 3053,
          "name": "onSelectCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1517,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSelectCapture"
          }
        },
        {
          "id": 3006,
          "name": "onStalled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1466,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onStalled"
          }
        },
        {
          "id": 3007,
          "name": "onStalledCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1467,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onStalledCapture"
          }
        },
        {
          "id": 2958,
          "name": "onSubmit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1410,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSubmit"
          }
        },
        {
          "id": 2959,
          "name": "onSubmitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1411,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSubmitCapture"
          }
        },
        {
          "id": 3008,
          "name": "onSuspend",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1468,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSuspend"
          }
        },
        {
          "id": 3009,
          "name": "onSuspendCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1469,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onSuspendCapture"
          }
        },
        {
          "id": 3010,
          "name": "onTimeUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1470,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTimeUpdate"
          }
        },
        {
          "id": 3011,
          "name": "onTimeUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1471,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTimeUpdateCapture"
          }
        },
        {
          "id": 3054,
          "name": "onTouchCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1520,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchCancel"
          }
        },
        {
          "id": 3055,
          "name": "onTouchCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1521,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchCancelCapture"
          }
        },
        {
          "id": 3056,
          "name": "onTouchEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1522,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchEnd"
          }
        },
        {
          "id": 3057,
          "name": "onTouchEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1523,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchEndCapture"
          }
        },
        {
          "id": 3058,
          "name": "onTouchMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1524,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchMove"
          }
        },
        {
          "id": 3059,
          "name": "onTouchMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1525,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchMoveCapture"
          }
        },
        {
          "id": 3060,
          "name": "onTouchStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1526,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchStart"
          }
        },
        {
          "id": 3061,
          "name": "onTouchStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1527,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTouchStartCapture"
          }
        },
        {
          "id": 3092,
          "name": "onTransitionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1568,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTransitionEnd"
          }
        },
        {
          "id": 3093,
          "name": "onTransitionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1569,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onTransitionEndCapture"
          }
        },
        {
          "id": 3012,
          "name": "onVolumeChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1472,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onVolumeChange"
          }
        },
        {
          "id": 3013,
          "name": "onVolumeChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1473,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onVolumeChangeCapture"
          }
        },
        {
          "id": 3014,
          "name": "onWaiting",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1474,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWaiting"
          }
        },
        {
          "id": 3015,
          "name": "onWaitingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1475,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWaitingCapture"
          }
        },
        {
          "id": 3084,
          "name": "onWheel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1556,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWheel"
          }
        },
        {
          "id": 3085,
          "name": "onWheelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1557,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.onWheelCapture"
          }
        },
        {
          "id": 2803,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1983,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.open"
          }
        },
        {
          "id": 2804,
          "name": "optimum",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1984,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.optimum"
          }
        },
        {
          "id": 2805,
          "name": "pattern",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1985,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.pattern"
          }
        },
        {
          "id": 2806,
          "name": "placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1986,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.placeholder"
          }
        },
        {
          "id": 2807,
          "name": "playsInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1987,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.playsInline"
          }
        },
        {
          "id": 2808,
          "name": "poster",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1988,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.poster"
          }
        },
        {
          "id": 2864,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1879,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.prefix"
          }
        },
        {
          "id": 2809,
          "name": "preload",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1989,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.preload"
          }
        },
        {
          "id": 2865,
          "name": "property",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1880,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.property"
          }
        },
        {
          "id": 2859,
          "name": "radioGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1870,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.radioGroup"
          }
        },
        {
          "id": 2810,
          "name": "readOnly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1990,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.readOnly"
          }
        },
        {
          "id": 3094,
          "name": "ref",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 137,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLDivElement",
                "qualifiedName": "HTMLDivElement",
                "package": "typescript"
              }
            ],
            "name": "LegacyRef",
            "qualifiedName": "React.LegacyRef",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.ref"
          }
        },
        {
          "id": 2811,
          "name": "rel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1991,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rel"
          }
        },
        {
          "id": 2812,
          "name": "required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1992,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.required"
          }
        },
        {
          "id": 2866,
          "name": "resource",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1881,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.resource"
          }
        },
        {
          "id": 2878,
          "name": "results",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1895,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.results"
          }
        },
        {
          "id": 2813,
          "name": "reversed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1993,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.reversed"
          }
        },
        {
          "id": 2860,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1873,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "AriaRole",
            "qualifiedName": "React.AriaRole",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.role"
          }
        },
        {
          "id": 2815,
          "name": "rowSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1995,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rowSpan"
          }
        },
        {
          "id": 2814,
          "name": "rows",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1994,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.rows"
          }
        },
        {
          "id": 2816,
          "name": "sandbox",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1996,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.sandbox"
          }
        },
        {
          "id": 2817,
          "name": "scope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1997,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scope"
          }
        },
        {
          "id": 2818,
          "name": "scoped",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1998,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scoped"
          }
        },
        {
          "id": 2819,
          "name": "scrolling",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1999,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.scrolling"
          }
        },
        {
          "id": 2820,
          "name": "seamless",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2000,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.seamless"
          }
        },
        {
          "id": 2879,
          "name": "security",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1896,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.security"
          }
        },
        {
          "id": 2821,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2001,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.selected"
          }
        },
        {
          "id": 2729,
          "name": "shadow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Add a shadow when content is scrollable"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2822,
          "name": "shape",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2002,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.shape"
          }
        },
        {
          "id": 2823,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2003,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.size"
          }
        },
        {
          "id": 2824,
          "name": "sizes",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2004,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.sizes"
          }
        },
        {
          "id": 2853,
          "name": "slot",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1862,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.slot"
          }
        },
        {
          "id": 2825,
          "name": "span",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2005,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.span"
          }
        },
        {
          "id": 2854,
          "name": "spellCheck",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1863,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.spellCheck"
          }
        },
        {
          "id": 2826,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2006,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.src"
          }
        },
        {
          "id": 2827,
          "name": "srcDoc",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2007,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcDoc"
          }
        },
        {
          "id": 2828,
          "name": "srcLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2008,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcLang"
          }
        },
        {
          "id": 2829,
          "name": "srcSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2009,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.srcSet"
          }
        },
        {
          "id": 2830,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2010,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.start"
          }
        },
        {
          "id": 2831,
          "name": "step",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2011,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.step"
          }
        },
        {
          "id": 2855,
          "name": "style",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1864,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "CSSProperties",
            "qualifiedName": "React.CSSProperties",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.style"
          }
        },
        {
          "id": 2832,
          "name": "summary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2012,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.summary"
          }
        },
        {
          "id": 2842,
          "name": "suppressContentEditableWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1848,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.suppressContentEditableWarning"
          }
        },
        {
          "id": 2843,
          "name": "suppressHydrationWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1849,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.suppressHydrationWarning"
          }
        },
        {
          "id": 2856,
          "name": "tabIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1865,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.tabIndex"
          }
        },
        {
          "id": 2833,
          "name": "target",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2013,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.target"
          }
        },
        {
          "id": 2857,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1866,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.title"
          }
        },
        {
          "id": 2858,
          "name": "translate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1867,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "yes"
              },
              {
                "type": "literal",
                "value": "no"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.translate"
          }
        },
        {
          "id": 2834,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2014,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.type"
          }
        },
        {
          "id": 2867,
          "name": "typeof",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1882,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.typeof"
          }
        },
        {
          "id": 2880,
          "name": "unselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1897,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "on"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.unselectable"
          }
        },
        {
          "id": 2835,
          "name": "useMap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2015,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.useMap"
          }
        },
        {
          "id": 2836,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2016,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.value"
          }
        },
        {
          "id": 2727,
          "name": "vertical",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Scroll content vertically"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "true"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2868,
          "name": "vocab",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1883,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.vocab"
          }
        },
        {
          "id": 2837,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2017,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.width"
          }
        },
        {
          "id": 2838,
          "name": "wmode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2018,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.wmode"
          }
        },
        {
          "id": 2839,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2019,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "React.HTMLProps.wrap"
          }
        },
        {
          "id": 2732,
          "name": "onScrolledToBottom",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L45"
            }
          ],
          "signatures": [
            {
              "id": 2733,
              "name": "onScrolledToBottom",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Called when scrolled to the bottom of the scroll area"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            2861, 2734, 2735, 2844, 2736, 2737, 2738, 2739, 2883, 2884, 2885,
            2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
            2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907,
            2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918,
            2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929,
            2930, 2740, 2741, 2869, 2742, 2870, 2743, 2744, 2871, 2745, 2746,
            2747, 2749, 2748, 2750, 2726, 2751, 2752, 2845, 2754, 2872, 2753,
            2755, 2846, 2847, 2756, 2757, 2758, 2931, 2759, 2862, 2760, 2761,
            2840, 2841, 2762, 2848, 2763, 2764, 2849, 2765, 2731, 2766, 2767,
            2768, 2769, 2770, 2771, 2772, 2773, 2774, 2850, 2775, 2730, 2728,
            2776, 2777, 2778, 2779, 2851, 2863, 2881, 2780, 2882, 2876, 2873,
            2877, 2874, 2875, 3095, 2781, 2782, 2783, 2784, 2852, 2785, 2786,
            2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
            2798, 2799, 2800, 2802, 2801, 2972, 2973, 3088, 3089, 3090, 3091,
            3086, 3087, 3016, 3017, 2952, 2953, 2948, 2949, 2974, 2975, 2976,
            2977, 2950, 2951, 3018, 3019, 2940, 2941, 2942, 2943, 2944, 2945,
            3020, 3021, 2934, 2935, 2936, 2937, 3022, 3023, 3024, 3025, 3026,
            3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037,
            3038, 3039, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2964,
            2965, 2946, 2947, 3078, 3079, 2954, 2955, 2960, 2961, 2966, 2967,
            2968, 2969, 2970, 2971, 2962, 2963, 2990, 2991, 2986, 2987, 2988,
            2989, 3080, 3081, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047,
            3048, 3049, 3050, 3051, 2938, 2939, 2992, 2993, 2994, 2995, 2996,
            2997, 3068, 3069, 3062, 3063, 3070, 3071, 3072, 3073, 3064, 3065,
            3076, 3077, 3074, 3075, 3066, 3067, 2998, 2999, 3000, 3001, 2956,
            2957, 3082, 3083, 3002, 3003, 3004, 3005, 3052, 3053, 3006, 3007,
            2958, 2959, 3008, 3009, 3010, 3011, 3054, 3055, 3056, 3057, 3058,
            3059, 3060, 3061, 3092, 3093, 3012, 3013, 3014, 3015, 3084, 3085,
            2803, 2804, 2805, 2806, 2807, 2808, 2864, 2809, 2865, 2859, 2810,
            3094, 2811, 2812, 2866, 2878, 2813, 2860, 2815, 2814, 2816, 2817,
            2818, 2819, 2820, 2879, 2821, 2729, 2822, 2823, 2824, 2853, 2825,
            2854, 2826, 2827, 2828, 2829, 2830, 2831, 2855, 2832, 2842, 2843,
            2856, 2833, 2857, 2858, 2834, 2867, 2880, 2835, 2836, 2727, 2868,
            2837, 2838, 2839
          ]
        },
        {
          "title": "Methods",
          "children": [2732]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "line": 27,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L27"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "typeArguments": [
            {
              "type": "reference",
              "name": "HTMLDivElement",
              "qualifiedName": "HTMLDivElement",
              "package": "typescript"
            }
          ],
          "name": "HTMLProps",
          "qualifiedName": "React.HTMLProps",
          "package": "@types/react"
        }
      ]
    },
    {
      "id": 3096,
      "name": "ScrollableRef",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3097,
          "name": "scrollTo",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L53"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3098,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
                  "line": 53,
                  "character": 12,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L53"
                }
              ],
              "signatures": [
                {
                  "id": 3099,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "parameters": [
                    {
                      "id": 3100,
                      "name": "scrollY",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 3101,
                      "name": "options",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "name": "ScrollToOptions"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3097]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "line": 52,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L52"
        }
      ]
    },
    {
      "id": 3137,
      "name": "SelectAllActionsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3138,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3144,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables bulk actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L28"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3139,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the bulk actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3143,
          "name": "paginatedSelectAllAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Action for selecting all across pages"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 3142,
          "name": "paginatedSelectAllText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text to select all across pages"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L24"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3141,
          "name": "selectMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List is in a selectable state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3140,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "State of the bulk actions checkbox"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L20"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "indeterminate"
              }
            ]
          }
        },
        {
          "id": 3145,
          "name": "onToggleAll",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L30"
            }
          ],
          "signatures": [
            {
              "id": 3146,
              "name": "onToggleAll",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the select all checkbox is clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3138, 3144, 3139, 3143, 3142, 3141, 3140]
        },
        {
          "title": "Methods",
          "children": [3145]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "line": 14,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L14"
        }
      ]
    },
    {
      "id": 3131,
      "name": "SelectGroup",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3133,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L40"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "id": 3130,
              "name": "SelectOption"
            }
          }
        },
        {
          "id": 3132,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3133, 3132]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Select/Select.tsx",
          "line": 38,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L38"
        }
      ]
    },
    {
      "id": 3108,
      "name": "SelectProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3114,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disable input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3120,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display an error state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L67"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "reference",
                "id": 103,
                "name": "Error"
              }
            ]
          }
        },
        {
          "id": 3115,
          "name": "helpText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional text to aide in use"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L57"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3117,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ID for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3110,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Label for the select"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L47"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3111,
          "name": "labelAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds an action to the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L49"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          }
        },
        {
          "id": 3112,
          "name": "labelHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3113,
          "name": "labelInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Show the label to the left of the value, inside the control"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L53"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3118,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Name for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3109,
          "name": "options",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of options or option groups to choose from"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L45"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 3130,
                  "name": "SelectOption"
                },
                {
                  "type": "reference",
                  "id": 3131,
                  "name": "SelectGroup"
                }
              ]
            }
          }
        },
        {
          "id": 3116,
          "name": "placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Example text to display as placeholder"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3129,
          "name": "requiredIndicator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visual required indicator, add an asterisk to label"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L75"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3119,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Value for form input"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3127,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L73"
            }
          ],
          "signatures": [
            {
              "id": 3128,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus is removed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 3121,
          "name": "onChange",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L69"
            }
          ],
          "signatures": [
            {
              "id": 3122,
              "name": "onChange",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when selection is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 3123,
                  "name": "selected",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 3124,
                  "name": "id",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 3125,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Select/Select.tsx",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L71"
            }
          ],
          "signatures": [
            {
              "id": 3126,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when select is focused"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3114, 3120, 3115, 3117, 3110, 3111, 3112, 3113, 3118, 3109, 3116,
            3129, 3119
          ]
        },
        {
          "title": "Methods",
          "children": [3127, 3121, 3125]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Select/Select.tsx",
          "line": 43,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L43"
        }
      ]
    },
    {
      "id": 3150,
      "name": "SettingToggleProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3152,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Card header actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SettingToggle/SettingToggle.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "id": 268,
            "name": "ComplexAction"
          }
        },
        {
          "id": 3151,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Inner content of the card"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SettingToggle/SettingToggle.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3153,
          "name": "enabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets toggle state to activated or deactivated"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
              "line": 15,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SettingToggle/SettingToggle.tsx#L15"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3152, 3151, 3153]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SettingToggle/SettingToggle.tsx#L9"
        }
      ]
    },
    {
      "id": 3171,
      "name": "SheetProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3180,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "ARIA label for sheet"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3181,
          "name": "activator",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element or the RefObject that activates the Sheet"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L45"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "HTMLElement",
                    "qualifiedName": "HTMLElement",
                    "package": "typescript"
                  }
                ],
                "name": "RefObject",
                "qualifiedName": "React.RefObject",
                "package": "@types/react"
              }
            ]
          }
        },
        {
          "id": 3173,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The child elements to render in the sheet"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L35"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3172,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the sheet is open"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3174,
          "name": "onClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L37"
            }
          ],
          "signatures": [
            {
              "id": 3175,
              "name": "onClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the backdrop is clicked or "
                  },
                  {
                    "kind": "code",
                    "text": "`ESC`"
                  },
                  {
                    "kind": "text",
                    "text": " is pressed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 3176,
          "name": "onEntered",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L39"
            }
          ],
          "signatures": [
            {
              "id": 3177,
              "name": "onEntered",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the sheet has completed entering"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 3178,
          "name": "onExit",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L41"
            }
          ],
          "signatures": [
            {
              "id": 3179,
              "name": "onExit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the sheet has started to exit"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3180, 3181, 3173, 3172]
        },
        {
          "title": "Methods",
          "children": [3174, 3176, 3178]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
          "line": 31,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L31"
        }
      ]
    },
    {
      "id": 3185,
      "name": "SkeletonBodyTextProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3186,
          "name": "lines",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Number of lines to display"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "3"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx#L10"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3186]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx#L5"
        }
      ]
    },
    {
      "id": 3190,
      "name": "SkeletonDisplayTextProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3191,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of the text"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3191]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx#L9"
        }
      ]
    },
    {
      "id": 3195,
      "name": "SkeletonPageProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3201,
          "name": "backAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Shows a skeleton over the backAction"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3200,
          "name": "breadcrumbs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use backAction instead"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3202,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The child elements to render in the skeleton page."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 24,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L24"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3197,
          "name": "fullWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Remove the normal max-width on the page"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L14"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3198,
          "name": "narrowWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Decreases the maximum layout width. Intended for single-column layouts"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L16"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3199,
          "name": "primaryAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Shows a skeleton over the primary action"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3196,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Page title, in large type"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L12"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3201, 3200, 3202, 3197, 3198, 3199, 3196]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L10"
        }
      ]
    },
    {
      "id": 3206,
      "name": "SkeletonTabsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3207,
          "name": "count",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx",
              "line": 9,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx#L9"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3207]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx",
          "line": 8,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx#L8"
        }
      ]
    },
    {
      "id": 3211,
      "name": "SkeletonThumbnailProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3212,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of the thumbnail"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3212]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx#L9"
        }
      ]
    },
    {
      "id": 3216,
      "name": "SpinnerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3218,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accessible label for the spinner"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Spinner/Spinner.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Spinner/Spinner.tsx#L18"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3219,
          "name": "hasFocusableParent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows the component to apply the correct accessibility roles based on focus"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Spinner/Spinner.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Spinner/Spinner.tsx#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3217,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of spinner"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'large'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Spinner/Spinner.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Spinner/Spinner.tsx#L16"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3218, 3219, 3217]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Spinner/Spinner.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Spinner/Spinner.tsx#L11"
        }
      ]
    },
    {
      "id": 3223,
      "name": "StackProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3228,
          "name": "alignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust vertical alignment of elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L38"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Alignment"
          }
        },
        {
          "id": 3224,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Elements to display inside stack"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 30,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L30"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3229,
          "name": "distribution",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust horizontal alignment of elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L40"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Distribution"
          }
        },
        {
          "id": 3227,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust spacing between elements"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        },
        {
          "id": 3226,
          "name": "vertical",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Stack the elements vertically"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L34"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3225,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Stack/Stack.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3228, 3224, 3229, 3227, 3226, 3225]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Stack/Stack.tsx",
          "line": 28,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L28"
        }
      ]
    },
    {
      "id": 2369,
      "name": "SubNavigationItem",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 2372,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2377,
          "name": "exactMatch",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 32,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L32"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.exactMatch"
          }
        },
        {
          "id": 2379,
          "name": "excludePaths",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 34,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L34"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.excludePaths"
          }
        },
        {
          "id": 2380,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.external"
          }
        },
        {
          "id": 2371,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L40"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2378,
          "name": "matchPaths",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L33"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "intrinsic",
              "name": "string"
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.matchPaths"
          }
        },
        {
          "id": 2376,
          "name": "matches",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ItemURLDetails.matches"
          }
        },
        {
          "id": 2373,
          "name": "new",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 42,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L42"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 2370,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L39"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "overwrites": {
            "type": "reference",
            "name": "ItemURLDetails.url"
          }
        },
        {
          "id": 2374,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L43"
            }
          ],
          "signatures": [
            {
              "id": 2375,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2372, 2377, 2379, 2380, 2371, 2378, 2376, 2373, 2370]
        },
        {
          "title": "Methods",
          "children": [2374]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "line": 38,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L38"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "ItemURLDetails"
        }
      ]
    },
    {
      "id": 3251,
      "name": "SubheadingProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3253,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text to display in subheading"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Subheading/Subheading.tsx",
              "line": 14,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Subheading/Subheading.tsx#L14"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3252,
          "name": "element",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element name to use for the subheading"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'h3'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Subheading/Subheading.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Subheading/Subheading.tsx#L12"
            }
          ],
          "type": {
            "type": "reference",
            "id": 102,
            "name": "HeadingTagName"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3253, 3252]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Subheading/Subheading.tsx",
          "line": 7,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Subheading/Subheading.tsx#L7"
        }
      ]
    },
    {
      "id": 3257,
      "name": "TabsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3258,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Content to display in tabs"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 17,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L17"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3262,
          "name": "disclosureText",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text to replace disclosures horizontal dots"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L25"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3261,
          "name": "fitted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Fit tabs to container"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L23"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3259,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Index of selected tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3260,
          "name": "tabs",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of tabs"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L21"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "name": "TabDescriptor"
            }
          }
        },
        {
          "id": 3263,
          "name": "onSelect",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L27"
            }
          ],
          "signatures": [
            {
              "id": 3264,
              "name": "onSelect",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when tab is selected"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 3265,
                  "name": "selectedTabIndex",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3258, 3262, 3261, 3259, 3260]
        },
        {
          "title": "Methods",
          "children": [3263]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
          "line": 15,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L15"
        }
      ]
    },
    {
      "id": 3298,
      "name": "TextContainerProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3300,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to render in the text container."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TextContainer/TextContainer.tsx",
              "line": 13,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextContainer/TextContainer.tsx#L13"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3299,
          "name": "spacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The amount of vertical spacing children will get between them"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TextContainer/TextContainer.tsx",
              "line": 11,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextContainer/TextContainer.tsx#L11"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Spacing"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3300, 3299]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextContainer/TextContainer.tsx",
          "line": 9,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextContainer/TextContainer.tsx#L9"
        }
      ]
    },
    {
      "id": 3283,
      "name": "TextProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3284,
          "name": "alignment",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust horizontal alignment of text"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L39"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Alignment"
          }
        },
        {
          "id": 3285,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element type"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L41"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element"
          }
        },
        {
          "id": 3286,
          "name": "breakWord",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Prevent text from overflowing"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3287,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Text to display"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L45"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3288,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust color of text"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L47"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Color"
          }
        },
        {
          "id": 3289,
          "name": "fontWeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adjust weight of text"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L49"
            }
          ],
          "type": {
            "type": "reference",
            "name": "FontWeight"
          }
        },
        {
          "id": 3290,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "HTML id attribute"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3291,
          "name": "numeric",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Use a numeric font variant with monospace appearance"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L53"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3292,
          "name": "truncate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Truncate text overflow with ellipsis"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3293,
          "name": "variant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Typographic style of text"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L57"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Variant"
          }
        },
        {
          "id": 3294,
          "name": "visuallyHidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hide the text"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Text/Text.tsx",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Text/Text.tsx",
          "line": 37,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L37"
        }
      ]
    },
    {
      "id": 3308,
      "name": "TextStyleProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3310,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content that should get the intended styling"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TextStyle/TextStyle.tsx",
              "line": 28,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextStyle/TextStyle.tsx#L28"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3309,
          "name": "variation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Give text additional visual meaning"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TextStyle/TextStyle.tsx",
              "line": 26,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextStyle/TextStyle.tsx#L26"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Variation"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3310, 3309]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextStyle/TextStyle.tsx",
          "line": 24,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextStyle/TextStyle.tsx#L24"
        }
      ]
    },
    {
      "id": 3314,
      "name": "ThumbnailProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3317,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Alt text for the thumbnail image"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L20"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3315,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Size of thumbnail"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'medium'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
              "line": 16,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L16"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Size"
          }
        },
        {
          "id": 3316,
          "name": "source",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "URL for the image"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
              "line": 18,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L18"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "SVGSVGElement",
                        "qualifiedName": "SVGSVGElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "SVGProps",
                    "qualifiedName": "React.SVGProps",
                    "package": "@types/react"
                  }
                ],
                "name": "FunctionComponent",
                "qualifiedName": "React.FunctionComponent",
                "package": "@types/react"
              }
            ]
          }
        },
        {
          "id": 3318,
          "name": "transparent",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Transparent background"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
              "line": 22,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L22"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3317, 3315, 3316, 3318]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L11"
        }
      ]
    },
    {
      "id": 3322,
      "name": "ToastProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3328,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Adds an action next to the message"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L69"
            }
          ],
          "type": {
            "type": "reference",
            "id": 140,
            "name": "Action"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ToastProps1.action"
          }
        },
        {
          "id": 3323,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content that should appear in the toast message"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 58,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L58"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ToastProps1.content"
          }
        },
        {
          "id": 3324,
          "name": "duration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The length of time in milliseconds the toast message should persist"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "5000"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ToastProps1.duration"
          }
        },
        {
          "id": 3325,
          "name": "error",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Display an error toast."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "ToastProps1.error"
          }
        },
        {
          "id": 3326,
          "name": "onDismiss",
          "kind": 2048,
          "kindString": "Method",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/frame/types.ts",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/frame/types.ts#L67"
            }
          ],
          "signatures": [
            {
              "id": 3327,
              "name": "onDismiss",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when the dismiss icon is clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "name": "ToastProps1.onDismiss"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "name": "ToastProps1.onDismiss"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3328, 3323, 3324, 3325]
        },
        {
          "title": "Methods",
          "children": [3326]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Toast/Toast.tsx",
          "line": 11,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Toast/Toast.tsx#L11"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "ToastProps"
        }
      ]
    },
    {
      "id": 3332,
      "name": "TooltipProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3340,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L43"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3339,
          "name": "activatorWrapper",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element type to wrap the activator in"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'span'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3335,
          "name": "active",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Toggle whether the tooltip is visible"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L27"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3343,
          "name": "borderRadius",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Border radius of the tooltip"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'1'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 58,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L58"
            }
          ],
          "type": {
            "type": "reference",
            "name": "BorderRadius"
          }
        },
        {
          "id": 3333,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The element that will activate to tooltip"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3334,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display within the tooltip"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3337,
          "name": "dismissOnMouseOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Dismiss tooltip when not interacting with its children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L31"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3345,
          "name": "hasUnderline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether to render a dotted underline underneath the tooltip's activator"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 62,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L62"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3336,
          "name": "hoverDelay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Delay in milliseconds while hovering over an element before the tooltip is visible"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L29"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3342,
          "name": "padding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Padding of content"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'default'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L53"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Padding"
          }
        },
        {
          "id": 3346,
          "name": "persistOnClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether the tooltip's content remains open after clicking the activator"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 64,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L64"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3338,
          "name": "preferredPosition",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The direction the tooltip tries to display"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'below'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 36,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L36"
            }
          ],
          "type": {
            "type": "reference",
            "name": "PreferredPosition"
          }
        },
        {
          "id": 3341,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Width of content"
              }
            ],
            "blockTags": [
              {
                "tag": "@default",
                "content": [
                  {
                    "kind": "text",
                    "text": "'default'"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 48,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L48"
            }
          ],
          "type": {
            "type": "reference",
            "name": "Width"
          }
        },
        {
          "id": 3344,
          "name": "zIndexOverride",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Override on the default z-index of 400"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 60,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L60"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 3349,
          "name": "onClose",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 68,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L68"
            }
          ],
          "signatures": [
            {
              "id": 3350,
              "name": "onClose",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 3347,
          "name": "onOpen",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
              "line": 66,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L66"
            }
          ],
          "signatures": [
            {
              "id": 3348,
              "name": "onOpen",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3340, 3339, 3335, 3343, 3333, 3334, 3337, 3345, 3336, 3342, 3346,
            3338, 3341, 3344
          ]
        },
        {
          "title": "Methods",
          "children": [3349, 3347]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "line": 21,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L21"
        }
      ]
    },
    {
      "id": 3368,
      "name": "TopBarProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3372,
          "name": "contextControl",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a component that is used to help users switch between different contexts"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 27,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L27"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3382,
          "name": "logoSuffix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a component that is used to supplement the logo markup"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L41"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3377,
          "name": "onSearchResultsDismiss",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L37"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3378,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/TopBar/components/Search/Search.tsx",
                  "line": 16,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/components/Search/Search.tsx#L16"
                }
              ],
              "signatures": [
                {
                  "id": 3379,
                  "name": "__type",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A callback function that handles the dismissal of search results"
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 3373,
          "name": "searchField",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a search field component that is made available as a "
              },
              {
                "kind": "code",
                "text": "`TextField`"
              },
              {
                "kind": "text",
                "text": " static member of the top bar component"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 29,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L29"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3374,
          "name": "searchResults",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a search results component that is ideally composed of a card component containing a list of actionable search results"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 31,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L31"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3376,
          "name": "searchResultsOverlayVisible",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Whether or not the search results overlay has a visible backdrop"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3375,
          "name": "searchResultsVisible",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A boolean property indicating whether search results are currently visible."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 33,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L33"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3371,
          "name": "secondaryMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a menu component that is made available as a static member of the top bar component"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 25,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L25"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3369,
          "name": "showNavigationToggle",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Toggles whether or not a navigation component has been provided. Controls the presence of the mobile nav toggle button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 21,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L21"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 3370,
          "name": "userMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Accepts a user component that is made available as a static member of the top bar component and renders as the primary menu"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 23,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L23"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3380,
          "name": "onNavigationToggle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L39"
            }
          ],
          "signatures": [
            {
              "id": 3381,
              "name": "onNavigationToggle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A callback function that handles hiding and showing mobile navigation"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3372, 3382, 3377, 3373, 3374, 3376, 3375, 3371, 3369, 3370
          ]
        },
        {
          "title": "Methods",
          "children": [3380]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 19,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L19"
        }
      ]
    },
    {
      "id": 3386,
      "name": "TrapFocusProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3388,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
              "line": 20,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TrapFocus/TrapFocus.tsx#L20"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3387,
          "name": "trapping",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
              "line": 19,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TrapFocus/TrapFocus.tsx#L19"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3388, 3387]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
          "line": 18,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TrapFocus/TrapFocus.tsx#L18"
        }
      ]
    },
    {
      "id": 3392,
      "name": "TruncateProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3393,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "sources": [
            {
              "fileName": "polaris-react/src/components/Truncate/Truncate.tsx",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Truncate/Truncate.tsx#L6"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3393]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/Truncate/Truncate.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Truncate/Truncate.tsx#L5"
        }
      ]
    },
    {
      "id": 829,
      "name": "UnstableBulkActionsProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 832,
          "name": "actions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List of actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L39"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 265,
                  "name": "ActionListSection"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          }
        },
        {
          "id": 833,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables bulk actions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L41"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 840,
          "name": "isSticky",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "If the BulkActions is currently sticky in view"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 831,
          "name": "promotedActions",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Actions that will be given more prominence"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 37,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L37"
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "id": 306,
                  "name": "MenuGroupDescriptor"
                },
                {
                  "type": "reference",
                  "name": "BulkAction"
                }
              ]
            }
          }
        },
        {
          "id": 830,
          "name": "selectMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "List is in a selectable state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 35,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L35"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          }
        },
        {
          "id": 841,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The width of the BulkActions"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          }
        },
        {
          "id": 837,
          "name": "onMoreActionPopoverToggle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 45,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L45"
            }
          ],
          "signatures": [
            {
              "id": 838,
              "name": "onMoreActionPopoverToggle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when more actions button is toggled"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 839,
                  "name": "isOpen",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 834,
          "name": "onSelectModeToggle",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L43"
            }
          ],
          "signatures": [
            {
              "id": 835,
              "name": "onSelectModeToggle",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when selectable state of list is changed"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 836,
                  "name": "selectMode",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [832, 833, 840, 831, 830, 841]
        },
        {
          "title": "Methods",
          "children": [837, 834]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "line": 33,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L33"
        }
      ]
    },
    {
      "id": 3402,
      "name": "UnstyledButtonProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3413,
          "name": "accessibilityLabel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Visually hidden text for screen readers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 63,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L63"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 113,
            "name": "BaseButton.accessibilityLabel"
          }
        },
        {
          "id": 3418,
          "name": "ariaChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current checked state of the button when acting as a toggle or switch"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 73,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L73"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 118,
            "name": "BaseButton.ariaChecked"
          }
        },
        {
          "id": 3415,
          "name": "ariaControls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Id of the element the button controls"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 67,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L67"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 115,
            "name": "BaseButton.ariaControls"
          }
        },
        {
          "id": 3417,
          "name": "ariaDescribedBy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the ID of the element that describes the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 71,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L71"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 117,
            "name": "BaseButton.ariaDescribedBy"
          }
        },
        {
          "id": 3416,
          "name": "ariaExpanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells screen reader the controlled element is expanded"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 69,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L69"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 116,
            "name": "BaseButton.ariaExpanded"
          }
        },
        {
          "id": 3403,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledButton/UnstyledButton.tsx#L10"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        },
        {
          "id": 3404,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A custom class name to apply styles to button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
              "line": 12,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledButton/UnstyledButton.tsx#L12"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 3410,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Disables the button, disallowing merchant interaction"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 57,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L57"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 110,
            "name": "BaseButton.disabled"
          }
        },
        {
          "id": 3408,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 53,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L53"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 108,
            "name": "BaseButton.download"
          }
        },
        {
          "id": 3407,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Forces url to open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 51,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L51"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 107,
            "name": "BaseButton.external"
          }
        },
        {
          "id": 3405,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A unique identifier for the button"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 47,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L47"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 105,
            "name": "BaseButton.id"
          }
        },
        {
          "id": 3411,
          "name": "loading",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Replaces button text with a spinner while a background action is being performed"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 59,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L59"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 111,
            "name": "BaseButton.loading"
          }
        },
        {
          "id": 3412,
          "name": "pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets the button in a pressed state"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 61,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L61"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 112,
            "name": "BaseButton.pressed"
          }
        },
        {
          "id": 3414,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A valid WAI-ARIA role to define the semantic value of this element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 65,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L65"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 114,
            "name": "BaseButton.role"
          }
        },
        {
          "id": 3409,
          "name": "submit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Allows the button to submit a form"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 55,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L55"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 109,
            "name": "BaseButton.submit"
          }
        },
        {
          "id": 3406,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A destination to link to, rendered in the href attribute of a link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 49,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L49"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "id": 106,
            "name": "BaseButton.url"
          }
        },
        {
          "id": 3423,
          "name": "onBlur",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 79,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L79"
            }
          ],
          "signatures": [
            {
              "id": 3424,
              "name": "onBlur",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when focus leaves button"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 124,
                "name": "BaseButton.onBlur"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 123,
            "name": "BaseButton.onBlur"
          }
        },
        {
          "id": 3419,
          "name": "onClick",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 75,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L75"
            }
          ],
          "signatures": [
            {
              "id": 3420,
              "name": "onClick",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when clicked"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 120,
                "name": "BaseButton.onClick"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 119,
            "name": "BaseButton.onClick"
          }
        },
        {
          "id": 3421,
          "name": "onFocus",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 77,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L77"
            }
          ],
          "signatures": [
            {
              "id": 3422,
              "name": "onFocus",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when button becomes focussed"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 122,
                "name": "BaseButton.onFocus"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 121,
            "name": "BaseButton.onFocus"
          }
        },
        {
          "id": 3431,
          "name": "onKeyDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 85,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L85"
            }
          ],
          "signatures": [
            {
              "id": 3432,
              "name": "onKeyDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keydown event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 3433,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 132,
                "name": "BaseButton.onKeyDown"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 131,
            "name": "BaseButton.onKeyDown"
          }
        },
        {
          "id": 3425,
          "name": "onKeyPress",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 81,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L81"
            }
          ],
          "signatures": [
            {
              "id": 3426,
              "name": "onKeyPress",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keypress event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 3427,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 126,
                "name": "BaseButton.onKeyPress"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 125,
            "name": "BaseButton.onKeyPress"
          }
        },
        {
          "id": 3428,
          "name": "onKeyUp",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 83,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L83"
            }
          ],
          "signatures": [
            {
              "id": 3429,
              "name": "onKeyUp",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when a keyup event is registered on the button"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 3430,
                  "name": "event",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLButtonElement",
                        "qualifiedName": "HTMLButtonElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "KeyboardEvent",
                    "qualifiedName": "React.KeyboardEvent",
                    "package": "@types/react"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 129,
                "name": "BaseButton.onKeyUp"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 128,
            "name": "BaseButton.onKeyUp"
          }
        },
        {
          "id": 3434,
          "name": "onMouseEnter",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 87,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L87"
            }
          ],
          "signatures": [
            {
              "id": 3435,
              "name": "onMouseEnter",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when mouse enter"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 135,
                "name": "BaseButton.onMouseEnter"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 134,
            "name": "BaseButton.onMouseEnter"
          }
        },
        {
          "id": 3438,
          "name": "onPointerDown",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 91,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L91"
            }
          ],
          "signatures": [
            {
              "id": 3439,
              "name": "onPointerDown",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when pointerdown event is being triggered"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 139,
                "name": "BaseButton.onPointerDown"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 138,
            "name": "BaseButton.onPointerDown"
          }
        },
        {
          "id": 3436,
          "name": "onTouchStart",
          "kind": 2048,
          "kindString": "Method",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/types.ts",
              "line": 89,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L89"
            }
          ],
          "signatures": [
            {
              "id": 3437,
              "name": "onTouchStart",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Callback when element is touched"
                  }
                ]
              },
              "type": {
                "type": "intrinsic",
                "name": "void"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 137,
                "name": "BaseButton.onTouchStart"
              }
            }
          ],
          "inheritedFrom": {
            "type": "reference",
            "id": 136,
            "name": "BaseButton.onTouchStart"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3413, 3418, 3415, 3417, 3416, 3403, 3404, 3410, 3408, 3407, 3405,
            3411, 3412, 3414, 3409, 3406
          ]
        },
        {
          "title": "Methods",
          "children": [3423, 3419, 3421, 3431, 3425, 3428, 3434, 3438, 3436]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "line": 8,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledButton/UnstyledButton.tsx#L8"
        }
      ],
      "indexSignature": {
        "id": 3440,
        "name": "__index",
        "kind": 8192,
        "kindString": "Index signature",
        "flags": {},
        "parameters": [
          {
            "id": 3441,
            "name": "key",
            "kind": 32768,
            "flags": {},
            "type": {
              "type": "intrinsic",
              "name": "string"
            }
          }
        ],
        "type": {
          "type": "intrinsic",
          "name": "any"
        }
      },
      "extendedTypes": [
        {
          "type": "reference",
          "id": 104,
          "name": "BaseButton"
        }
      ]
    },
    {
      "id": 3445,
      "name": "UnstyledLinkProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3576,
          "name": "about",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1876,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.about"
          }
        },
        {
          "id": 3450,
          "name": "accept",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1914,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.accept"
          }
        },
        {
          "id": 3451,
          "name": "acceptCharset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1915,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.acceptCharset"
          }
        },
        {
          "id": 3559,
          "name": "accessKey",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1852,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.accessKey"
          }
        },
        {
          "id": 3452,
          "name": "action",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1916,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.action"
          }
        },
        {
          "id": 3453,
          "name": "allowFullScreen",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1917,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.allowFullScreen"
          }
        },
        {
          "id": 3454,
          "name": "allowTransparency",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1918,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.allowTransparency"
          }
        },
        {
          "id": 3455,
          "name": "alt",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1919,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.alt"
          }
        },
        {
          "id": 3598,
          "name": "aria-activedescendant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1586,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-activedescendant"
          }
        },
        {
          "id": 3599,
          "name": "aria-atomic",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1588,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-atomic"
          }
        },
        {
          "id": 3600,
          "name": "aria-autocomplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1593,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "inline"
              },
              {
                "type": "literal",
                "value": "list"
              },
              {
                "type": "literal",
                "value": "both"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-autocomplete"
          }
        },
        {
          "id": 3601,
          "name": "aria-busy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1595,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-busy"
          }
        },
        {
          "id": 3602,
          "name": "aria-checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1600,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-checked"
          }
        },
        {
          "id": 3603,
          "name": "aria-colcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of columns in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-colindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1605,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-colcount"
          }
        },
        {
          "id": 3604,
          "name": "aria-colindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1610,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-colindex"
          }
        },
        {
          "id": 3605,
          "name": "aria-colspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1615,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-colspan"
          }
        },
        {
          "id": 3606,
          "name": "aria-controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-owns."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1620,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-controls"
          }
        },
        {
          "id": 3607,
          "name": "aria-current",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the element that represents the current item within a container or set of related elements."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1622,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "time"
              },
              {
                "type": "literal",
                "value": "page"
              },
              {
                "type": "literal",
                "value": "step"
              },
              {
                "type": "literal",
                "value": "location"
              },
              {
                "type": "literal",
                "value": "date"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-current"
          }
        },
        {
          "id": 3608,
          "name": "aria-describedby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that describes the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1627,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-describedby"
          }
        },
        {
          "id": 3609,
          "name": "aria-details",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides a detailed, extended description for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1632,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-details"
          }
        },
        {
          "id": 3610,
          "name": "aria-disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-hidden"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-readonly."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1637,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-disabled"
          }
        },
        {
          "id": 3611,
          "name": "aria-dropeffect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1642,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "link"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "copy"
              },
              {
                "type": "literal",
                "value": "execute"
              },
              {
                "type": "literal",
                "value": "move"
              },
              {
                "type": "literal",
                "value": "popup"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-dropeffect"
          }
        },
        {
          "id": 3612,
          "name": "aria-errormessage",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element that provides an error message for the object."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-invalid"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1647,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-errormessage"
          }
        },
        {
          "id": 3613,
          "name": "aria-expanded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1649,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-expanded"
          }
        },
        {
          "id": 3614,
          "name": "aria-flowto",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1654,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-flowto"
          }
        },
        {
          "id": 3615,
          "name": "aria-grabbed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
              }
            ],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "in ARIA 1.1"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1659,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-grabbed"
          }
        },
        {
          "id": 3616,
          "name": "aria-haspopup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1661,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "dialog"
              },
              {
                "type": "literal",
                "value": "menu"
              },
              {
                "type": "literal",
                "value": "listbox"
              },
              {
                "type": "literal",
                "value": "tree"
              },
              {
                "type": "literal",
                "value": "grid"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-haspopup"
          }
        },
        {
          "id": 3617,
          "name": "aria-hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element is exposed to an accessibility API."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1666,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-hidden"
          }
        },
        {
          "id": 3618,
          "name": "aria-invalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the entered value does not conform to the format expected by the application."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-errormessage."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1671,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "grammar"
              },
              {
                "type": "literal",
                "value": "spelling"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-invalid"
          }
        },
        {
          "id": 3619,
          "name": "aria-keyshortcuts",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1673,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-keyshortcuts"
          }
        },
        {
          "id": 3620,
          "name": "aria-label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a string value that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-labelledby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1678,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-label"
          }
        },
        {
          "id": 3621,
          "name": "aria-labelledby",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies the element (or elements) that labels the current element."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-describedby."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1683,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-labelledby"
          }
        },
        {
          "id": 3622,
          "name": "aria-level",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the hierarchical level of an element within a structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1685,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-level"
          }
        },
        {
          "id": 3623,
          "name": "aria-live",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1687,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "assertive"
              },
              {
                "type": "literal",
                "value": "polite"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-live"
          }
        },
        {
          "id": 3624,
          "name": "aria-modal",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether an element is modal when displayed."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1689,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-modal"
          }
        },
        {
          "id": 3625,
          "name": "aria-multiline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1691,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-multiline"
          }
        },
        {
          "id": 3626,
          "name": "aria-multiselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the user may select more than one item from the current selectable descendants."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1693,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-multiselectable"
          }
        },
        {
          "id": 3627,
          "name": "aria-orientation",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1695,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "horizontal"
              },
              {
                "type": "literal",
                "value": "vertical"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-orientation"
          }
        },
        {
          "id": 3628,
          "name": "aria-owns",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-controls."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1701,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-owns"
          }
        },
        {
          "id": 3629,
          "name": "aria-placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1706,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-placeholder"
          }
        },
        {
          "id": 3630,
          "name": "aria-posinset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-setsize."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1711,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-posinset"
          }
        },
        {
          "id": 3631,
          "name": "aria-pressed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"pressed\" state of toggle buttons."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-selected."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1716,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "false"
              },
              {
                "type": "literal",
                "value": "true"
              },
              {
                "type": "literal",
                "value": "mixed"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-pressed"
          }
        },
        {
          "id": 3632,
          "name": "aria-readonly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that the element is not editable, but is otherwise operable."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-disabled."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1721,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-readonly"
          }
        },
        {
          "id": 3633,
          "name": "aria-relevant",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-atomic."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1726,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "additions"
              },
              {
                "type": "literal",
                "value": "additions removals"
              },
              {
                "type": "literal",
                "value": "additions text"
              },
              {
                "type": "literal",
                "value": "all"
              },
              {
                "type": "literal",
                "value": "removals"
              },
              {
                "type": "literal",
                "value": "removals additions"
              },
              {
                "type": "literal",
                "value": "removals text"
              },
              {
                "type": "literal",
                "value": "text additions"
              },
              {
                "type": "literal",
                "value": "text removals"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-relevant"
          }
        },
        {
          "id": 3634,
          "name": "aria-required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates that user input is required on the element before a form may be submitted."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1728,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-required"
          }
        },
        {
          "id": 3635,
          "name": "aria-roledescription",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines a human-readable, author-localized description for the role of an element."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1730,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-roledescription"
          }
        },
        {
          "id": 3636,
          "name": "aria-rowcount",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the total number of rows in a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-rowindex."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1735,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-rowcount"
          }
        },
        {
          "id": 3637,
          "name": "aria-rowindex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowcount"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1740,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-rowindex"
          }
        },
        {
          "id": 3638,
          "name": "aria-rowspan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-rowindex"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-colspan."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1745,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-rowspan"
          }
        },
        {
          "id": 3639,
          "name": "aria-selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates the current \"selected\" state of various widgets."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-checked"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "text",
                    "text": " - "
                  },
                  {
                    "kind": "text",
                    "text": "aria-pressed."
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1750,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-selected"
          }
        },
        {
          "id": 3640,
          "name": "aria-setsize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-posinset."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1755,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-setsize"
          }
        },
        {
          "id": 3641,
          "name": "aria-sort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1757,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "ascending"
              },
              {
                "type": "literal",
                "value": "descending"
              },
              {
                "type": "literal",
                "value": "other"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-sort"
          }
        },
        {
          "id": 3642,
          "name": "aria-valuemax",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the maximum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1759,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-valuemax"
          }
        },
        {
          "id": 3643,
          "name": "aria-valuemin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the minimum allowed value for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1761,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-valuemin"
          }
        },
        {
          "id": 3644,
          "name": "aria-valuenow",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the current value for a range widget."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "aria-valuetext."
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1766,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-valuenow"
          }
        },
        {
          "id": 3645,
          "name": "aria-valuetext",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1768,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.aria-valuetext"
          }
        },
        {
          "id": 3456,
          "name": "as",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1920,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.as"
          }
        },
        {
          "id": 3457,
          "name": "async",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1921,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.async"
          }
        },
        {
          "id": 3584,
          "name": "autoCapitalize",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1886,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoCapitalize"
          }
        },
        {
          "id": 3458,
          "name": "autoComplete",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1922,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoComplete"
          }
        },
        {
          "id": 3585,
          "name": "autoCorrect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1887,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoCorrect"
          }
        },
        {
          "id": 3459,
          "name": "autoFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1923,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoFocus"
          }
        },
        {
          "id": 3460,
          "name": "autoPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1924,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoPlay"
          }
        },
        {
          "id": 3586,
          "name": "autoSave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1888,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.autoSave"
          }
        },
        {
          "id": 3461,
          "name": "capture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1925,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "boolean"
              },
              {
                "type": "literal",
                "value": "user"
              },
              {
                "type": "literal",
                "value": "environment"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.capture"
          }
        },
        {
          "id": 3462,
          "name": "cellPadding",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1926,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.cellPadding"
          }
        },
        {
          "id": 3463,
          "name": "cellSpacing",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1927,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.cellSpacing"
          }
        },
        {
          "id": 3465,
          "name": "challenge",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1929,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.challenge"
          }
        },
        {
          "id": 3464,
          "name": "charSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1928,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.charSet"
          }
        },
        {
          "id": 3466,
          "name": "checked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1930,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.checked"
          }
        },
        {
          "id": 3447,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to display inside the link"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/link/types.ts",
              "line": 6,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/link/types.ts#L6"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.children"
          }
        },
        {
          "id": 3467,
          "name": "cite",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1931,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.cite"
          }
        },
        {
          "id": 3468,
          "name": "classID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1932,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.classID"
          }
        },
        {
          "id": 3560,
          "name": "className",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1853,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.className"
          }
        },
        {
          "id": 3470,
          "name": "colSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1934,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.colSpan"
          }
        },
        {
          "id": 3587,
          "name": "color",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1889,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.color"
          }
        },
        {
          "id": 3469,
          "name": "cols",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1933,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.cols"
          }
        },
        {
          "id": 3471,
          "name": "content",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1935,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.content"
          }
        },
        {
          "id": 3561,
          "name": "contentEditable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1854,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "Booleanish",
                "qualifiedName": "Booleanish",
                "package": "@types/react"
              },
              {
                "type": "literal",
                "value": "inherit"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.contentEditable"
          }
        },
        {
          "id": 3562,
          "name": "contextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1855,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.contextMenu"
          }
        },
        {
          "id": 3472,
          "name": "controls",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1936,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.controls"
          }
        },
        {
          "id": 3473,
          "name": "coords",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1937,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.coords"
          }
        },
        {
          "id": 3474,
          "name": "crossOrigin",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1938,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.crossOrigin"
          }
        },
        {
          "id": 3646,
          "name": "dangerouslySetInnerHTML",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1375,
              "character": 8
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3647,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {
                "isExternal": true
              },
              "children": [
                {
                  "id": 3648,
                  "name": "__html",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/@types/react/index.d.ts",
                      "line": 1376,
                      "character": 12
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [3648]
                }
              ],
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1375,
                  "character": 34
                }
              ]
            }
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.dangerouslySetInnerHTML"
          }
        },
        {
          "id": 3475,
          "name": "data",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1939,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.data"
          }
        },
        {
          "id": 3577,
          "name": "datatype",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1877,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.datatype"
          }
        },
        {
          "id": 3476,
          "name": "dateTime",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1940,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.dateTime"
          }
        },
        {
          "id": 3477,
          "name": "default",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1941,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.default"
          }
        },
        {
          "id": 3555,
          "name": "defaultChecked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1846,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.defaultChecked"
          }
        },
        {
          "id": 3556,
          "name": "defaultValue",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1847,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.defaultValue"
          }
        },
        {
          "id": 3478,
          "name": "defer",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1942,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.defer"
          }
        },
        {
          "id": 3563,
          "name": "dir",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1856,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.dir"
          }
        },
        {
          "id": 3479,
          "name": "disabled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1943,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.disabled"
          }
        },
        {
          "id": 3449,
          "name": "download",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Makes the browser download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value."
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/link/types.ts",
              "line": 10,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/link/types.ts#L10"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.download"
          }
        },
        {
          "id": 3564,
          "name": "draggable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1857,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.draggable"
          }
        },
        {
          "id": 3480,
          "name": "encType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1945,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.encType"
          }
        },
        {
          "id": 3448,
          "name": "external",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Makes the link open in a new tab"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/link/types.ts",
              "line": 8,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/link/types.ts#L8"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.external"
          }
        },
        {
          "id": 3481,
          "name": "form",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1946,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.form"
          }
        },
        {
          "id": 3482,
          "name": "formAction",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1947,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.formAction"
          }
        },
        {
          "id": 3483,
          "name": "formEncType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1948,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.formEncType"
          }
        },
        {
          "id": 3484,
          "name": "formMethod",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1949,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.formMethod"
          }
        },
        {
          "id": 3485,
          "name": "formNoValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1950,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.formNoValidate"
          }
        },
        {
          "id": 3486,
          "name": "formTarget",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1951,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.formTarget"
          }
        },
        {
          "id": 3487,
          "name": "frameBorder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1952,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.frameBorder"
          }
        },
        {
          "id": 3488,
          "name": "headers",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1953,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.headers"
          }
        },
        {
          "id": 3489,
          "name": "height",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1954,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.height"
          }
        },
        {
          "id": 3565,
          "name": "hidden",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1858,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.hidden"
          }
        },
        {
          "id": 3490,
          "name": "high",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1955,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.high"
          }
        },
        {
          "id": 3491,
          "name": "href",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1956,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.href"
          }
        },
        {
          "id": 3492,
          "name": "hrefLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1957,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.hrefLang"
          }
        },
        {
          "id": 3493,
          "name": "htmlFor",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1958,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.htmlFor"
          }
        },
        {
          "id": 3494,
          "name": "httpEquiv",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1959,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.httpEquiv"
          }
        },
        {
          "id": 3566,
          "name": "id",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1859,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.id"
          }
        },
        {
          "id": 3578,
          "name": "inlist",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1878,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "any"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.inlist"
          }
        },
        {
          "id": 3596,
          "name": "inputMode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1904,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "url"
              },
              {
                "type": "literal",
                "value": "text"
              },
              {
                "type": "literal",
                "value": "none"
              },
              {
                "type": "literal",
                "value": "search"
              },
              {
                "type": "literal",
                "value": "numeric"
              },
              {
                "type": "literal",
                "value": "tel"
              },
              {
                "type": "literal",
                "value": "email"
              },
              {
                "type": "literal",
                "value": "decimal"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.inputMode"
          }
        },
        {
          "id": 3495,
          "name": "integrity",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1960,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.integrity"
          }
        },
        {
          "id": 3597,
          "name": "is",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1909,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.is"
          }
        },
        {
          "id": 3591,
          "name": "itemID",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1893,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.itemID"
          }
        },
        {
          "id": 3588,
          "name": "itemProp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1890,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.itemProp"
          }
        },
        {
          "id": 3592,
          "name": "itemRef",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1894,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.itemRef"
          }
        },
        {
          "id": 3589,
          "name": "itemScope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1891,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.itemScope"
          }
        },
        {
          "id": 3590,
          "name": "itemType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1892,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.itemType"
          }
        },
        {
          "id": 3810,
          "name": "key",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 131,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Key",
                "qualifiedName": "React.Key",
                "package": "@types/react"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.key"
          }
        },
        {
          "id": 3496,
          "name": "keyParams",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1961,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.keyParams"
          }
        },
        {
          "id": 3497,
          "name": "keyType",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1962,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.keyType"
          }
        },
        {
          "id": 3498,
          "name": "kind",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1963,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.kind"
          }
        },
        {
          "id": 3499,
          "name": "label",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1964,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.label"
          }
        },
        {
          "id": 3567,
          "name": "lang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1860,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.lang"
          }
        },
        {
          "id": 3500,
          "name": "list",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1965,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.list"
          }
        },
        {
          "id": 3501,
          "name": "loop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1966,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.loop"
          }
        },
        {
          "id": 3502,
          "name": "low",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1967,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.low"
          }
        },
        {
          "id": 3503,
          "name": "manifest",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1968,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.manifest"
          }
        },
        {
          "id": 3504,
          "name": "marginHeight",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1969,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.marginHeight"
          }
        },
        {
          "id": 3505,
          "name": "marginWidth",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1970,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.marginWidth"
          }
        },
        {
          "id": 3506,
          "name": "max",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1971,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.max"
          }
        },
        {
          "id": 3507,
          "name": "maxLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1972,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.maxLength"
          }
        },
        {
          "id": 3508,
          "name": "media",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1973,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.media"
          }
        },
        {
          "id": 3509,
          "name": "mediaGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1974,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.mediaGroup"
          }
        },
        {
          "id": 3510,
          "name": "method",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1975,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.method"
          }
        },
        {
          "id": 3511,
          "name": "min",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1976,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.min"
          }
        },
        {
          "id": 3512,
          "name": "minLength",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1977,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.minLength"
          }
        },
        {
          "id": 3513,
          "name": "multiple",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1978,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.multiple"
          }
        },
        {
          "id": 3514,
          "name": "muted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1979,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.muted"
          }
        },
        {
          "id": 3515,
          "name": "name",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1980,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.name"
          }
        },
        {
          "id": 3517,
          "name": "noValidate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1982,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.noValidate"
          }
        },
        {
          "id": 3516,
          "name": "nonce",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1981,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.nonce"
          }
        },
        {
          "id": 3687,
          "name": "onAbort",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1432,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAbort"
          }
        },
        {
          "id": 3688,
          "name": "onAbortCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1433,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAbortCapture"
          }
        },
        {
          "id": 3803,
          "name": "onAnimationEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1562,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationEnd"
          }
        },
        {
          "id": 3804,
          "name": "onAnimationEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1563,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationEndCapture"
          }
        },
        {
          "id": 3805,
          "name": "onAnimationIteration",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1564,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationIteration"
          }
        },
        {
          "id": 3806,
          "name": "onAnimationIterationCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1565,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationIterationCapture"
          }
        },
        {
          "id": 3801,
          "name": "onAnimationStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1560,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationStart"
          }
        },
        {
          "id": 3802,
          "name": "onAnimationStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1561,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "AnimationEventHandler",
            "qualifiedName": "React.AnimationEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAnimationStartCapture"
          }
        },
        {
          "id": 3731,
          "name": "onAuxClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1478,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAuxClick"
          }
        },
        {
          "id": 3732,
          "name": "onAuxClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1479,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onAuxClickCapture"
          }
        },
        {
          "id": 3667,
          "name": "onBeforeInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1404,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onBeforeInput"
          }
        },
        {
          "id": 3668,
          "name": "onBeforeInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1405,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onBeforeInputCapture"
          }
        },
        {
          "id": 3663,
          "name": "onBlur",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1398,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onBlur"
          }
        },
        {
          "id": 3664,
          "name": "onBlurCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1399,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onBlurCapture"
          }
        },
        {
          "id": 3689,
          "name": "onCanPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1434,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCanPlay"
          }
        },
        {
          "id": 3690,
          "name": "onCanPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1435,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCanPlayCapture"
          }
        },
        {
          "id": 3691,
          "name": "onCanPlayThrough",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1436,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCanPlayThrough"
          }
        },
        {
          "id": 3692,
          "name": "onCanPlayThroughCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1437,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCanPlayThroughCapture"
          }
        },
        {
          "id": 3665,
          "name": "onChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1402,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onChange"
          }
        },
        {
          "id": 3666,
          "name": "onChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1403,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onChangeCapture"
          }
        },
        {
          "id": 3733,
          "name": "onClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1480,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onClick"
          }
        },
        {
          "id": 3734,
          "name": "onClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1481,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onClickCapture"
          }
        },
        {
          "id": 3655,
          "name": "onCompositionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1388,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionEnd"
          }
        },
        {
          "id": 3656,
          "name": "onCompositionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1389,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionEndCapture"
          }
        },
        {
          "id": 3657,
          "name": "onCompositionStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1390,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionStart"
          }
        },
        {
          "id": 3658,
          "name": "onCompositionStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1391,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionStartCapture"
          }
        },
        {
          "id": 3659,
          "name": "onCompositionUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1392,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionUpdate"
          }
        },
        {
          "id": 3660,
          "name": "onCompositionUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1393,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "CompositionEventHandler",
            "qualifiedName": "React.CompositionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCompositionUpdateCapture"
          }
        },
        {
          "id": 3735,
          "name": "onContextMenu",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1482,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onContextMenu"
          }
        },
        {
          "id": 3736,
          "name": "onContextMenuCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1483,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onContextMenuCapture"
          }
        },
        {
          "id": 3649,
          "name": "onCopy",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1380,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCopy"
          }
        },
        {
          "id": 3650,
          "name": "onCopyCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1381,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCopyCapture"
          }
        },
        {
          "id": 3651,
          "name": "onCut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1382,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCut"
          }
        },
        {
          "id": 3652,
          "name": "onCutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1383,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onCutCapture"
          }
        },
        {
          "id": 3737,
          "name": "onDoubleClick",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1484,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDoubleClick"
          }
        },
        {
          "id": 3738,
          "name": "onDoubleClickCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1485,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDoubleClickCapture"
          }
        },
        {
          "id": 3739,
          "name": "onDrag",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1486,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDrag"
          }
        },
        {
          "id": 3740,
          "name": "onDragCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1487,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragCapture"
          }
        },
        {
          "id": 3741,
          "name": "onDragEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1488,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragEnd"
          }
        },
        {
          "id": 3742,
          "name": "onDragEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1489,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragEndCapture"
          }
        },
        {
          "id": 3743,
          "name": "onDragEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1490,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragEnter"
          }
        },
        {
          "id": 3744,
          "name": "onDragEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1491,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragEnterCapture"
          }
        },
        {
          "id": 3745,
          "name": "onDragExit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1492,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragExit"
          }
        },
        {
          "id": 3746,
          "name": "onDragExitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1493,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragExitCapture"
          }
        },
        {
          "id": 3747,
          "name": "onDragLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1494,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragLeave"
          }
        },
        {
          "id": 3748,
          "name": "onDragLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1495,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragLeaveCapture"
          }
        },
        {
          "id": 3749,
          "name": "onDragOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1496,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragOver"
          }
        },
        {
          "id": 3750,
          "name": "onDragOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1497,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragOverCapture"
          }
        },
        {
          "id": 3751,
          "name": "onDragStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1498,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragStart"
          }
        },
        {
          "id": 3752,
          "name": "onDragStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1499,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDragStartCapture"
          }
        },
        {
          "id": 3753,
          "name": "onDrop",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1500,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDrop"
          }
        },
        {
          "id": 3754,
          "name": "onDropCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1501,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "DragEventHandler",
            "qualifiedName": "React.DragEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDropCapture"
          }
        },
        {
          "id": 3693,
          "name": "onDurationChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1438,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDurationChange"
          }
        },
        {
          "id": 3694,
          "name": "onDurationChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1439,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onDurationChangeCapture"
          }
        },
        {
          "id": 3695,
          "name": "onEmptied",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1440,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEmptied"
          }
        },
        {
          "id": 3696,
          "name": "onEmptiedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1441,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEmptiedCapture"
          }
        },
        {
          "id": 3697,
          "name": "onEncrypted",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1442,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEncrypted"
          }
        },
        {
          "id": 3698,
          "name": "onEncryptedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1443,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEncryptedCapture"
          }
        },
        {
          "id": 3699,
          "name": "onEnded",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1444,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEnded"
          }
        },
        {
          "id": 3700,
          "name": "onEndedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1445,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onEndedCapture"
          }
        },
        {
          "id": 3679,
          "name": "onError",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1418,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onError"
          }
        },
        {
          "id": 3680,
          "name": "onErrorCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1419,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onErrorCapture"
          }
        },
        {
          "id": 3661,
          "name": "onFocus",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1396,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onFocus"
          }
        },
        {
          "id": 3662,
          "name": "onFocusCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1397,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FocusEventHandler",
            "qualifiedName": "React.FocusEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onFocusCapture"
          }
        },
        {
          "id": 3793,
          "name": "onGotPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1546,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onGotPointerCapture"
          }
        },
        {
          "id": 3794,
          "name": "onGotPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1547,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onGotPointerCaptureCapture"
          }
        },
        {
          "id": 3669,
          "name": "onInput",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1406,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onInput"
          }
        },
        {
          "id": 3670,
          "name": "onInputCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1407,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onInputCapture"
          }
        },
        {
          "id": 3675,
          "name": "onInvalid",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1412,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onInvalid"
          }
        },
        {
          "id": 3676,
          "name": "onInvalidCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1413,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onInvalidCapture"
          }
        },
        {
          "id": 3681,
          "name": "onKeyDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1422,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyDown"
          }
        },
        {
          "id": 3682,
          "name": "onKeyDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1423,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyDownCapture"
          }
        },
        {
          "id": 3683,
          "name": "onKeyPress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1425,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyPress"
          }
        },
        {
          "id": 3684,
          "name": "onKeyPressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": []
              }
            ]
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1427,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyPressCapture"
          }
        },
        {
          "id": 3685,
          "name": "onKeyUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1428,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyUp"
          }
        },
        {
          "id": 3686,
          "name": "onKeyUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1429,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "KeyboardEventHandler",
            "qualifiedName": "React.KeyboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onKeyUpCapture"
          }
        },
        {
          "id": 3677,
          "name": "onLoad",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1416,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoad"
          }
        },
        {
          "id": 3678,
          "name": "onLoadCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1417,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadCapture"
          }
        },
        {
          "id": 3705,
          "name": "onLoadStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1450,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadStart"
          }
        },
        {
          "id": 3706,
          "name": "onLoadStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1451,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadStartCapture"
          }
        },
        {
          "id": 3701,
          "name": "onLoadedData",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1446,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadedData"
          }
        },
        {
          "id": 3702,
          "name": "onLoadedDataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1447,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadedDataCapture"
          }
        },
        {
          "id": 3703,
          "name": "onLoadedMetadata",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1448,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadedMetadata"
          }
        },
        {
          "id": 3704,
          "name": "onLoadedMetadataCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1449,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLoadedMetadataCapture"
          }
        },
        {
          "id": 3795,
          "name": "onLostPointerCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1548,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLostPointerCapture"
          }
        },
        {
          "id": 3796,
          "name": "onLostPointerCaptureCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1549,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onLostPointerCaptureCapture"
          }
        },
        {
          "id": 3755,
          "name": "onMouseDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1502,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseDown"
          }
        },
        {
          "id": 3756,
          "name": "onMouseDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1503,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseDownCapture"
          }
        },
        {
          "id": 3757,
          "name": "onMouseEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1504,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseEnter"
          }
        },
        {
          "id": 3758,
          "name": "onMouseLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1505,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseLeave"
          }
        },
        {
          "id": 3759,
          "name": "onMouseMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1506,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseMove"
          }
        },
        {
          "id": 3760,
          "name": "onMouseMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1507,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseMoveCapture"
          }
        },
        {
          "id": 3761,
          "name": "onMouseOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1508,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseOut"
          }
        },
        {
          "id": 3762,
          "name": "onMouseOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1509,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseOutCapture"
          }
        },
        {
          "id": 3763,
          "name": "onMouseOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1510,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseOver"
          }
        },
        {
          "id": 3764,
          "name": "onMouseOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1511,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseOverCapture"
          }
        },
        {
          "id": 3765,
          "name": "onMouseUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1512,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseUp"
          }
        },
        {
          "id": 3766,
          "name": "onMouseUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1513,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "MouseEventHandler",
            "qualifiedName": "React.MouseEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onMouseUpCapture"
          }
        },
        {
          "id": 3653,
          "name": "onPaste",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1384,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPaste"
          }
        },
        {
          "id": 3654,
          "name": "onPasteCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1385,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ClipboardEventHandler",
            "qualifiedName": "React.ClipboardEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPasteCapture"
          }
        },
        {
          "id": 3707,
          "name": "onPause",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1452,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPause"
          }
        },
        {
          "id": 3708,
          "name": "onPauseCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1453,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPauseCapture"
          }
        },
        {
          "id": 3709,
          "name": "onPlay",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1454,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPlay"
          }
        },
        {
          "id": 3710,
          "name": "onPlayCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1455,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPlayCapture"
          }
        },
        {
          "id": 3711,
          "name": "onPlaying",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1456,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPlaying"
          }
        },
        {
          "id": 3712,
          "name": "onPlayingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1457,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPlayingCapture"
          }
        },
        {
          "id": 3783,
          "name": "onPointerCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1536,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerCancel"
          }
        },
        {
          "id": 3784,
          "name": "onPointerCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1537,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerCancelCapture"
          }
        },
        {
          "id": 3777,
          "name": "onPointerDown",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1530,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerDown"
          }
        },
        {
          "id": 3778,
          "name": "onPointerDownCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1531,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerDownCapture"
          }
        },
        {
          "id": 3785,
          "name": "onPointerEnter",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1538,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerEnter"
          }
        },
        {
          "id": 3786,
          "name": "onPointerEnterCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1539,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerEnterCapture"
          }
        },
        {
          "id": 3787,
          "name": "onPointerLeave",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1540,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerLeave"
          }
        },
        {
          "id": 3788,
          "name": "onPointerLeaveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1541,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerLeaveCapture"
          }
        },
        {
          "id": 3779,
          "name": "onPointerMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1532,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerMove"
          }
        },
        {
          "id": 3780,
          "name": "onPointerMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1533,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerMoveCapture"
          }
        },
        {
          "id": 3791,
          "name": "onPointerOut",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1544,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerOut"
          }
        },
        {
          "id": 3792,
          "name": "onPointerOutCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1545,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerOutCapture"
          }
        },
        {
          "id": 3789,
          "name": "onPointerOver",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1542,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerOver"
          }
        },
        {
          "id": 3790,
          "name": "onPointerOverCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1543,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerOverCapture"
          }
        },
        {
          "id": 3781,
          "name": "onPointerUp",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1534,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerUp"
          }
        },
        {
          "id": 3782,
          "name": "onPointerUpCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1535,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "PointerEventHandler",
            "qualifiedName": "React.PointerEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onPointerUpCapture"
          }
        },
        {
          "id": 3713,
          "name": "onProgress",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1458,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onProgress"
          }
        },
        {
          "id": 3714,
          "name": "onProgressCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1459,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onProgressCapture"
          }
        },
        {
          "id": 3715,
          "name": "onRateChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1460,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onRateChange"
          }
        },
        {
          "id": 3716,
          "name": "onRateChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1461,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onRateChangeCapture"
          }
        },
        {
          "id": 3671,
          "name": "onReset",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1408,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onReset"
          }
        },
        {
          "id": 3672,
          "name": "onResetCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1409,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onResetCapture"
          }
        },
        {
          "id": 3797,
          "name": "onScroll",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1552,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onScroll"
          }
        },
        {
          "id": 3798,
          "name": "onScrollCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1553,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "UIEventHandler",
            "qualifiedName": "React.UIEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onScrollCapture"
          }
        },
        {
          "id": 3717,
          "name": "onSeeked",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1462,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSeeked"
          }
        },
        {
          "id": 3718,
          "name": "onSeekedCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1463,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSeekedCapture"
          }
        },
        {
          "id": 3719,
          "name": "onSeeking",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1464,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSeeking"
          }
        },
        {
          "id": 3720,
          "name": "onSeekingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1465,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSeekingCapture"
          }
        },
        {
          "id": 3767,
          "name": "onSelect",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1516,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSelect"
          }
        },
        {
          "id": 3768,
          "name": "onSelectCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1517,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSelectCapture"
          }
        },
        {
          "id": 3721,
          "name": "onStalled",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1466,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onStalled"
          }
        },
        {
          "id": 3722,
          "name": "onStalledCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1467,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onStalledCapture"
          }
        },
        {
          "id": 3673,
          "name": "onSubmit",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1410,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSubmit"
          }
        },
        {
          "id": 3674,
          "name": "onSubmitCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1411,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "FormEventHandler",
            "qualifiedName": "React.FormEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSubmitCapture"
          }
        },
        {
          "id": 3723,
          "name": "onSuspend",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1468,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSuspend"
          }
        },
        {
          "id": 3724,
          "name": "onSuspendCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1469,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onSuspendCapture"
          }
        },
        {
          "id": 3725,
          "name": "onTimeUpdate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1470,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTimeUpdate"
          }
        },
        {
          "id": 3726,
          "name": "onTimeUpdateCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1471,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTimeUpdateCapture"
          }
        },
        {
          "id": 3769,
          "name": "onTouchCancel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1520,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchCancel"
          }
        },
        {
          "id": 3770,
          "name": "onTouchCancelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1521,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchCancelCapture"
          }
        },
        {
          "id": 3771,
          "name": "onTouchEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1522,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchEnd"
          }
        },
        {
          "id": 3772,
          "name": "onTouchEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1523,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchEndCapture"
          }
        },
        {
          "id": 3773,
          "name": "onTouchMove",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1524,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchMove"
          }
        },
        {
          "id": 3774,
          "name": "onTouchMoveCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1525,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchMoveCapture"
          }
        },
        {
          "id": 3775,
          "name": "onTouchStart",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1526,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchStart"
          }
        },
        {
          "id": 3776,
          "name": "onTouchStartCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1527,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TouchEventHandler",
            "qualifiedName": "React.TouchEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTouchStartCapture"
          }
        },
        {
          "id": 3807,
          "name": "onTransitionEnd",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1568,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTransitionEnd"
          }
        },
        {
          "id": 3808,
          "name": "onTransitionEndCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1569,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "TransitionEventHandler",
            "qualifiedName": "React.TransitionEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onTransitionEndCapture"
          }
        },
        {
          "id": 3727,
          "name": "onVolumeChange",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1472,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onVolumeChange"
          }
        },
        {
          "id": 3728,
          "name": "onVolumeChangeCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1473,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onVolumeChangeCapture"
          }
        },
        {
          "id": 3729,
          "name": "onWaiting",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1474,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onWaiting"
          }
        },
        {
          "id": 3730,
          "name": "onWaitingCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1475,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "ReactEventHandler",
            "qualifiedName": "React.ReactEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onWaitingCapture"
          }
        },
        {
          "id": 3799,
          "name": "onWheel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1556,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onWheel"
          }
        },
        {
          "id": 3800,
          "name": "onWheelCapture",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1557,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "WheelEventHandler",
            "qualifiedName": "React.WheelEventHandler",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.onWheelCapture"
          }
        },
        {
          "id": 3518,
          "name": "open",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1983,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.open"
          }
        },
        {
          "id": 3519,
          "name": "optimum",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1984,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.optimum"
          }
        },
        {
          "id": 3520,
          "name": "pattern",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1985,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.pattern"
          }
        },
        {
          "id": 3521,
          "name": "placeholder",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1986,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.placeholder"
          }
        },
        {
          "id": 3522,
          "name": "playsInline",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1987,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.playsInline"
          }
        },
        {
          "id": 3523,
          "name": "poster",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1988,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.poster"
          }
        },
        {
          "id": 3579,
          "name": "prefix",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1879,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.prefix"
          }
        },
        {
          "id": 3524,
          "name": "preload",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1989,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.preload"
          }
        },
        {
          "id": 3580,
          "name": "property",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1880,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.property"
          }
        },
        {
          "id": 3574,
          "name": "radioGroup",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1870,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.radioGroup"
          }
        },
        {
          "id": 3525,
          "name": "readOnly",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1990,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.readOnly"
          }
        },
        {
          "id": 3809,
          "name": "ref",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 137,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "HTMLAnchorElement",
                "qualifiedName": "HTMLAnchorElement",
                "package": "typescript"
              }
            ],
            "name": "LegacyRef",
            "qualifiedName": "React.LegacyRef",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.ref"
          }
        },
        {
          "id": 3526,
          "name": "rel",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1991,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.rel"
          }
        },
        {
          "id": 3527,
          "name": "required",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1992,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.required"
          }
        },
        {
          "id": 3581,
          "name": "resource",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1881,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.resource"
          }
        },
        {
          "id": 3593,
          "name": "results",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1895,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.results"
          }
        },
        {
          "id": 3528,
          "name": "reversed",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1993,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.reversed"
          }
        },
        {
          "id": 3575,
          "name": "role",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1873,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "AriaRole",
            "qualifiedName": "React.AriaRole",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.role"
          }
        },
        {
          "id": 3530,
          "name": "rowSpan",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1995,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.rowSpan"
          }
        },
        {
          "id": 3529,
          "name": "rows",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1994,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.rows"
          }
        },
        {
          "id": 3531,
          "name": "sandbox",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1996,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.sandbox"
          }
        },
        {
          "id": 3532,
          "name": "scope",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1997,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.scope"
          }
        },
        {
          "id": 3533,
          "name": "scoped",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1998,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.scoped"
          }
        },
        {
          "id": 3534,
          "name": "scrolling",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1999,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.scrolling"
          }
        },
        {
          "id": 3535,
          "name": "seamless",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2000,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.seamless"
          }
        },
        {
          "id": 3594,
          "name": "security",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1896,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.security"
          }
        },
        {
          "id": 3536,
          "name": "selected",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2001,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.selected"
          }
        },
        {
          "id": 3537,
          "name": "shape",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2002,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.shape"
          }
        },
        {
          "id": 3538,
          "name": "size",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2003,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.size"
          }
        },
        {
          "id": 3539,
          "name": "sizes",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2004,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.sizes"
          }
        },
        {
          "id": 3568,
          "name": "slot",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1862,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.slot"
          }
        },
        {
          "id": 3540,
          "name": "span",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2005,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.span"
          }
        },
        {
          "id": 3569,
          "name": "spellCheck",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1863,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "Booleanish",
            "qualifiedName": "Booleanish",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.spellCheck"
          }
        },
        {
          "id": 3541,
          "name": "src",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2006,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.src"
          }
        },
        {
          "id": 3542,
          "name": "srcDoc",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2007,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.srcDoc"
          }
        },
        {
          "id": 3543,
          "name": "srcLang",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2008,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.srcLang"
          }
        },
        {
          "id": 3544,
          "name": "srcSet",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2009,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.srcSet"
          }
        },
        {
          "id": 3545,
          "name": "start",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2010,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.start"
          }
        },
        {
          "id": 3546,
          "name": "step",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2011,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.step"
          }
        },
        {
          "id": 3570,
          "name": "style",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1864,
              "character": 8
            }
          ],
          "type": {
            "type": "reference",
            "name": "CSSProperties",
            "qualifiedName": "React.CSSProperties",
            "package": "@types/react"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.style"
          }
        },
        {
          "id": 3547,
          "name": "summary",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2012,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.summary"
          }
        },
        {
          "id": 3557,
          "name": "suppressContentEditableWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1848,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.suppressContentEditableWarning"
          }
        },
        {
          "id": 3558,
          "name": "suppressHydrationWarning",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1849,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "boolean"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.suppressHydrationWarning"
          }
        },
        {
          "id": 3571,
          "name": "tabIndex",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1865,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "number"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.tabIndex"
          }
        },
        {
          "id": 3548,
          "name": "target",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2013,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.target"
          }
        },
        {
          "id": 3572,
          "name": "title",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1866,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.title"
          }
        },
        {
          "id": 3573,
          "name": "translate",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1867,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "yes"
              },
              {
                "type": "literal",
                "value": "no"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.translate"
          }
        },
        {
          "id": 3549,
          "name": "type",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2014,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.type"
          }
        },
        {
          "id": 3582,
          "name": "typeof",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1882,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.typeof"
          }
        },
        {
          "id": 3595,
          "name": "unselectable",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1897,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "off"
              },
              {
                "type": "literal",
                "value": "on"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.unselectable"
          }
        },
        {
          "id": 3446,
          "name": "url",
          "kind": 1024,
          "kindString": "Property",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The url to link to"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/utilities/link/types.ts",
              "line": 4,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/link/types.ts#L4"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.url"
          }
        },
        {
          "id": 3550,
          "name": "useMap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2015,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.useMap"
          }
        },
        {
          "id": 3551,
          "name": "value",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2016,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "typeOperator",
                "operator": "readonly",
                "target": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.value"
          }
        },
        {
          "id": 3583,
          "name": "vocab",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 1883,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.vocab"
          }
        },
        {
          "id": 3552,
          "name": "width",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2017,
              "character": 8
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              }
            ]
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.width"
          }
        },
        {
          "id": 3553,
          "name": "wmode",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2018,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.wmode"
          }
        },
        {
          "id": 3554,
          "name": "wrap",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isExternal": true,
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "node_modules/@types/react/index.d.ts",
              "line": 2019,
              "character": 8
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          },
          "inheritedFrom": {
            "type": "reference",
            "name": "LinkLikeComponentProps.wrap"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [
            3576, 3450, 3451, 3559, 3452, 3453, 3454, 3455, 3598, 3599, 3600,
            3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611,
            3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622,
            3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633,
            3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644,
            3645, 3456, 3457, 3584, 3458, 3585, 3459, 3460, 3586, 3461, 3462,
            3463, 3465, 3464, 3466, 3447, 3467, 3468, 3560, 3470, 3587, 3469,
            3471, 3561, 3562, 3472, 3473, 3474, 3646, 3475, 3577, 3476, 3477,
            3555, 3556, 3478, 3563, 3479, 3449, 3564, 3480, 3448, 3481, 3482,
            3483, 3484, 3485, 3486, 3487, 3488, 3489, 3565, 3490, 3491, 3492,
            3493, 3494, 3566, 3578, 3596, 3495, 3597, 3591, 3588, 3592, 3589,
            3590, 3810, 3496, 3497, 3498, 3499, 3567, 3500, 3501, 3502, 3503,
            3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514,
            3515, 3517, 3516, 3687, 3688, 3803, 3804, 3805, 3806, 3801, 3802,
            3731, 3732, 3667, 3668, 3663, 3664, 3689, 3690, 3691, 3692, 3665,
            3666, 3733, 3734, 3655, 3656, 3657, 3658, 3659, 3660, 3735, 3736,
            3649, 3650, 3651, 3652, 3737, 3738, 3739, 3740, 3741, 3742, 3743,
            3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754,
            3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3679, 3680, 3661,
            3662, 3793, 3794, 3669, 3670, 3675, 3676, 3681, 3682, 3683, 3684,
            3685, 3686, 3677, 3678, 3705, 3706, 3701, 3702, 3703, 3704, 3795,
            3796, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764,
            3765, 3766, 3653, 3654, 3707, 3708, 3709, 3710, 3711, 3712, 3783,
            3784, 3777, 3778, 3785, 3786, 3787, 3788, 3779, 3780, 3791, 3792,
            3789, 3790, 3781, 3782, 3713, 3714, 3715, 3716, 3671, 3672, 3797,
            3798, 3717, 3718, 3719, 3720, 3767, 3768, 3721, 3722, 3673, 3674,
            3723, 3724, 3725, 3726, 3769, 3770, 3771, 3772, 3773, 3774, 3775,
            3776, 3807, 3808, 3727, 3728, 3729, 3730, 3799, 3800, 3518, 3519,
            3520, 3521, 3522, 3523, 3579, 3524, 3580, 3574, 3525, 3809, 3526,
            3527, 3581, 3593, 3528, 3575, 3530, 3529, 3531, 3532, 3533, 3534,
            3535, 3594, 3536, 3537, 3538, 3539, 3568, 3540, 3569, 3541, 3542,
            3543, 3544, 3545, 3546, 3570, 3547, 3557, 3558, 3571, 3548, 3572,
            3573, 3549, 3582, 3595, 3446, 3550, 3551, 3583, 3552, 3553, 3554
          ]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "line": 10,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledLink/UnstyledLink.tsx#L10"
        }
      ],
      "extendedTypes": [
        {
          "type": "reference",
          "name": "LinkLikeComponentProps"
        }
      ]
    },
    {
      "id": 3817,
      "name": "VisuallyHiddenProps",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "children": [
        {
          "id": 3818,
          "name": "children",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The content to be hidden visually"
              }
            ]
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx",
              "line": 7,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx#L7"
            }
          ],
          "type": {
            "type": "reference",
            "name": "ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [3818]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx",
          "line": 5,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx#L5"
        }
      ]
    },
    {
      "id": 2449,
      "name": "WithPolarisTestProviderOptions",
      "kind": 256,
      "kindString": "Interface",
      "flags": {},
      "comment": {
        "summary": [
          {
            "kind": "text",
            "text": "When writing a custom mounting function "
          },
          {
            "kind": "code",
            "text": "`mountWithAppContext(node, options)`"
          },
          {
            "kind": "text",
            "text": "\nthis is the type of the options object. These values are customizable when\nyou call the app"
          }
        ]
      },
      "children": [
        {
          "id": 2453,
          "name": "features",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
              "line": 41,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L41"
            }
          ],
          "type": {
            "type": "reference",
            "name": "FeaturesConfig"
          }
        },
        {
          "id": 2454,
          "name": "frame",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
              "line": 43,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L43"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "FrameContextType"
              }
            ],
            "name": "Partial",
            "qualifiedName": "Partial",
            "package": "typescript"
          }
        },
        {
          "id": 2450,
          "name": "i18n",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
              "line": 38,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L38"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "name": "TranslationDictionary"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "name": "TranslationDictionary"
                }
              }
            ]
          }
        },
        {
          "id": 2451,
          "name": "link",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
              "line": 39,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L39"
            }
          ],
          "type": {
            "type": "reference",
            "name": "LinkLikeComponent"
          }
        },
        {
          "id": 2452,
          "name": "mediaQuery",
          "kind": 1024,
          "kindString": "Property",
          "flags": {
            "isOptional": true
          },
          "sources": [
            {
              "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
              "line": 40,
              "character": 2,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L40"
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "name": "MediaQueryContextType"
              }
            ],
            "name": "Partial",
            "qualifiedName": "Partial",
            "package": "typescript"
          }
        }
      ],
      "groups": [
        {
          "title": "Properties",
          "children": [2453, 2454, 2450, 2451, 2452]
        }
      ],
      "sources": [
        {
          "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "line": 36,
          "character": 17,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L36"
        }
      ]
    },
    {
      "id": 440,
      "name": "ActionListItemProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 25,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L25"
        }
      ],
      "type": {
        "type": "reference",
        "name": "ItemProps"
      }
    },
    {
      "id": 640,
      "name": "BadgeProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
          "line": 35,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L35"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "name": "NonMutuallyExclusiveProps"
          },
          {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 641,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 643,
                      "name": "icon",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                          "line": 37,
                          "character": 28,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L37"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 642,
                      "name": "progress",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                          "line": 37,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L37"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Progress"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [643, 642]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                      "line": 37,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L37"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 644,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 645,
                      "name": "icon",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                          "line": 38,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L38"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "id": 101,
                        "name": "IconSource"
                      }
                    },
                    {
                      "id": 646,
                      "name": "progress",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                          "line": 38,
                          "character": 26,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L38"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [645, 646]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Badge/Badge.tsx",
                      "line": 38,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L38"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 661,
      "name": "BannerStatus",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Banner/Banner.tsx",
          "line": 32,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L32"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "success"
          },
          {
            "type": "literal",
            "value": "info"
          },
          {
            "type": "literal",
            "value": "warning"
          },
          {
            "type": "literal",
            "value": "critical"
          }
        ]
      }
    },
    {
      "id": 1269,
      "name": "ColumnContentType",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
          "line": 32,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L32"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "text"
          },
          {
            "type": "literal",
            "value": "numeric"
          }
        ]
      }
    },
    {
      "id": 103,
      "name": "Error",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 40,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L40"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "reference",
            "name": "React.ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          },
          {
            "type": "array",
            "elementType": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "name": "React.ReactElement",
                  "qualifiedName": "React.ReactElement",
                  "package": "@types/react"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "id": 3846,
      "name": "HSBLAColor",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-types.ts",
          "line": 28,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-types.ts#L28"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "id": 3832,
            "name": "HSBAColor"
          },
          {
            "type": "reference",
            "id": 3841,
            "name": "HSLAColor"
          }
        ]
      }
    },
    {
      "id": 102,
      "name": "HeadingTagName",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 38,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L38"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "h1"
          },
          {
            "type": "literal",
            "value": "h2"
          },
          {
            "type": "literal",
            "value": "h3"
          },
          {
            "type": "literal",
            "value": "h4"
          },
          {
            "type": "literal",
            "value": "h5"
          },
          {
            "type": "literal",
            "value": "h6"
          },
          {
            "type": "literal",
            "value": "p"
          }
        ]
      }
    },
    {
      "id": 101,
      "name": "IconSource",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/types.ts",
          "line": 33,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/types.ts#L33"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "name": "SVGSVGElement",
                    "qualifiedName": "SVGSVGElement",
                    "package": "typescript"
                  }
                ],
                "name": "React.SVGProps",
                "qualifiedName": "React.SVGProps",
                "package": "@types/react"
              }
            ],
            "name": "React.FunctionComponent",
            "qualifiedName": "React.FunctionComponent",
            "package": "@types/react"
          },
          {
            "type": "literal",
            "value": "placeholder"
          },
          {
            "type": "intrinsic",
            "name": "string"
          }
        ]
      }
    },
    {
      "id": 2107,
      "name": "KeypressListenerProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
          "line": 12,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L12"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "name": "NonMutuallyExclusiveProps"
          },
          {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 2108,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 2110,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                          "line": 14,
                          "character": 29,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L14"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 2109,
                      "name": "useCapture",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                          "line": 14,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L14"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2110, 2109]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                      "line": 14,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L14"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2111,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 2113,
                      "name": "options",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                          "line": 15,
                          "character": 31,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L15"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "AddEventListenerOptions",
                        "qualifiedName": "AddEventListenerOptions",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 2112,
                      "name": "useCapture",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                          "line": 15,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L15"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2113, 2112]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
                      "line": 15,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L15"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 2486,
      "name": "PopoverAutofocusTarget",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx",
          "line": 34,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/components/PopoverOverlay/PopoverOverlay.tsx#L34"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "none"
          },
          {
            "type": "literal",
            "value": "first-node"
          },
          {
            "type": "literal",
            "value": "container"
          }
        ]
      }
    },
    {
      "id": 2670,
      "name": "ResourceItemProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "line": 78,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceItem/ResourceItem.tsx#L78"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "reference",
            "name": "PropsWithUrl"
          },
          {
            "type": "reference",
            "name": "PropsWithClick"
          }
        ]
      }
    },
    {
      "id": 3130,
      "name": "SelectOption",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Select/Select.tsx",
          "line": 36,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L36"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "reference",
            "name": "StrictOption"
          }
        ]
      }
    },
    {
      "id": 1268,
      "name": "SortDirection",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/types.ts",
          "line": 1,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/types.ts#L1"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "literal",
            "value": "ascending"
          },
          {
            "type": "literal",
            "value": "descending"
          },
          {
            "type": "literal",
            "value": "none"
          }
        ]
      }
    },
    {
      "id": 3233,
      "name": "StickyProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
          "line": 11,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L11"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reflection",
            "declaration": {
              "id": 3234,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 3235,
                  "name": "boundingElement",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Element outlining the fixed position boundaries"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 13,
                      "character": 2,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L13"
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "name": "HTMLElement",
                        "qualifiedName": "HTMLElement",
                        "package": "typescript"
                      },
                      {
                        "type": "literal",
                        "value": null
                      }
                    ]
                  }
                },
                {
                  "id": 3237,
                  "name": "disableWhenStacked",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Should the element remain in a fixed position when the layout is stacked (smaller screens)"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 17,
                      "character": 2,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L17"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 3236,
                  "name": "offset",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Offset vertical spacing from the top of the scrollable container"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 15,
                      "character": 2,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L15"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 3238,
                  "name": "onStickyChange",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 19,
                      "character": 2,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L19"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3239,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                          "line": 19,
                          "character": 19,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L19"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3240,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Callback run when sticky header is added or removed"
                              }
                            ]
                          },
                          "parameters": [
                            {
                              "id": 3241,
                              "name": "isSticky",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [3235, 3237, 3236, 3238]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                  "line": 11,
                  "character": 26,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L11"
                }
              ]
            }
          },
          {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 3242,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3243,
                      "name": "children",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                          "line": 21,
                          "character": 5,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L21"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "React.ReactNode",
                        "qualifiedName": "React.ReactNode",
                        "package": "@types/react"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3243]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 21,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L21"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 3244,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3245,
                      "name": "children",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                          "line": 22,
                          "character": 5,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L22"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3246,
                          "name": "children",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 3247,
                              "name": "isSticky",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "name": "ReactNode",
                            "qualifiedName": "React.ReactNode",
                            "package": "@types/react"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Methods",
                      "children": [3245]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
                      "line": 22,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L22"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 1266,
      "name": "TableData",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
          "line": 30,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L30"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "intrinsic",
            "name": "string"
          },
          {
            "type": "intrinsic",
            "name": "number"
          },
          {
            "type": "reference",
            "name": "React.ReactNode",
            "qualifiedName": "React.ReactNode",
            "package": "@types/react"
          }
        ]
      }
    },
    {
      "id": 1267,
      "name": "TableRow",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
          "line": 25,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L25"
        }
      ],
      "type": {
        "type": "union",
        "types": [
          {
            "type": "indexedAccess",
            "indexType": {
              "type": "literal",
              "value": "headings"
            },
            "objectType": {
              "type": "reference",
              "id": 1238,
              "name": "DataTableProps"
            }
          },
          {
            "type": "indexedAccess",
            "indexType": {
              "type": "literal",
              "value": "rows"
            },
            "objectType": {
              "type": "reference",
              "id": 1238,
              "name": "DataTableProps"
            }
          },
          {
            "type": "indexedAccess",
            "indexType": {
              "type": "literal",
              "value": "totals"
            },
            "objectType": {
              "type": "reference",
              "id": 1238,
              "name": "DataTableProps"
            }
          }
        ]
      }
    },
    {
      "id": 3269,
      "name": "TagProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
          "line": 26,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L26"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "name": "NonMutuallyExclusiveProps"
          },
          {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 3270,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3273,
                      "name": "onRemove",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 28,
                          "character": 25,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L28"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 3274,
                      "name": "url",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 28,
                          "character": 47,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L28"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 3271,
                      "name": "onClick",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 28,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L28"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3272,
                          "name": "onClick",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3273, 3274]
                    },
                    {
                      "title": "Methods",
                      "children": [3271]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                      "line": 28,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L28"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 3275,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3276,
                      "name": "onClick",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 29,
                          "character": 7,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L29"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 3279,
                      "name": "url",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 29,
                          "character": 47,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L29"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 3277,
                      "name": "onRemove",
                      "kind": 2048,
                      "kindString": "Method",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                          "line": 29,
                          "character": 28,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L29"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3278,
                          "name": "onRemove",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3276, 3279]
                    },
                    {
                      "title": "Methods",
                      "children": [3277]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/Tag/Tag.tsx",
                      "line": 29,
                      "character": 6,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L29"
                    }
                  ]
                }
              }
            ]
          }
        ]
      }
    },
    {
      "id": 3304,
      "name": "TextFieldProps",
      "kind": 4194304,
      "kindString": "Type alias",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextField/TextField.tsx",
          "line": 176,
          "character": 12,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextField/TextField.tsx#L176"
        }
      ],
      "type": {
        "type": "intersection",
        "types": [
          {
            "type": "reference",
            "name": "NonMutuallyExclusiveProps"
          },
          {
            "type": "reference",
            "name": "MutuallyExclusiveInteractionProps"
          },
          {
            "type": "reference",
            "name": "MutuallyExclusiveSelectionProps"
          }
        ]
      }
    },
    {
      "id": 3154,
      "name": "DATA_ATTRIBUTE",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/components/shared.ts",
          "line": 36,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L36"
        }
      ],
      "type": {
        "type": "reflection",
        "declaration": {
          "id": 3155,
          "name": "__type",
          "kind": 65536,
          "kindString": "Type literal",
          "flags": {},
          "children": [
            {
              "id": 3162,
              "name": "layer",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/shared.ts",
                  "line": 38,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L38"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 3163,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3164,
                      "name": "props",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/shared.ts",
                          "line": 12,
                          "character": 2,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L12"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 3165,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 3166,
                              "name": "data-polaris-layer",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "polaris-react/src/components/shared.ts",
                                  "line": 12,
                                  "character": 10,
                                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L12"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "true"
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [3166]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "polaris-react/src/components/shared.ts",
                              "line": 12,
                              "character": 9,
                              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L12"
                            }
                          ]
                        }
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 3167,
                      "name": "selector",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/shared.ts",
                          "line": 13,
                          "character": 2,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L13"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "'[data-polaris-layer]'"
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3164, 3167]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/shared.ts",
                      "line": 11,
                      "character": 21,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L11"
                    }
                  ]
                }
              }
            },
            {
              "id": 3156,
              "name": "overlay",
              "kind": 1024,
              "kindString": "Property",
              "flags": {},
              "sources": [
                {
                  "fileName": "polaris-react/src/components/shared.ts",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L37"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 3157,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3158,
                      "name": "props",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/shared.ts",
                          "line": 7,
                          "character": 2,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L7"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 3159,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "children": [
                            {
                              "id": 3160,
                              "name": "data-polaris-overlay",
                              "kind": 1024,
                              "kindString": "Property",
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "polaris-react/src/components/shared.ts",
                                  "line": 7,
                                  "character": 10,
                                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L7"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              "defaultValue": "true"
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [3160]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "polaris-react/src/components/shared.ts",
                              "line": 7,
                              "character": 9,
                              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L7"
                            }
                          ]
                        }
                      },
                      "defaultValue": "..."
                    },
                    {
                      "id": 3161,
                      "name": "selector",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/shared.ts",
                          "line": 8,
                          "character": 2,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L8"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      "defaultValue": "'[data-polaris-overlay]'"
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3158, 3161]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/shared.ts",
                      "line": 6,
                      "character": 23,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L6"
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [3162, 3156]
            }
          ],
          "sources": [
            {
              "fileName": "polaris-react/src/components/shared.ts",
              "line": 36,
              "character": 30,
              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/shared.ts#L36"
            }
          ]
        }
      },
      "defaultValue": "..."
    },
    {
      "id": 1555,
      "name": "DEFAULT_TOAST_DURATION",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/components/Frame/components/Toast/Toast.tsx",
          "line": 17,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/components/Toast/Toast.tsx#L17"
        }
      ],
      "type": {
        "type": "literal",
        "value": 5000
      },
      "defaultValue": "5000"
    },
    {
      "id": 1556,
      "name": "DEFAULT_TOAST_DURATION_WITH_ACTION",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/components/Frame/components/Toast/Toast.tsx",
          "line": 19,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/components/Toast/Toast.tsx#L19"
        }
      ],
      "type": {
        "type": "literal",
        "value": 10000
      },
      "defaultValue": "10000"
    },
    {
      "id": 3934,
      "name": "INDEX_TABLE_SELECT_ALL_ITEMS",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/index-provider/types.ts",
          "line": 3,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-provider/types.ts#L3"
        }
      ],
      "type": {
        "type": "literal",
        "value": "All"
      },
      "defaultValue": "'All'"
    },
    {
      "id": 3882,
      "name": "_SECRET_INTERNAL_SCROLL_LOCK_MANAGER_CONTEXT",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/scroll-lock-manager/context.tsx",
          "line": 5,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/scroll-lock-manager/context.tsx#L5"
        }
      ],
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "reference",
                "name": "ScrollLockManager"
              }
            ]
          }
        ],
        "name": "Context",
        "qualifiedName": "React.Context",
        "package": "@types/react"
      },
      "defaultValue": "..."
    },
    {
      "id": 3883,
      "name": "_SECRET_INTERNAL_WITHIN_CONTENT_CONTEXT",
      "kind": 32,
      "kindString": "Variable",
      "flags": {
        "isConst": true
      },
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/within-content-context.tsx",
          "line": 3,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/within-content-context.tsx#L3"
        }
      ],
      "type": {
        "type": "reference",
        "typeArguments": [
          {
            "type": "intrinsic",
            "name": "boolean"
          }
        ],
        "name": "Context",
        "qualifiedName": "React.Context",
        "package": "@types/react"
      },
      "defaultValue": "..."
    },
    {
      "id": 414,
      "name": "AccountConnection",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/AccountConnection/AccountConnection.tsx",
          "line": 30,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AccountConnection/AccountConnection.tsx#L30"
        }
      ],
      "signatures": [
        {
          "id": 415,
          "name": "AccountConnection",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 416,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 417,
                "name": "AccountConnectionProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 425,
      "name": "ActionList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L27"
        },
        {
          "fileName": "polaris-react/src/components/ActionList/ActionList.tsx",
          "line": 114,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionList/ActionList.tsx#L114"
        }
      ],
      "signatures": [
        {
          "id": 426,
          "name": "ActionList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 427,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 433,
                "name": "ActionListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 441,
      "name": "ActionMenu",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ActionMenu/ActionMenu.tsx",
          "line": 26,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ActionMenu/ActionMenu.tsx#L26"
        }
      ],
      "signatures": [
        {
          "id": 442,
          "name": "ActionMenu",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 443,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 444,
                "name": "ActionMenuProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 452,
      "name": "AlphaCard",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/AlphaCard/AlphaCard.tsx",
          "line": 37,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaCard/AlphaCard.tsx#L37"
        }
      ],
      "signatures": [
        {
          "id": 453,
          "name": "AlphaCard",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 454,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 455,
                "name": "AlphaCardProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 460,
      "name": "AlphaStack",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
          "line": 37,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L37"
        }
      ],
      "signatures": [
        {
          "id": 461,
          "name": "AlphaStack",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 462,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 514,
                "name": "AlphaStackProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 463,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 464,
                      "name": "aria-activedescendant",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1586,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 465,
                      "name": "aria-atomic",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1588,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 466,
                      "name": "aria-autocomplete",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1593,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "none"
                          },
                          {
                            "type": "literal",
                            "value": "inline"
                          },
                          {
                            "type": "literal",
                            "value": "list"
                          },
                          {
                            "type": "literal",
                            "value": "both"
                          }
                        ]
                      }
                    },
                    {
                      "id": 467,
                      "name": "aria-busy",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1595,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 468,
                      "name": "aria-checked",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-pressed"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-selected."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1600,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "literal",
                            "value": "false"
                          },
                          {
                            "type": "literal",
                            "value": "true"
                          },
                          {
                            "type": "literal",
                            "value": "mixed"
                          }
                        ]
                      }
                    },
                    {
                      "id": 469,
                      "name": "aria-colcount",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the total number of columns in a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-colindex."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1605,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 470,
                      "name": "aria-colindex",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-colcount"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-colspan."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1610,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 471,
                      "name": "aria-colspan",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-colindex"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-rowspan."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1615,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 472,
                      "name": "aria-controls",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-owns."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1620,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 473,
                      "name": "aria-current",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the element that represents the current item within a container or set of related elements."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1622,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "literal",
                            "value": "false"
                          },
                          {
                            "type": "literal",
                            "value": "true"
                          },
                          {
                            "type": "literal",
                            "value": "time"
                          },
                          {
                            "type": "literal",
                            "value": "page"
                          },
                          {
                            "type": "literal",
                            "value": "step"
                          },
                          {
                            "type": "literal",
                            "value": "location"
                          },
                          {
                            "type": "literal",
                            "value": "date"
                          }
                        ]
                      }
                    },
                    {
                      "id": 474,
                      "name": "aria-describedby",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the element (or elements) that describes the object."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-labelledby"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1627,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 475,
                      "name": "aria-details",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the element that provides a detailed, extended description for the object."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-describedby."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1632,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 476,
                      "name": "aria-disabled",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-hidden"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-readonly."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1637,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 477,
                      "name": "aria-dropeffect",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@deprecated",
                            "content": [
                              {
                                "kind": "text",
                                "text": "in ARIA 1.1"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1642,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "link"
                          },
                          {
                            "type": "literal",
                            "value": "none"
                          },
                          {
                            "type": "literal",
                            "value": "copy"
                          },
                          {
                            "type": "literal",
                            "value": "execute"
                          },
                          {
                            "type": "literal",
                            "value": "move"
                          },
                          {
                            "type": "literal",
                            "value": "popup"
                          }
                        ]
                      }
                    },
                    {
                      "id": 478,
                      "name": "aria-errormessage",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the element that provides an error message for the object."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-invalid"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-describedby."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1647,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 479,
                      "name": "aria-expanded",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1649,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 480,
                      "name": "aria-flowto",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1654,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 481,
                      "name": "aria-grabbed",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@deprecated",
                            "content": [
                              {
                                "kind": "text",
                                "text": "in ARIA 1.1"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1659,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 482,
                      "name": "aria-haspopup",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1661,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "literal",
                            "value": "false"
                          },
                          {
                            "type": "literal",
                            "value": "true"
                          },
                          {
                            "type": "literal",
                            "value": "dialog"
                          },
                          {
                            "type": "literal",
                            "value": "menu"
                          },
                          {
                            "type": "literal",
                            "value": "listbox"
                          },
                          {
                            "type": "literal",
                            "value": "tree"
                          },
                          {
                            "type": "literal",
                            "value": "grid"
                          }
                        ]
                      }
                    },
                    {
                      "id": 483,
                      "name": "aria-hidden",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether the element is exposed to an accessibility API."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-disabled."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1666,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 484,
                      "name": "aria-invalid",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the entered value does not conform to the format expected by the application."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-errormessage."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1671,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "literal",
                            "value": "false"
                          },
                          {
                            "type": "literal",
                            "value": "true"
                          },
                          {
                            "type": "literal",
                            "value": "grammar"
                          },
                          {
                            "type": "literal",
                            "value": "spelling"
                          }
                        ]
                      }
                    },
                    {
                      "id": 485,
                      "name": "aria-keyshortcuts",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1673,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 486,
                      "name": "aria-label",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines a string value that labels the current element."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-labelledby."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1678,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 487,
                      "name": "aria-labelledby",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies the element (or elements) that labels the current element."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-describedby."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1683,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 488,
                      "name": "aria-level",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the hierarchical level of an element within a structure."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1685,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 489,
                      "name": "aria-live",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1687,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "off"
                          },
                          {
                            "type": "literal",
                            "value": "assertive"
                          },
                          {
                            "type": "literal",
                            "value": "polite"
                          }
                        ]
                      }
                    },
                    {
                      "id": 490,
                      "name": "aria-modal",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether an element is modal when displayed."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1689,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 491,
                      "name": "aria-multiline",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1691,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 492,
                      "name": "aria-multiselectable",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates that the user may select more than one item from the current selectable descendants."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1693,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 493,
                      "name": "aria-orientation",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1695,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "horizontal"
                          },
                          {
                            "type": "literal",
                            "value": "vertical"
                          }
                        ]
                      }
                    },
                    {
                      "id": 494,
                      "name": "aria-owns",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-controls."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1701,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 495,
                      "name": "aria-placeholder",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1706,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 496,
                      "name": "aria-posinset",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-setsize."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1711,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 497,
                      "name": "aria-pressed",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the current \"pressed\" state of toggle buttons."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-checked"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-selected."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1716,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "literal",
                            "value": "false"
                          },
                          {
                            "type": "literal",
                            "value": "true"
                          },
                          {
                            "type": "literal",
                            "value": "mixed"
                          }
                        ]
                      }
                    },
                    {
                      "id": 498,
                      "name": "aria-readonly",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates that the element is not editable, but is otherwise operable."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-disabled."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1721,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 499,
                      "name": "aria-relevant",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-atomic."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1726,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "text"
                          },
                          {
                            "type": "literal",
                            "value": "additions"
                          },
                          {
                            "type": "literal",
                            "value": "additions removals"
                          },
                          {
                            "type": "literal",
                            "value": "additions text"
                          },
                          {
                            "type": "literal",
                            "value": "all"
                          },
                          {
                            "type": "literal",
                            "value": "removals"
                          },
                          {
                            "type": "literal",
                            "value": "removals additions"
                          },
                          {
                            "type": "literal",
                            "value": "removals text"
                          },
                          {
                            "type": "literal",
                            "value": "text additions"
                          },
                          {
                            "type": "literal",
                            "value": "text removals"
                          }
                        ]
                      }
                    },
                    {
                      "id": 500,
                      "name": "aria-required",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates that user input is required on the element before a form may be submitted."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1728,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 501,
                      "name": "aria-roledescription",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines a human-readable, author-localized description for the role of an element."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1730,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 502,
                      "name": "aria-rowcount",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the total number of rows in a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-rowindex."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1735,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 503,
                      "name": "aria-rowindex",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-rowcount"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-rowspan."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1740,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 504,
                      "name": "aria-rowspan",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-rowindex"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-colspan."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1745,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 505,
                      "name": "aria-selected",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates the current \"selected\" state of various widgets."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-checked"
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              },
                              {
                                "kind": "text",
                                "text": " - "
                              },
                              {
                                "kind": "text",
                                "text": "aria-pressed."
                              },
                              {
                                "kind": "text",
                                "text": "\n"
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1750,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "name": "Booleanish",
                        "qualifiedName": "Booleanish",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 506,
                      "name": "aria-setsize",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-posinset."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1755,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 507,
                      "name": "aria-sort",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1757,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "none"
                          },
                          {
                            "type": "literal",
                            "value": "ascending"
                          },
                          {
                            "type": "literal",
                            "value": "descending"
                          },
                          {
                            "type": "literal",
                            "value": "other"
                          }
                        ]
                      }
                    },
                    {
                      "id": 508,
                      "name": "aria-valuemax",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the maximum allowed value for a range widget."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1759,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 509,
                      "name": "aria-valuemin",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the minimum allowed value for a range widget."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1761,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 510,
                      "name": "aria-valuenow",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the current value for a range widget."
                          }
                        ],
                        "blockTags": [
                          {
                            "tag": "@see",
                            "content": [
                              {
                                "kind": "text",
                                "text": "aria-valuetext."
                              }
                            ]
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1766,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 511,
                      "name": "aria-valuetext",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/@types/react/index.d.ts",
                          "line": 1768,
                          "character": 8
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 512,
                      "name": "className",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
                          "line": 61,
                          "character": 6,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L61"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 513,
                      "name": "style",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
                          "line": 62,
                          "character": 6,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L62"
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "reference",
                            "name": "CSSProperties",
                            "qualifiedName": "React.CSSProperties",
                            "package": "@types/react"
                          }
                        ]
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [
                        464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
                        475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
                        486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496,
                        497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
                        508, 509, 510, 511, 512, 513
                      ]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/components/AlphaStack/AlphaStack.tsx",
                      "line": 60,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/AlphaStack/AlphaStack.tsx#L60"
                    }
                  ]
                }
              },
              {
                "type": "reference",
                "name": "HTMLElement",
                "qualifiedName": "HTMLElement",
                "package": "typescript"
              }
            ],
            "name": "DetailedReactHTMLElement",
            "qualifiedName": "React.DetailedReactHTMLElement",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 569,
      "name": "Autocomplete",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "line": 54,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L54"
        },
        {
          "fileName": "polaris-react/src/components/Autocomplete/Autocomplete.tsx",
          "line": 202,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Autocomplete/Autocomplete.tsx#L202"
        }
      ],
      "signatures": [
        {
          "id": 570,
          "name": "Autocomplete",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 571,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 578,
                "name": "AutocompleteProps"
              }
            },
            {
              "id": 572,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 597,
      "name": "Avatar",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Avatar/Avatar.tsx",
          "line": 67,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Avatar/Avatar.tsx#L67"
        }
      ],
      "signatures": [
        {
          "id": 598,
          "name": "Avatar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 599,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 600,
                "name": "AvatarProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 610,
      "name": "Backdrop",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Backdrop/Backdrop.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Backdrop/Backdrop.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 611,
          "name": "Backdrop",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 612,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 613,
                "name": "BackdropProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 621,
      "name": "Badge",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
          "line": 41,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L41"
        },
        {
          "fileName": "polaris-react/src/components/Badge/Badge.tsx",
          "line": 104,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Badge/Badge.tsx#L104"
        }
      ],
      "signatures": [
        {
          "id": 622,
          "name": "Badge",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 623,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 640,
                "name": "BadgeProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 647,
      "name": "Banner",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Banner/Banner.tsx",
          "line": 55,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Banner/Banner.tsx#L55"
        }
      ],
      "signatures": [
        {
          "id": 648,
          "name": "Banner",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 649,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 650,
                    "name": "BannerProps"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 662,
                        "name": "BannerHandles"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 665,
      "name": "Bleed",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Bleed/Bleed.tsx",
          "line": 30,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Bleed/Bleed.tsx#L30"
        }
      ],
      "signatures": [
        {
          "id": 666,
          "name": "Bleed",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 667,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 668,
                "name": "BleedProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 724,
      "name": "Box",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Box/Box.tsx",
          "line": 186,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Box/Box.tsx#L186"
        }
      ],
      "signatures": [
        {
          "id": 725,
          "name": "Box",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 726,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 727,
                    "name": "BoxProps"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "name": "HTMLElement",
                        "qualifiedName": "HTMLElement",
                        "package": "typescript"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 820,
      "name": "Breadcrumbs",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx",
          "line": 19,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Breadcrumbs/Breadcrumbs.tsx#L19"
        }
      ],
      "signatures": [
        {
          "id": 821,
          "name": "Breadcrumbs",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 822,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 823,
                "name": "BreadcrumbsProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 842,
      "name": "Button",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Button/Button.tsx",
          "line": 95,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/Button.tsx#L95"
        }
      ],
      "signatures": [
        {
          "id": 843,
          "name": "Button",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 844,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 857,
                "name": "ButtonProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 907,
      "name": "ButtonGroup",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ButtonGroup/ButtonGroup.tsx",
          "line": 26,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ButtonGroup/ButtonGroup.tsx#L26"
        }
      ],
      "signatures": [
        {
          "id": 908,
          "name": "ButtonGroup",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 909,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 910,
                "name": "ButtonGroupProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 917,
      "name": "CalloutCard",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/CalloutCard/CalloutCard.tsx",
          "line": 31,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/CalloutCard/CalloutCard.tsx#L31"
        }
      ],
      "signatures": [
        {
          "id": 918,
          "name": "CalloutCard",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 919,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 920,
                "name": "CalloutCardProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 928,
      "name": "Caption",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Caption/Caption.tsx",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Caption/Caption.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 929,
          "name": "Caption",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The Caption component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 930,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 931,
                "name": "CaptionProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 933,
      "name": "Card",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 51,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L51"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 156,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L156"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 158,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L158"
        },
        {
          "fileName": "polaris-react/src/components/Card/Card.tsx",
          "line": 160,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Card/Card.tsx#L160"
        }
      ],
      "signatures": [
        {
          "id": 934,
          "name": "Card",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use AlphaCard instead."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 935,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 950,
                "name": "CardProps"
              }
            },
            {
              "id": 936,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 975,
      "name": "Checkbox",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Checkbox/Checkbox.tsx",
          "line": 51,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Checkbox/Checkbox.tsx#L51"
        }
      ],
      "signatures": [
        {
          "id": 976,
          "name": "Checkbox",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 977,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 978,
                    "name": "CheckboxProps"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 329,
                        "name": "CheckboxHandles"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 998,
      "name": "ChoiceList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ChoiceList/ChoiceList.tsx",
          "line": 52,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ChoiceList/ChoiceList.tsx#L52"
        }
      ],
      "signatures": [
        {
          "id": 999,
          "name": "ChoiceList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1000,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1001,
                "name": "ChoiceListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1014,
      "name": "Collapsible",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Collapsible/Collapsible.tsx",
          "line": 35,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Collapsible/Collapsible.tsx#L35"
        }
      ],
      "signatures": [
        {
          "id": 1015,
          "name": "Collapsible",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1016,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1017,
                "name": "CollapsibleProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1142,
      "name": "Columns",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Columns/Columns.tsx",
          "line": 41,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Columns/Columns.tsx#L41"
        }
      ],
      "signatures": [
        {
          "id": 1143,
          "name": "Columns",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1144,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1145,
                "name": "ColumnsProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1198,
      "name": "Combobox",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
          "line": 38,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L38"
        },
        {
          "fileName": "polaris-react/src/components/Combobox/Combobox.tsx",
          "line": 180,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Combobox/Combobox.tsx#L180"
        }
      ],
      "signatures": [
        {
          "id": 1199,
          "name": "Combobox",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1200,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1206,
                "name": "ComboboxProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1217,
      "name": "Connected",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Connected/Connected.tsx",
          "line": 15,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Connected/Connected.tsx#L15"
        }
      ],
      "signatures": [
        {
          "id": 1218,
          "name": "Connected",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1219,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1220,
                "name": "ConnectedProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1224,
      "name": "ContextualSaveBar",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx",
          "line": 14,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ContextualSaveBar/ContextualSaveBar.tsx#L14"
        }
      ],
      "signatures": [
        {
          "id": 1225,
          "name": "ContextualSaveBar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 1226,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1227,
                "name": "ContextualSaveBarProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1235,
      "name": "DataTable",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DataTable/DataTable.tsx",
          "line": 1003,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DataTable/DataTable.tsx#L1003"
        }
      ],
      "signatures": [
        {
          "id": 1236,
          "name": "DataTable",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1237,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1238,
                "name": "DataTableProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1270,
      "name": "DatePicker",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DatePicker/DatePicker.tsx",
          "line": 56,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DatePicker/DatePicker.tsx#L56"
        }
      ],
      "signatures": [
        {
          "id": 1271,
          "name": "DatePicker",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1272,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1273,
                "name": "DatePickerProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1295,
      "name": "DescriptionList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DescriptionList/DescriptionList.tsx",
          "line": 22,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DescriptionList/DescriptionList.tsx#L22"
        }
      ],
      "signatures": [
        {
          "id": 1296,
          "name": "DescriptionList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1297,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1298,
                "name": "DescriptionListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1301,
      "name": "DisplayText",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DisplayText/DisplayText.tsx",
          "line": 32,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DisplayText/DisplayText.tsx#L32"
        }
      ],
      "signatures": [
        {
          "id": 1302,
          "name": "DisplayText",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The DisplayText component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 1303,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1304,
                "name": "DisplayTextProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1308,
      "name": "Divider",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Divider/Divider.tsx",
          "line": 17,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Divider/Divider.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 1309,
          "name": "Divider",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1310,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1311,
                "name": "DividerProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1313,
      "name": "DropZone",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
          "line": 112,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L112"
        },
        {
          "fileName": "polaris-react/src/components/DropZone/DropZone.tsx",
          "line": 441,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/DropZone/DropZone.tsx#L441"
        }
      ],
      "signatures": [
        {
          "id": 1314,
          "name": "DropZone",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1315,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1322,
                "name": "DropZoneProps"
              }
            },
            {
              "id": 1316,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1366,
      "name": "EmptySearchResult",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptySearchResult/EmptySearchResult.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 1367,
          "name": "EmptySearchResult",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1368,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1369,
                "name": "EmptySearchResultProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1373,
      "name": "EmptyState",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/EmptyState/EmptyState.tsx",
          "line": 39,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/EmptyState/EmptyState.tsx#L39"
        }
      ],
      "signatures": [
        {
          "id": 1374,
          "name": "EmptyState",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1375,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1376,
                "name": "EmptyStateProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1473,
      "name": "ExceptionList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ExceptionList/ExceptionList.tsx",
          "line": 32,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ExceptionList/ExceptionList.tsx#L32"
        }
      ],
      "signatures": [
        {
          "id": 1474,
          "name": "ExceptionList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1475,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1476,
                "name": "ExceptionListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1478,
      "name": "Filters",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Filters/Filters.tsx",
          "line": 600,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Filters/Filters.tsx#L600"
        }
      ],
      "signatures": [
        {
          "id": 1479,
          "name": "Filters",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1480,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1481,
                "name": "FiltersProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1517,
      "name": "Focus",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Focus/Focus.tsx",
          "line": 11,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Focus/Focus.tsx#L11"
        }
      ],
      "signatures": [
        {
          "id": 1518,
          "name": "Focus",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 1519,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1520,
                "name": "FocusProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1524,
      "name": "FooterHelp",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/FooterHelp/FooterHelp.tsx",
          "line": 10,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FooterHelp/FooterHelp.tsx#L10"
        }
      ],
      "signatures": [
        {
          "id": 1525,
          "name": "FooterHelp",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1526,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1527,
                "name": "FooterHelpProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1529,
      "name": "Form",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Form/Form.tsx",
          "line": 42,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Form/Form.tsx#L42"
        }
      ],
      "signatures": [
        {
          "id": 1530,
          "name": "Form",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1531,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1532,
                "name": "FormProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1547,
      "name": "FormLayout",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/FormLayout/FormLayout.tsx",
          "line": 13,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FormLayout/FormLayout.tsx#L13"
        }
      ],
      "signatures": [
        {
          "id": 1548,
          "name": "FormLayout",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 1549,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1550,
                "name": "FormLayoutProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1552,
      "name": "Frame",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Frame/Frame.tsx",
          "line": 418,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Frame/Frame.tsx#L418"
        }
      ],
      "signatures": [
        {
          "id": 1553,
          "name": "Frame",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1554,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1557,
                "name": "FrameProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1568,
      "name": "FullscreenBar",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/FullscreenBar/FullscreenBar.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/FullscreenBar/FullscreenBar.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 1569,
          "name": "FullscreenBar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1570,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1571,
                "name": "FullscreenBarProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1576,
      "name": "Grid",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Grid/Grid.tsx",
          "line": 31,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L31"
        },
        {
          "fileName": "polaris-react/src/components/Grid/Grid.tsx",
          "line": 75,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Grid/Grid.tsx#L75"
        }
      ],
      "signatures": [
        {
          "id": 1577,
          "name": "Grid",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use "
                  },
                  {
                    "kind": "code",
                    "text": "`Columns`"
                  },
                  {
                    "kind": "text",
                    "text": " instead or a combination of layout primitives ("
                  },
                  {
                    "kind": "code",
                    "text": "`Columns`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`Inline`"
                  },
                  {
                    "kind": "text",
                    "text": ", and "
                  },
                  {
                    "kind": "code",
                    "text": "`AlphaStack`"
                  },
                  {
                    "kind": "text",
                    "text": ")"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 1578,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1585,
                "name": "GridProps"
              }
            },
            {
              "id": 1579,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 1596,
      "name": "Heading",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Heading/Heading.tsx",
          "line": 26,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Heading/Heading.tsx#L26"
        }
      ],
      "signatures": [
        {
          "id": 1597,
          "name": "Heading",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The Heading component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 1598,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1599,
                "name": "HeadingProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1603,
      "name": "Icon",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Icon/Icon.tsx",
          "line": 39,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Icon/Icon.tsx#L39"
        }
      ],
      "signatures": [
        {
          "id": 1604,
          "name": "Icon",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1605,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1606,
                "name": "IconProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1611,
      "name": "Image",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Image/Image.tsx",
          "line": 19,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Image/Image.tsx#L19"
        }
      ],
      "signatures": [
        {
          "id": 1612,
          "name": "Image",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1613,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1614,
                "name": "ImageProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 1982,
      "name": "IndexTable",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1125,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1125"
        },
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1153,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1153"
        },
        {
          "fileName": "polaris-react/src/components/IndexTable/IndexTable.tsx",
          "line": 1154,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/IndexTable/IndexTable.tsx#L1154"
        }
      ],
      "signatures": [
        {
          "id": 1983,
          "name": "IndexTable",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 1984,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 1988,
                "name": "IndexTableProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2022,
      "name": "Indicator",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Indicator/Indicator.tsx",
          "line": 11,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Indicator/Indicator.tsx#L11"
        }
      ],
      "signatures": [
        {
          "id": 2023,
          "name": "Indicator",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2024,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2025,
                "name": "IndicatorProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2027,
      "name": "Inline",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Inline/Inline.tsx",
          "line": 38,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Inline/Inline.tsx#L38"
        }
      ],
      "signatures": [
        {
          "id": 2028,
          "name": "Inline",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2029,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2030,
                "name": "InlineProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2084,
      "name": "InlineCode",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/InlineCode/InlineCode.tsx",
          "line": 10,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineCode/InlineCode.tsx#L10"
        }
      ],
      "signatures": [
        {
          "id": 2085,
          "name": "InlineCode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2086,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2087,
                "name": "InlineCodeProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2089,
      "name": "InlineError",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/InlineError/InlineError.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineError/InlineError.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 2090,
          "name": "InlineError",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2091,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2095,
                "name": "InlineErrorProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "Element",
                "qualifiedName": "global.JSX.Element",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2098,
      "name": "KeyboardKey",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/KeyboardKey/KeyboardKey.tsx",
          "line": 13,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeyboardKey/KeyboardKey.tsx#L13"
        }
      ],
      "signatures": [
        {
          "id": 2099,
          "name": "KeyboardKey",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2100,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2101,
                "name": "KeyboardKeyProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2104,
      "name": "KeypressListener",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/KeypressListener/KeypressListener.tsx",
          "line": 20,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KeypressListener/KeypressListener.tsx#L20"
        }
      ],
      "signatures": [
        {
          "id": 2105,
          "name": "KeypressListener",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2106,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2107,
                "name": "KeypressListenerProps"
              }
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        }
      ]
    },
    {
      "id": 2114,
      "name": "KonamiCode",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/KonamiCode/KonamiCode.tsx",
          "line": 22,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/KonamiCode/KonamiCode.tsx#L22"
        }
      ],
      "signatures": [
        {
          "id": 2115,
          "name": "KonamiCode",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2116,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2117,
                "name": "KonamiCodeProps"
              }
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        }
      ]
    },
    {
      "id": 2121,
      "name": "Label",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Label/Label.tsx",
          "line": 22,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L22"
        }
      ],
      "signatures": [
        {
          "id": 2122,
          "name": "Label",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2123,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2127,
                "name": "LabelProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2132,
      "name": "Labelled",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Labelled/Labelled.tsx",
          "line": 33,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Labelled/Labelled.tsx#L33"
        }
      ],
      "signatures": [
        {
          "id": 2133,
          "name": "Labelled",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2134,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2135,
                "name": "LabelledProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2144,
      "name": "Layout",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 13,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L13"
        },
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 21,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L21"
        },
        {
          "fileName": "polaris-react/src/components/Layout/Layout.tsx",
          "line": 22,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Layout/Layout.tsx#L22"
        }
      ],
      "signatures": [
        {
          "id": 2145,
          "name": "Layout",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2146,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2157,
                "name": "LayoutProps"
              }
            },
            {
              "id": 2147,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2160,
      "name": "LegacyCard",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 50,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L50"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 144,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L144"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 145,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L145"
        },
        {
          "fileName": "polaris-react/src/components/LegacyCard/LegacyCard.tsx",
          "line": 146,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyCard/LegacyCard.tsx#L146"
        }
      ],
      "signatures": [
        {
          "id": 2161,
          "name": "LegacyCard",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2162,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2177,
                "name": "LegacyCardProps"
              }
            },
            {
              "id": 2163,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2202,
      "name": "LegacyStack",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/LegacyStack/LegacyStack.tsx",
          "line": 42,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/LegacyStack/LegacyStack.tsx#L42"
        }
      ],
      "signatures": [
        {
          "id": 2203,
          "name": "LegacyStack",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 2204,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2205,
                "name": "LegacyStackProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2212,
      "name": "Link",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Link/Link.tsx",
          "line": 30,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Link/Link.tsx#L30"
        }
      ],
      "signatures": [
        {
          "id": 2213,
          "name": "Link",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2214,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2215,
                "name": "LinkProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2226,
      "name": "List",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/List/List.tsx",
          "line": 27,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L27"
        },
        {
          "fileName": "polaris-react/src/components/List/List.tsx",
          "line": 40,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/List/List.tsx#L40"
        }
      ],
      "signatures": [
        {
          "id": 2227,
          "name": "List",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2228,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2235,
                "name": "ListProps"
              }
            },
            {
              "id": 2229,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2239,
      "name": "Listbox",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 71,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L71"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 517,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L517"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 518,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L518"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 519,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L519"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 520,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L520"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 521,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L521"
        },
        {
          "fileName": "polaris-react/src/components/Listbox/Listbox.tsx",
          "line": 522,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Listbox/Listbox.tsx#L522"
        }
      ],
      "signatures": [
        {
          "id": 2240,
          "name": "Listbox",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2241,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2262,
                "name": "ListboxProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2275,
      "name": "Loading",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Loading/Loading.tsx",
          "line": 7,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Loading/Loading.tsx#L7"
        }
      ],
      "signatures": [
        {
          "id": 2276,
          "name": "Loading",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 2277,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "object"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2279,
      "name": "MediaCard",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/MediaCard/MediaCard.tsx",
          "line": 43,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/MediaCard/MediaCard.tsx#L43"
        }
      ],
      "signatures": [
        {
          "id": 2280,
          "name": "MediaCard",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2281,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "MediaCardProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2282,
      "name": "Modal",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Modal/Modal.tsx",
          "line": 68,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L68"
        },
        {
          "fileName": "polaris-react/src/components/Modal/Modal.tsx",
          "line": 249,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Modal/Modal.tsx#L249"
        }
      ],
      "signatures": [
        {
          "id": 2283,
          "name": "Modal",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2284,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2291,
                "name": "ModalProps"
              }
            },
            {
              "id": 2285,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2319,
      "name": "Navigation",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 26,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L26"
        },
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 88,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L88"
        },
        {
          "fileName": "polaris-react/src/components/Navigation/Navigation.tsx",
          "line": 89,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/Navigation.tsx#L89"
        }
      ],
      "signatures": [
        {
          "id": 2320,
          "name": "Navigation",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2321,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2336,
                "name": "NavigationProps"
              }
            },
            {
              "id": 2322,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2381,
      "name": "OptionList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/OptionList/OptionList.tsx",
          "line": 43,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/OptionList/OptionList.tsx#L43"
        }
      ],
      "signatures": [
        {
          "id": 2382,
          "name": "OptionList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2383,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2384,
                "name": "OptionListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2397,
      "name": "Page",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Page/Page.tsx",
          "line": 21,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Page/Page.tsx#L21"
        }
      ],
      "signatures": [
        {
          "id": 2398,
          "name": "Page",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2399,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2400,
                "name": "PageProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2421,
      "name": "PageActions",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/PageActions/PageActions.tsx",
          "line": 25,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PageActions/PageActions.tsx#L25"
        }
      ],
      "signatures": [
        {
          "id": 2422,
          "name": "PageActions",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2423,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2424,
                "name": "PageActionsProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2427,
      "name": "Pagination",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Pagination/Pagination.tsx",
          "line": 47,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Pagination/Pagination.tsx#L47"
        }
      ],
      "signatures": [
        {
          "id": 2428,
          "name": "Pagination",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2429,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2430,
                "name": "PaginationProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2446,
      "name": "PolarisTestProvider",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx",
          "line": 56,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PolarisTestProvider/PolarisTestProvider.tsx#L56"
        }
      ],
      "signatures": [
        {
          "id": 2447,
          "name": "PolarisTestProvider",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2448,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "PolarisTestProviderProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2455,
      "name": "Popover",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Popover/Popover.tsx",
          "line": 251,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Popover/Popover.tsx#L251"
        }
      ],
      "signatures": [
        {
          "id": 2456,
          "name": "Popover",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 2457,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 2463,
                    "name": "PopoverProps"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2487,
                        "name": "PopoverPublicAPI"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2490,
      "name": "Portal",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Portal/Portal.tsx",
          "line": 13,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Portal/Portal.tsx#L13"
        }
      ],
      "signatures": [
        {
          "id": 2491,
          "name": "Portal",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2492,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2493,
                "name": "PortalProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "name": "ReactPortal",
                "qualifiedName": "React.ReactPortal",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2498,
      "name": "PortalsManager",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/PortalsManager/PortalsManager.tsx",
          "line": 15,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/PortalsManager/PortalsManager.tsx#L15"
        }
      ],
      "signatures": [
        {
          "id": 2499,
          "name": "PortalsManager",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2500,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2501,
                "name": "PortalsManagerProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2611,
      "name": "ProgressBar",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ProgressBar/ProgressBar.tsx",
          "line": 40,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ProgressBar/ProgressBar.tsx#L40"
        }
      ],
      "signatures": [
        {
          "id": 2612,
          "name": "ProgressBar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2613,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2614,
                "name": "ProgressBarProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2620,
      "name": "RadioButton",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/RadioButton/RadioButton.tsx",
          "line": 37,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RadioButton/RadioButton.tsx#L37"
        }
      ],
      "signatures": [
        {
          "id": 2621,
          "name": "RadioButton",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2622,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2623,
                "name": "RadioButtonProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2641,
      "name": "RangeSlider",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/RangeSlider/RangeSlider.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/RangeSlider/RangeSlider.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 2642,
          "name": "RangeSlider",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2643,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "Props"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2667,
      "name": "ResourceItem",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ResourceItem/ResourceItem.tsx",
          "line": 492,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceItem/ResourceItem.tsx#L492"
        }
      ],
      "signatures": [
        {
          "id": 2668,
          "name": "ResourceItem",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2669,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2670,
                "name": "ResourceItemProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 2671,
      "name": "ResourceList",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "line": 128,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L128"
        },
        {
          "fileName": "polaris-react/src/components/ResourceList/ResourceList.tsx",
          "line": 774,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ResourceList/ResourceList.tsx#L774"
        }
      ],
      "signatures": [
        {
          "id": 2672,
          "name": "ResourceList",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "typeParameter": [
            {
              "id": 2673,
              "name": "TItemType",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            }
          ],
          "parameters": [
            {
              "id": 2674,
              "name": "value",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2680,
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 2673,
                    "name": "TItemType"
                  }
                ],
                "name": "ResourceListProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "any"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "JSXElementConstructor",
                    "qualifiedName": "React.JSXElementConstructor",
                    "package": "@types/react"
                  }
                ]
              }
            ],
            "name": "ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3102,
      "name": "ScrollLock",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/ScrollLock/ScrollLock.ts",
          "line": 10,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/ScrollLock/ScrollLock.ts#L10"
        }
      ],
      "signatures": [
        {
          "id": 3103,
          "name": "ScrollLock",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3104,
              "name": "_",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "ScrollLockProps"
              }
            }
          ],
          "type": {
            "type": "literal",
            "value": null
          }
        }
      ]
    },
    {
      "id": 2722,
      "name": "Scrollable",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Scrollable/Scrollable.tsx",
          "line": 211,
          "character": 6,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Scrollable/Scrollable.tsx#L211"
        }
      ],
      "signatures": [
        {
          "id": 2723,
          "name": "Scrollable",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 2724,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 2725,
                        "name": "ScrollableProps"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "placeholder"
                          },
                          {
                            "type": "literal",
                            "value": "children"
                          },
                          {
                            "type": "literal",
                            "value": "as"
                          },
                          {
                            "type": "literal",
                            "value": "start"
                          },
                          {
                            "type": "literal",
                            "value": "id"
                          },
                          {
                            "type": "literal",
                            "value": "aria-activedescendant"
                          },
                          {
                            "type": "literal",
                            "value": "aria-atomic"
                          },
                          {
                            "type": "literal",
                            "value": "aria-autocomplete"
                          },
                          {
                            "type": "literal",
                            "value": "aria-busy"
                          },
                          {
                            "type": "literal",
                            "value": "aria-checked"
                          },
                          {
                            "type": "literal",
                            "value": "aria-colcount"
                          },
                          {
                            "type": "literal",
                            "value": "aria-colindex"
                          },
                          {
                            "type": "literal",
                            "value": "aria-colspan"
                          },
                          {
                            "type": "literal",
                            "value": "aria-controls"
                          },
                          {
                            "type": "literal",
                            "value": "aria-current"
                          },
                          {
                            "type": "literal",
                            "value": "aria-describedby"
                          },
                          {
                            "type": "literal",
                            "value": "aria-details"
                          },
                          {
                            "type": "literal",
                            "value": "aria-disabled"
                          },
                          {
                            "type": "literal",
                            "value": "aria-dropeffect"
                          },
                          {
                            "type": "literal",
                            "value": "aria-errormessage"
                          },
                          {
                            "type": "literal",
                            "value": "aria-expanded"
                          },
                          {
                            "type": "literal",
                            "value": "aria-flowto"
                          },
                          {
                            "type": "literal",
                            "value": "aria-grabbed"
                          },
                          {
                            "type": "literal",
                            "value": "aria-haspopup"
                          },
                          {
                            "type": "literal",
                            "value": "aria-hidden"
                          },
                          {
                            "type": "literal",
                            "value": "aria-invalid"
                          },
                          {
                            "type": "literal",
                            "value": "aria-keyshortcuts"
                          },
                          {
                            "type": "literal",
                            "value": "aria-label"
                          },
                          {
                            "type": "literal",
                            "value": "aria-labelledby"
                          },
                          {
                            "type": "literal",
                            "value": "aria-level"
                          },
                          {
                            "type": "literal",
                            "value": "aria-live"
                          },
                          {
                            "type": "literal",
                            "value": "aria-modal"
                          },
                          {
                            "type": "literal",
                            "value": "aria-multiline"
                          },
                          {
                            "type": "literal",
                            "value": "aria-multiselectable"
                          },
                          {
                            "type": "literal",
                            "value": "aria-orientation"
                          },
                          {
                            "type": "literal",
                            "value": "aria-owns"
                          },
                          {
                            "type": "literal",
                            "value": "aria-placeholder"
                          },
                          {
                            "type": "literal",
                            "value": "aria-posinset"
                          },
                          {
                            "type": "literal",
                            "value": "aria-pressed"
                          },
                          {
                            "type": "literal",
                            "value": "aria-readonly"
                          },
                          {
                            "type": "literal",
                            "value": "aria-relevant"
                          },
                          {
                            "type": "literal",
                            "value": "aria-required"
                          },
                          {
                            "type": "literal",
                            "value": "aria-roledescription"
                          },
                          {
                            "type": "literal",
                            "value": "aria-rowcount"
                          },
                          {
                            "type": "literal",
                            "value": "aria-rowindex"
                          },
                          {
                            "type": "literal",
                            "value": "aria-rowspan"
                          },
                          {
                            "type": "literal",
                            "value": "aria-selected"
                          },
                          {
                            "type": "literal",
                            "value": "aria-setsize"
                          },
                          {
                            "type": "literal",
                            "value": "aria-sort"
                          },
                          {
                            "type": "literal",
                            "value": "aria-valuemax"
                          },
                          {
                            "type": "literal",
                            "value": "aria-valuemin"
                          },
                          {
                            "type": "literal",
                            "value": "aria-valuenow"
                          },
                          {
                            "type": "literal",
                            "value": "aria-valuetext"
                          },
                          {
                            "type": "literal",
                            "value": "cite"
                          },
                          {
                            "type": "literal",
                            "value": "data"
                          },
                          {
                            "type": "literal",
                            "value": "form"
                          },
                          {
                            "type": "literal",
                            "value": "label"
                          },
                          {
                            "type": "literal",
                            "value": "slot"
                          },
                          {
                            "type": "literal",
                            "value": "span"
                          },
                          {
                            "type": "literal",
                            "value": "style"
                          },
                          {
                            "type": "literal",
                            "value": "summary"
                          },
                          {
                            "type": "literal",
                            "value": "title"
                          },
                          {
                            "type": "literal",
                            "value": "list"
                          },
                          {
                            "type": "literal",
                            "value": "step"
                          },
                          {
                            "type": "literal",
                            "value": "horizontal"
                          },
                          {
                            "type": "literal",
                            "value": "vertical"
                          },
                          {
                            "type": "literal",
                            "value": "className"
                          },
                          {
                            "type": "literal",
                            "value": "action"
                          },
                          {
                            "type": "literal",
                            "value": "color"
                          },
                          {
                            "type": "literal",
                            "value": "hidden"
                          },
                          {
                            "type": "literal",
                            "value": "role"
                          },
                          {
                            "type": "literal",
                            "value": "shadow"
                          },
                          {
                            "type": "literal",
                            "value": "tabIndex"
                          },
                          {
                            "type": "literal",
                            "value": "width"
                          },
                          {
                            "type": "literal",
                            "value": "checked"
                          },
                          {
                            "type": "literal",
                            "value": "disabled"
                          },
                          {
                            "type": "literal",
                            "value": "name"
                          },
                          {
                            "type": "literal",
                            "value": "value"
                          },
                          {
                            "type": "literal",
                            "value": "onChange"
                          },
                          {
                            "type": "literal",
                            "value": "onFocus"
                          },
                          {
                            "type": "literal",
                            "value": "onBlur"
                          },
                          {
                            "type": "literal",
                            "value": "selected"
                          },
                          {
                            "type": "literal",
                            "value": "onClick"
                          },
                          {
                            "type": "literal",
                            "value": "wrap"
                          },
                          {
                            "type": "literal",
                            "value": "height"
                          },
                          {
                            "type": "literal",
                            "value": "hint"
                          },
                          {
                            "type": "literal",
                            "value": "focusable"
                          },
                          {
                            "type": "literal",
                            "value": "onScrolledToBottom"
                          },
                          {
                            "type": "literal",
                            "value": "accept"
                          },
                          {
                            "type": "literal",
                            "value": "acceptCharset"
                          },
                          {
                            "type": "literal",
                            "value": "allowFullScreen"
                          },
                          {
                            "type": "literal",
                            "value": "allowTransparency"
                          },
                          {
                            "type": "literal",
                            "value": "alt"
                          },
                          {
                            "type": "literal",
                            "value": "async"
                          },
                          {
                            "type": "literal",
                            "value": "autoComplete"
                          },
                          {
                            "type": "literal",
                            "value": "autoFocus"
                          },
                          {
                            "type": "literal",
                            "value": "autoPlay"
                          },
                          {
                            "type": "literal",
                            "value": "capture"
                          },
                          {
                            "type": "literal",
                            "value": "cellPadding"
                          },
                          {
                            "type": "literal",
                            "value": "cellSpacing"
                          },
                          {
                            "type": "literal",
                            "value": "charSet"
                          },
                          {
                            "type": "literal",
                            "value": "challenge"
                          },
                          {
                            "type": "literal",
                            "value": "classID"
                          },
                          {
                            "type": "literal",
                            "value": "cols"
                          },
                          {
                            "type": "literal",
                            "value": "colSpan"
                          },
                          {
                            "type": "literal",
                            "value": "content"
                          },
                          {
                            "type": "literal",
                            "value": "controls"
                          },
                          {
                            "type": "literal",
                            "value": "coords"
                          },
                          {
                            "type": "literal",
                            "value": "crossOrigin"
                          },
                          {
                            "type": "literal",
                            "value": "dateTime"
                          },
                          {
                            "type": "literal",
                            "value": "default"
                          },
                          {
                            "type": "literal",
                            "value": "defer"
                          },
                          {
                            "type": "literal",
                            "value": "download"
                          },
                          {
                            "type": "literal",
                            "value": "encType"
                          },
                          {
                            "type": "literal",
                            "value": "formAction"
                          },
                          {
                            "type": "literal",
                            "value": "formEncType"
                          },
                          {
                            "type": "literal",
                            "value": "formMethod"
                          },
                          {
                            "type": "literal",
                            "value": "formNoValidate"
                          },
                          {
                            "type": "literal",
                            "value": "formTarget"
                          },
                          {
                            "type": "literal",
                            "value": "frameBorder"
                          },
                          {
                            "type": "literal",
                            "value": "headers"
                          },
                          {
                            "type": "literal",
                            "value": "high"
                          },
                          {
                            "type": "literal",
                            "value": "href"
                          },
                          {
                            "type": "literal",
                            "value": "hrefLang"
                          },
                          {
                            "type": "literal",
                            "value": "htmlFor"
                          },
                          {
                            "type": "literal",
                            "value": "httpEquiv"
                          },
                          {
                            "type": "literal",
                            "value": "integrity"
                          },
                          {
                            "type": "literal",
                            "value": "keyParams"
                          },
                          {
                            "type": "literal",
                            "value": "keyType"
                          },
                          {
                            "type": "literal",
                            "value": "kind"
                          },
                          {
                            "type": "literal",
                            "value": "loop"
                          },
                          {
                            "type": "literal",
                            "value": "low"
                          },
                          {
                            "type": "literal",
                            "value": "manifest"
                          },
                          {
                            "type": "literal",
                            "value": "marginHeight"
                          },
                          {
                            "type": "literal",
                            "value": "marginWidth"
                          },
                          {
                            "type": "literal",
                            "value": "max"
                          },
                          {
                            "type": "literal",
                            "value": "maxLength"
                          },
                          {
                            "type": "literal",
                            "value": "media"
                          },
                          {
                            "type": "literal",
                            "value": "mediaGroup"
                          },
                          {
                            "type": "literal",
                            "value": "method"
                          },
                          {
                            "type": "literal",
                            "value": "min"
                          },
                          {
                            "type": "literal",
                            "value": "minLength"
                          },
                          {
                            "type": "literal",
                            "value": "multiple"
                          },
                          {
                            "type": "literal",
                            "value": "muted"
                          },
                          {
                            "type": "literal",
                            "value": "nonce"
                          },
                          {
                            "type": "literal",
                            "value": "noValidate"
                          },
                          {
                            "type": "literal",
                            "value": "open"
                          },
                          {
                            "type": "literal",
                            "value": "optimum"
                          },
                          {
                            "type": "literal",
                            "value": "pattern"
                          },
                          {
                            "type": "literal",
                            "value": "playsInline"
                          },
                          {
                            "type": "literal",
                            "value": "poster"
                          },
                          {
                            "type": "literal",
                            "value": "preload"
                          },
                          {
                            "type": "literal",
                            "value": "readOnly"
                          },
                          {
                            "type": "literal",
                            "value": "rel"
                          },
                          {
                            "type": "literal",
                            "value": "required"
                          },
                          {
                            "type": "literal",
                            "value": "reversed"
                          },
                          {
                            "type": "literal",
                            "value": "rows"
                          },
                          {
                            "type": "literal",
                            "value": "rowSpan"
                          },
                          {
                            "type": "literal",
                            "value": "sandbox"
                          },
                          {
                            "type": "literal",
                            "value": "scope"
                          },
                          {
                            "type": "literal",
                            "value": "scoped"
                          },
                          {
                            "type": "literal",
                            "value": "scrolling"
                          },
                          {
                            "type": "literal",
                            "value": "seamless"
                          },
                          {
                            "type": "literal",
                            "value": "shape"
                          },
                          {
                            "type": "literal",
                            "value": "size"
                          },
                          {
                            "type": "literal",
                            "value": "sizes"
                          },
                          {
                            "type": "literal",
                            "value": "src"
                          },
                          {
                            "type": "literal",
                            "value": "srcDoc"
                          },
                          {
                            "type": "literal",
                            "value": "srcLang"
                          },
                          {
                            "type": "literal",
                            "value": "srcSet"
                          },
                          {
                            "type": "literal",
                            "value": "target"
                          },
                          {
                            "type": "literal",
                            "value": "type"
                          },
                          {
                            "type": "literal",
                            "value": "useMap"
                          },
                          {
                            "type": "literal",
                            "value": "wmode"
                          },
                          {
                            "type": "literal",
                            "value": "defaultChecked"
                          },
                          {
                            "type": "literal",
                            "value": "defaultValue"
                          },
                          {
                            "type": "literal",
                            "value": "suppressContentEditableWarning"
                          },
                          {
                            "type": "literal",
                            "value": "suppressHydrationWarning"
                          },
                          {
                            "type": "literal",
                            "value": "accessKey"
                          },
                          {
                            "type": "literal",
                            "value": "contentEditable"
                          },
                          {
                            "type": "literal",
                            "value": "contextMenu"
                          },
                          {
                            "type": "literal",
                            "value": "dir"
                          },
                          {
                            "type": "literal",
                            "value": "draggable"
                          },
                          {
                            "type": "literal",
                            "value": "lang"
                          },
                          {
                            "type": "literal",
                            "value": "spellCheck"
                          },
                          {
                            "type": "literal",
                            "value": "translate"
                          },
                          {
                            "type": "literal",
                            "value": "radioGroup"
                          },
                          {
                            "type": "literal",
                            "value": "about"
                          },
                          {
                            "type": "literal",
                            "value": "datatype"
                          },
                          {
                            "type": "literal",
                            "value": "inlist"
                          },
                          {
                            "type": "literal",
                            "value": "prefix"
                          },
                          {
                            "type": "literal",
                            "value": "property"
                          },
                          {
                            "type": "literal",
                            "value": "resource"
                          },
                          {
                            "type": "literal",
                            "value": "typeof"
                          },
                          {
                            "type": "literal",
                            "value": "vocab"
                          },
                          {
                            "type": "literal",
                            "value": "autoCapitalize"
                          },
                          {
                            "type": "literal",
                            "value": "autoCorrect"
                          },
                          {
                            "type": "literal",
                            "value": "autoSave"
                          },
                          {
                            "type": "literal",
                            "value": "itemProp"
                          },
                          {
                            "type": "literal",
                            "value": "itemScope"
                          },
                          {
                            "type": "literal",
                            "value": "itemType"
                          },
                          {
                            "type": "literal",
                            "value": "itemID"
                          },
                          {
                            "type": "literal",
                            "value": "itemRef"
                          },
                          {
                            "type": "literal",
                            "value": "results"
                          },
                          {
                            "type": "literal",
                            "value": "security"
                          },
                          {
                            "type": "literal",
                            "value": "unselectable"
                          },
                          {
                            "type": "literal",
                            "value": "inputMode"
                          },
                          {
                            "type": "literal",
                            "value": "is"
                          },
                          {
                            "type": "literal",
                            "value": "dangerouslySetInnerHTML"
                          },
                          {
                            "type": "literal",
                            "value": "onCopy"
                          },
                          {
                            "type": "literal",
                            "value": "onCopyCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCut"
                          },
                          {
                            "type": "literal",
                            "value": "onCutCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPaste"
                          },
                          {
                            "type": "literal",
                            "value": "onPasteCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionEnd"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionEndCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionStart"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionStartCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionUpdate"
                          },
                          {
                            "type": "literal",
                            "value": "onCompositionUpdateCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onFocusCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onBlurCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onChangeCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onBeforeInput"
                          },
                          {
                            "type": "literal",
                            "value": "onBeforeInputCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onInput"
                          },
                          {
                            "type": "literal",
                            "value": "onInputCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onReset"
                          },
                          {
                            "type": "literal",
                            "value": "onResetCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onSubmit"
                          },
                          {
                            "type": "literal",
                            "value": "onSubmitCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onInvalid"
                          },
                          {
                            "type": "literal",
                            "value": "onInvalidCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLoad"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onError"
                          },
                          {
                            "type": "literal",
                            "value": "onErrorCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyDown"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyDownCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyPress"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyPressCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyUp"
                          },
                          {
                            "type": "literal",
                            "value": "onKeyUpCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onAbort"
                          },
                          {
                            "type": "literal",
                            "value": "onAbortCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCanPlay"
                          },
                          {
                            "type": "literal",
                            "value": "onCanPlayCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onCanPlayThrough"
                          },
                          {
                            "type": "literal",
                            "value": "onCanPlayThroughCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDurationChange"
                          },
                          {
                            "type": "literal",
                            "value": "onDurationChangeCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onEmptied"
                          },
                          {
                            "type": "literal",
                            "value": "onEmptiedCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onEncrypted"
                          },
                          {
                            "type": "literal",
                            "value": "onEncryptedCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onEnded"
                          },
                          {
                            "type": "literal",
                            "value": "onEndedCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadedData"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadedDataCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadedMetadata"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadedMetadataCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadStart"
                          },
                          {
                            "type": "literal",
                            "value": "onLoadStartCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPause"
                          },
                          {
                            "type": "literal",
                            "value": "onPauseCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPlay"
                          },
                          {
                            "type": "literal",
                            "value": "onPlayCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPlaying"
                          },
                          {
                            "type": "literal",
                            "value": "onPlayingCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onProgress"
                          },
                          {
                            "type": "literal",
                            "value": "onProgressCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onRateChange"
                          },
                          {
                            "type": "literal",
                            "value": "onRateChangeCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onSeeked"
                          },
                          {
                            "type": "literal",
                            "value": "onSeekedCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onSeeking"
                          },
                          {
                            "type": "literal",
                            "value": "onSeekingCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onStalled"
                          },
                          {
                            "type": "literal",
                            "value": "onStalledCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onSuspend"
                          },
                          {
                            "type": "literal",
                            "value": "onSuspendCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTimeUpdate"
                          },
                          {
                            "type": "literal",
                            "value": "onTimeUpdateCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onVolumeChange"
                          },
                          {
                            "type": "literal",
                            "value": "onVolumeChangeCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onWaiting"
                          },
                          {
                            "type": "literal",
                            "value": "onWaitingCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onAuxClick"
                          },
                          {
                            "type": "literal",
                            "value": "onAuxClickCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onClickCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onContextMenu"
                          },
                          {
                            "type": "literal",
                            "value": "onContextMenuCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDoubleClick"
                          },
                          {
                            "type": "literal",
                            "value": "onDoubleClickCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDrag"
                          },
                          {
                            "type": "literal",
                            "value": "onDragCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragEnd"
                          },
                          {
                            "type": "literal",
                            "value": "onDragEndCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragEnter"
                          },
                          {
                            "type": "literal",
                            "value": "onDragEnterCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragExit"
                          },
                          {
                            "type": "literal",
                            "value": "onDragExitCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragLeave"
                          },
                          {
                            "type": "literal",
                            "value": "onDragLeaveCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragOver"
                          },
                          {
                            "type": "literal",
                            "value": "onDragOverCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDragStart"
                          },
                          {
                            "type": "literal",
                            "value": "onDragStartCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onDrop"
                          },
                          {
                            "type": "literal",
                            "value": "onDropCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseDown"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseDownCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseEnter"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseLeave"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseMove"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseMoveCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseOut"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseOutCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseOver"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseOverCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseUp"
                          },
                          {
                            "type": "literal",
                            "value": "onMouseUpCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onSelect"
                          },
                          {
                            "type": "literal",
                            "value": "onSelectCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchCancel"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchCancelCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchEnd"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchEndCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchMove"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchMoveCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchStart"
                          },
                          {
                            "type": "literal",
                            "value": "onTouchStartCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerDown"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerDownCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerMove"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerMoveCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerUp"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerUpCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerCancel"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerCancelCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerEnter"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerEnterCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerLeave"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerLeaveCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerOver"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerOverCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerOut"
                          },
                          {
                            "type": "literal",
                            "value": "onPointerOutCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onGotPointerCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onGotPointerCaptureCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLostPointerCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onLostPointerCaptureCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onScroll"
                          },
                          {
                            "type": "literal",
                            "value": "onScrollCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onWheel"
                          },
                          {
                            "type": "literal",
                            "value": "onWheelCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationStart"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationStartCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationEnd"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationEndCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationIteration"
                          },
                          {
                            "type": "literal",
                            "value": "onAnimationIterationCapture"
                          },
                          {
                            "type": "literal",
                            "value": "onTransitionEnd"
                          },
                          {
                            "type": "literal",
                            "value": "onTransitionEndCapture"
                          },
                          {
                            "type": "literal",
                            "value": "key"
                          }
                        ]
                      }
                    ],
                    "name": "Pick",
                    "qualifiedName": "Pick",
                    "package": "typescript"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 3096,
                        "name": "ScrollableRef"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3105,
      "name": "Select",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Select/Select.tsx",
          "line": 80,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Select/Select.tsx#L80"
        }
      ],
      "signatures": [
        {
          "id": 3106,
          "name": "Select",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3107,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3108,
                "name": "SelectProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3134,
      "name": "SelectAllActions",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SelectAllActions/SelectAllActions.tsx",
          "line": 33,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SelectAllActions/SelectAllActions.tsx#L33"
        }
      ],
      "signatures": [
        {
          "id": 3135,
          "name": "SelectAllActions",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 3136,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "id": 3137,
                    "name": "SelectAllActionsProps"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3147,
      "name": "SettingToggle",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SettingToggle/SettingToggle.tsx",
          "line": 20,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SettingToggle/SettingToggle.tsx#L20"
        }
      ],
      "signatures": [
        {
          "id": 3148,
          "name": "SettingToggle",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3149,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3150,
                "name": "SettingToggleProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3168,
      "name": "Sheet",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Sheet/Sheet.tsx",
          "line": 49,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sheet/Sheet.tsx#L49"
        }
      ],
      "signatures": [
        {
          "id": 3169,
          "name": "Sheet",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use Modal instead or avoid modal patterns all together."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3170,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3171,
                "name": "SheetProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3182,
      "name": "SkeletonBodyText",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx",
          "line": 13,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonBodyText/SkeletonBodyText.tsx#L13"
        }
      ],
      "signatures": [
        {
          "id": 3183,
          "name": "SkeletonBodyText",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3184,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3185,
                "name": "SkeletonBodyTextProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3187,
      "name": "SkeletonDisplayText",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonDisplayText/SkeletonDisplayText.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 3188,
          "name": "SkeletonDisplayText",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3189,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3190,
                "name": "SkeletonDisplayTextProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3192,
      "name": "SkeletonPage",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonPage/SkeletonPage.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonPage/SkeletonPage.tsx#L27"
        }
      ],
      "signatures": [
        {
          "id": 3193,
          "name": "SkeletonPage",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3194,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3195,
                "name": "SkeletonPageProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3203,
      "name": "SkeletonTabs",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx",
          "line": 12,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonTabs/SkeletonTabs.tsx#L12"
        }
      ],
      "signatures": [
        {
          "id": 3204,
          "name": "SkeletonTabs",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3205,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3206,
                "name": "SkeletonTabsProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3208,
      "name": "SkeletonThumbnail",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/SkeletonThumbnail/SkeletonThumbnail.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 3209,
          "name": "SkeletonThumbnail",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3210,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3211,
                "name": "SkeletonThumbnailProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3213,
      "name": "Spinner",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Spinner/Spinner.tsx",
          "line": 23,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Spinner/Spinner.tsx#L23"
        }
      ],
      "signatures": [
        {
          "id": 3214,
          "name": "Spinner",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3215,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3216,
                "name": "SpinnerProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3220,
      "name": "Stack",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Stack/Stack.tsx",
          "line": 44,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Stack/Stack.tsx#L44"
        }
      ],
      "signatures": [
        {
          "id": 3221,
          "name": "Stack",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use LegacyStack or AlphaStack instead."
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3222,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3223,
                "name": "StackProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3230,
      "name": "Sticky",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Sticky/Sticky.tsx",
          "line": 141,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Sticky/Sticky.tsx#L141"
        }
      ],
      "signatures": [
        {
          "id": 3231,
          "name": "Sticky",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3232,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3233,
                "name": "StickyProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3248,
      "name": "Subheading",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Subheading/Subheading.tsx",
          "line": 23,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Subheading/Subheading.tsx#L23"
        }
      ],
      "signatures": [
        {
          "id": 3249,
          "name": "Subheading",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The Subheading component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3250,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3251,
                "name": "SubheadingProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3254,
      "name": "Tabs",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tabs/Tabs.tsx",
          "line": 385,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tabs/Tabs.tsx#L385"
        }
      ],
      "signatures": [
        {
          "id": 3255,
          "name": "Tabs",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3256,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3257,
                "name": "TabsProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3266,
      "name": "Tag",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tag/Tag.tsx",
          "line": 32,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tag/Tag.tsx#L32"
        }
      ],
      "signatures": [
        {
          "id": 3267,
          "name": "Tag",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3268,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3269,
                "name": "TagProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3280,
      "name": "Text",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Text/Text.tsx",
          "line": 62,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Text/Text.tsx#L62"
        }
      ],
      "signatures": [
        {
          "id": 3281,
          "name": "Text",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3282,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3283,
                "name": "TextProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3295,
      "name": "TextContainer",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextContainer/TextContainer.tsx",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextContainer/TextContainer.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 3296,
          "name": "TextContainer",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use AlphaStack instead"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3297,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3298,
                "name": "TextContainerProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3301,
      "name": "TextField",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextField/TextField.tsx",
          "line": 180,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextField/TextField.tsx#L180"
        }
      ],
      "signatures": [
        {
          "id": 3302,
          "name": "TextField",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3303,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3304,
                "name": "TextFieldProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3305,
      "name": "TextStyle",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TextStyle/TextStyle.tsx",
          "line": 38,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TextStyle/TextStyle.tsx#L38"
        }
      ],
      "signatures": [
        {
          "id": 3306,
          "name": "TextStyle",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The TextStyle component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3307,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3308,
                "name": "TextStyleProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3311,
      "name": "Thumbnail",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Thumbnail/Thumbnail.tsx",
          "line": 25,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Thumbnail/Thumbnail.tsx#L25"
        }
      ],
      "signatures": [
        {
          "id": 3312,
          "name": "Thumbnail",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3313,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3314,
                "name": "ThumbnailProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3319,
      "name": "Toast",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Toast/Toast.tsx",
          "line": 13,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Toast/Toast.tsx#L13"
        }
      ],
      "signatures": [
        {
          "id": 3320,
          "name": "Toast",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 3321,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3322,
                "name": "ToastProps"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3329,
      "name": "Tooltip",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Tooltip/Tooltip.tsx",
          "line": 73,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Tooltip/Tooltip.tsx#L73"
        }
      ],
      "signatures": [
        {
          "id": 3330,
          "name": "Tooltip",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3331,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3332,
                "name": "TooltipProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3351,
      "name": "TopBar",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 49,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L49"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 156,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L156"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 157,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L157"
        },
        {
          "fileName": "polaris-react/src/components/TopBar/TopBar.tsx",
          "line": 158,
          "character": 0,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TopBar/TopBar.tsx#L158"
        }
      ],
      "signatures": [
        {
          "id": 3352,
          "name": "TopBar",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3353,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3368,
                "name": "TopBarProps"
              }
            },
            {
              "id": 3354,
              "name": "context",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3383,
      "name": "TrapFocus",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/TrapFocus/TrapFocus.tsx",
          "line": 23,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/TrapFocus/TrapFocus.tsx#L23"
        }
      ],
      "signatures": [
        {
          "id": 3384,
          "name": "TrapFocus",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3385,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3386,
                "name": "TrapFocusProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3389,
      "name": "Truncate",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Truncate/Truncate.tsx",
          "line": 9,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Truncate/Truncate.tsx#L9"
        }
      ],
      "signatures": [
        {
          "id": 3390,
          "name": "Truncate",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3391,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3392,
                "name": "TruncateProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 826,
      "name": "UnstableBulkActions",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/BulkActions/BulkActions.tsx",
          "line": 418,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/BulkActions/BulkActions.tsx#L418"
        }
      ],
      "signatures": [
        {
          "id": 827,
          "name": "UnstableBulkActions",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 828,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 829,
                "name": "BulkActionsProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3394,
      "name": "UnstyledButton",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/UnstyledButton/UnstyledButton.tsx",
          "line": 16,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledButton/UnstyledButton.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 3395,
          "name": "UnstyledButton",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3396,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3402,
                "name": "UnstyledButtonProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3442,
      "name": "UnstyledLink",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/UnstyledLink/UnstyledLink.tsx",
          "line": 16,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledLink/UnstyledLink.tsx#L16"
        }
      ],
      "signatures": [
        {
          "id": 3443,
          "name": "UnstyledLink",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "**NOTE**: Exotic components are not callable."
              }
            ]
          },
          "parameters": [
            {
              "id": 3444,
              "name": "props",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 3445,
                        "name": "UnstyledLinkProps"
                      },
                      {
                        "type": "typeOperator",
                        "operator": "keyof",
                        "target": {
                          "type": "reference",
                          "id": 3445,
                          "name": "UnstyledLinkProps"
                        }
                      }
                    ],
                    "name": "Pick",
                    "qualifiedName": "Pick",
                    "package": "typescript"
                  },
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "RefAttributes",
                    "qualifiedName": "React.RefAttributes",
                    "package": "@types/react"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": null
              },
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "JSXElementConstructor",
                        "qualifiedName": "React.JSXElementConstructor",
                        "package": "@types/react"
                      }
                    ]
                  }
                ],
                "name": "ReactElement",
                "qualifiedName": "React.ReactElement",
                "package": "@types/react"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3811,
      "name": "VideoThumbnail",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx",
          "line": 45,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/VideoThumbnail/VideoThumbnail.tsx#L45"
        }
      ],
      "signatures": [
        {
          "id": 3812,
          "name": "VideoThumbnail",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3813,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "VideoThumbnailProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3814,
      "name": "VisuallyHidden",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/VisuallyHidden/VisuallyHidden.tsx#L17"
        }
      ],
      "signatures": [
        {
          "id": 3815,
          "name": "VisuallyHidden",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "The VisuallyHidden component will be removed in the next\nmajor version. Use the Text component instead. See the\nPolaris component guide on how to use Text.\n\nhttps://polaris.shopify.com/components/text"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3816,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3817,
                "name": "VisuallyHiddenProps"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 845,
      "name": "buttonFrom",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Button/utils.tsx",
          "line": 27,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/utils.tsx#L27"
        }
      ],
      "signatures": [
        {
          "id": 846,
          "name": "buttonFrom",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 847,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 268,
                "name": "ComplexAction"
              }
            },
            {
              "id": 848,
              "name": "overrides",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 857,
                    "name": "ButtonProps"
                  }
                ],
                "name": "Partial",
                "qualifiedName": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 849,
              "name": "key",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 850,
      "name": "buttonsFrom",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Button/utils.tsx",
          "line": 7,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/utils.tsx#L7"
        },
        {
          "fileName": "polaris-react/src/components/Button/utils.tsx",
          "line": 11,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/utils.tsx#L11"
        },
        {
          "fileName": "polaris-react/src/components/Button/utils.tsx",
          "line": 15,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Button/utils.tsx#L15"
        }
      ],
      "signatures": [
        {
          "id": 851,
          "name": "buttonsFrom",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 852,
              "name": "action",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 268,
                "name": "ComplexAction"
              }
            },
            {
              "id": 853,
              "name": "overrides",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 857,
                    "name": "ButtonProps"
                  }
                ],
                "name": "Partial",
                "qualifiedName": "Partial",
                "package": "typescript"
              }
            }
          ],
          "type": {
            "type": "reference",
            "typeArguments": [
              {
                "type": "reference",
                "id": 857,
                "name": "ButtonProps"
              }
            ],
            "name": "React.ReactElement",
            "qualifiedName": "React.ReactElement",
            "package": "@types/react"
          }
        },
        {
          "id": 854,
          "name": "buttonsFrom",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 855,
              "name": "actions",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 268,
                  "name": "ComplexAction"
                }
              }
            },
            {
              "id": 856,
              "name": "overrides",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 857,
                    "name": "ButtonProps"
                  }
                ],
                "name": "Partial",
                "qualifiedName": "Partial",
                "package": "typescript"
              }
            }
          ],
          "type": {
            "type": "array",
            "elementType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "id": 857,
                  "name": "ButtonProps"
                }
              ],
              "name": "React.ReactElement",
              "qualifiedName": "React.ReactElement",
              "package": "@types/react"
            }
          }
        }
      ]
    },
    {
      "id": 2092,
      "name": "errorTextID",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/InlineError/InlineError.tsx",
          "line": 31,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/InlineError/InlineError.tsx#L31"
        }
      ],
      "signatures": [
        {
          "id": 2093,
          "name": "errorTextID",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2094,
              "name": "id",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3875,
      "name": "hexToRgb",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 202,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L202"
        }
      ],
      "signatures": [
        {
          "id": 3876,
          "name": "hexToRgb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3877,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3878,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 3881,
                  "name": "blue",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/color-transformers.ts",
                      "line": 210,
                      "character": 24,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L210"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 3880,
                  "name": "green",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/color-transformers.ts",
                      "line": 210,
                      "character": 17,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L210"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 3879,
                  "name": "red",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/color-transformers.ts",
                      "line": 210,
                      "character": 12,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L210"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [3881, 3880, 3879]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/utilities/color-transformers.ts",
                  "line": 210,
                  "character": 11,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L210"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 3861,
      "name": "hsbToHex",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 36,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L36"
        }
      ],
      "signatures": [
        {
          "id": 3862,
          "name": "hsbToHex",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3863,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3823,
                "name": "HSBColor"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3856,
      "name": "hsbToRgb",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 88,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L88"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 89,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L89"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 90,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L90"
        }
      ],
      "signatures": [
        {
          "id": 3857,
          "name": "hsbToRgb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3858,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3823,
                "name": "HSBColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3819,
            "name": "RGBColor"
          }
        },
        {
          "id": 3859,
          "name": "hsbToRgb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3860,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3832,
                "name": "HSBAColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3827,
            "name": "RGBAColor"
          }
        }
      ]
    },
    {
      "id": 3864,
      "name": "hslToRgb",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 110,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L110"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 111,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L111"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 112,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L112"
        }
      ],
      "signatures": [
        {
          "id": 3865,
          "name": "hslToRgb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3866,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3837,
                "name": "HSLColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3819,
            "name": "RGBColor"
          }
        },
        {
          "id": 3867,
          "name": "hslToRgb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3868,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3841,
                "name": "HSLAColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3827,
            "name": "RGBAColor"
          }
        }
      ]
    },
    {
      "id": 2332,
      "name": "isNavigationItemActive",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Navigation/components/Item/Item.tsx",
          "line": 481,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Navigation/components/Item/Item.tsx#L481"
        }
      ],
      "signatures": [
        {
          "id": 2333,
          "name": "isNavigationItemActive",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2334,
              "name": "navigationItem",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 2344,
                "name": "ItemProps"
              }
            },
            {
              "id": 2335,
              "name": "currentPath",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2124,
      "name": "labelID",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/Label/Label.tsx",
          "line": 18,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/Label/Label.tsx#L18"
        }
      ],
      "signatures": [
        {
          "id": 2125,
          "name": "labelID",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 2126,
              "name": "id",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3869,
      "name": "rgbString",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 13,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L13"
        }
      ],
      "signatures": [
        {
          "id": 3870,
          "name": "rgbString",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3871,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 3819,
                    "name": "RGBColor"
                  },
                  {
                    "type": "reference",
                    "id": 3827,
                    "name": "RGBAColor"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3847,
      "name": "rgbToHex",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 25,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L25"
        }
      ],
      "signatures": [
        {
          "id": 3848,
          "name": "rgbToHex",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3849,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3819,
                "name": "RGBColor"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3850,
      "name": "rgbToHsb",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 181,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L181"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 182,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L182"
        }
      ],
      "signatures": [
        {
          "id": 3851,
          "name": "rgbToHsb",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3852,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3819,
                "name": "RGBColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3823,
            "name": "HSBColor"
          }
        }
      ]
    },
    {
      "id": 3853,
      "name": "rgbToHsl",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 187,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L187"
        },
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 188,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L188"
        }
      ],
      "signatures": [
        {
          "id": 3854,
          "name": "rgbToHsl",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3855,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3819,
                "name": "RGBColor"
              }
            }
          ],
          "type": {
            "type": "reference",
            "id": 3841,
            "name": "HSLAColor"
          }
        }
      ]
    },
    {
      "id": 3872,
      "name": "rgbaString",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/color-transformers.ts",
          "line": 23,
          "character": 13,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/color-transformers.ts#L23"
        }
      ],
      "signatures": [
        {
          "id": 3873,
          "name": "rgbaString",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3874,
              "name": "color",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "id": 3819,
                    "name": "RGBColor"
                  },
                  {
                    "type": "reference",
                    "id": 3827,
                    "name": "RGBAColor"
                  }
                ]
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        }
      ]
    },
    {
      "id": 3397,
      "name": "unstyledButtonFrom",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/components/UnstyledButton/utils.tsx",
          "line": 7,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/components/UnstyledButton/utils.tsx#L7"
        }
      ],
      "signatures": [
        {
          "id": 3398,
          "name": "unstyledButtonFrom",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "parameters": [
            {
              "id": 3399,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 268,
                "name": "ComplexAction"
              }
            },
            {
              "id": 3400,
              "name": "overrides",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "id": 3402,
                    "name": "UnstyledButtonProps"
                  }
                ],
                "name": "Partial",
                "qualifiedName": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 3401,
              "name": "key",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "Element",
            "qualifiedName": "global.JSX.Element",
            "package": "@types/react"
          }
        }
      ]
    },
    {
      "id": 3940,
      "name": "useBreakpoints",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/breakpoints.ts",
          "line": 118,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/breakpoints.ts#L118"
        }
      ],
      "signatures": [
        {
          "id": 3941,
          "name": "useBreakpoints",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Retrieves media query matches for each directional Polaris "
              },
              {
                "kind": "code",
                "text": "`breakpoints`"
              },
              {
                "kind": "text",
                "text": " alias."
              }
            ],
            "blockTags": [
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "code",
                    "text": "```ts\nconst {smUp} = useBreakpoints();\nreturn smUp && 'Hello world';\n```"
                  }
                ]
              },
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "text",
                    "text": "const {mdUp} = useBreakpoints({defaults: {mdUp: true}});\nmdUp //=> "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " during SSR"
                  }
                ]
              },
              {
                "tag": "@example",
                "content": [
                  {
                    "kind": "text",
                    "text": "const breakpoints = useBreakpoints({defaults: true});\nbreakpoints //=> All values will be "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " during SSR"
                  }
                ]
              }
            ]
          },
          "parameters": [
            {
              "id": 3942,
              "name": "options",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "name": "UseBreakpointsOptions"
              }
            }
          ],
          "type": {
            "type": "reference",
            "name": "BreakpointsMatches"
          }
        }
      ]
    },
    {
      "id": 3943,
      "name": "useEphemeralPresenceManager",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts",
          "line": 17,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts#L17"
        }
      ],
      "signatures": [
        {
          "id": 3944,
          "name": "useEphemeralPresenceManager",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3945,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 3949,
                  "name": "presenceCounter",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts",
                      "line": 20,
                      "character": 24,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts#L20"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3950,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 3951,
                          "name": "tooltip",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [3951]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/context.tsx",
                          "line": 9,
                          "character": 19,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/context.tsx#L9"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3946,
                  "name": "presenceList",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts",
                      "line": 20,
                      "character": 10,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts#L20"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3947,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "children": [
                        {
                          "id": 3948,
                          "name": "tooltip",
                          "kind": 1024,
                          "kindString": "Property",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [3948]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/context.tsx",
                          "line": 6,
                          "character": 16,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/context.tsx#L6"
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [3949, 3946]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts",
                  "line": 20,
                  "character": 9,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/ephemeral-presence-manager/hooks.ts#L20"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 3884,
      "name": "useEventListener",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/use-event-listener.ts",
          "line": 48,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-event-listener.ts#L48"
        }
      ],
      "signatures": [
        {
          "id": 3885,
          "name": "useEventListener",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "React hook encapsulating the boilerplate logic for adding and removing event listeners."
              }
            ]
          },
          "typeParameter": [
            {
              "id": 3886,
              "name": "TargetEventName",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "intrinsic",
                    "name": "symbol"
                  }
                ]
              }
            },
            {
              "id": 3887,
              "name": "TargetEvent",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {}
            },
            {
              "id": 3888,
              "name": "Target",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "name": "UseEventListenerTarget"
              },
              "default": {
                "type": "reference",
                "name": "Window",
                "qualifiedName": "Window",
                "package": "typescript"
              }
            }
          ],
          "parameters": [
            {
              "id": 3889,
              "name": "eventName",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reference",
                "id": 3886,
                "name": "TargetEventName"
              }
            },
            {
              "id": 3890,
              "name": "handler",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 3891,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-event-listener.ts",
                      "line": 54,
                      "character": 11,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-event-listener.ts#L54"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 3892,
                      "name": "__type",
                      "kind": 4096,
                      "kindString": "Call signature",
                      "flags": {},
                      "parameters": [
                        {
                          "id": 3893,
                          "name": "event",
                          "kind": 32768,
                          "kindString": "Parameter",
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "id": 3887,
                            "name": "TargetEvent"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 3894,
              "name": "target",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "id": 3888,
                    "name": "Target"
                  }
                ]
              }
            },
            {
              "id": 3895,
              "name": "options",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {
                "isOptional": true
              },
              "type": {
                "type": "reference",
                "name": "AddEventListenerOptions",
                "qualifiedName": "AddEventListenerOptions",
                "package": "typescript"
              }
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "void"
          }
        }
      ]
    },
    {
      "id": 3896,
      "name": "useIndexResourceState",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
          "line": 24,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L24"
        }
      ],
      "signatures": [
        {
          "id": 3897,
          "name": "useIndexResourceState",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "typeParameter": [
            {
              "id": 3901,
              "name": "T",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 3898,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 24,
                      "character": 48,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L24"
                    }
                  ],
                  "indexSignature": {
                    "id": 3899,
                    "name": "__index",
                    "kind": 8192,
                    "kindString": "Index signature",
                    "flags": {},
                    "parameters": [
                      {
                        "id": 3900,
                        "name": "key",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                }
              }
            }
          ],
          "parameters": [
            {
              "id": 3902,
              "name": "resources",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "id": 3901,
                  "name": "T"
                }
              }
            },
            {
              "id": 3903,
              "name": "__namedParameters",
              "kind": 32768,
              "kindString": "Parameter",
              "flags": {},
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 3904,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {},
                  "children": [
                    {
                      "id": 3906,
                      "name": "allResourcesSelected",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 33,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L33"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 3908,
                      "name": "resourceFilter",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 35,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L35"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 3909,
                          "name": "__type",
                          "kind": 65536,
                          "kindString": "Type literal",
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                              "line": 35,
                              "character": 21,
                              "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L35"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 3910,
                              "name": "__type",
                              "kind": 4096,
                              "kindString": "Call signature",
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 3911,
                                  "name": "value",
                                  "kind": 32768,
                                  "kindString": "Parameter",
                                  "flags": {},
                                  "type": {
                                    "type": "reference",
                                    "id": 3901,
                                    "name": "T"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 3907,
                      "name": "resourceIDResolver",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 34,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L34"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 3901,
                            "name": "T"
                          }
                        ],
                        "name": "ResourceIDResolver"
                      }
                    },
                    {
                      "id": 3905,
                      "name": "selectedResources",
                      "kind": 1024,
                      "kindString": "Property",
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 32,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L32"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [3906, 3908, 3907, 3905]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 31,
                      "character": 5,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L31"
                    }
                  ]
                }
              },
              "defaultValue": "..."
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 3912,
              "name": "__type",
              "kind": 65536,
              "kindString": "Type literal",
              "flags": {},
              "children": [
                {
                  "id": 3914,
                  "name": "allResourcesSelected",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 146,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L146"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 3921,
                  "name": "clearSelection",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 148,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L148"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3922,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 122,
                          "character": 37,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L122"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3923,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3915,
                  "name": "handleSelectionChange",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 147,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L147"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3916,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 51,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L51"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3917,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 3918,
                              "name": "selectionType",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "name": "SelectionType"
                              }
                            },
                            {
                              "id": 3919,
                              "name": "isSelecting",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 3920,
                              "name": "selection",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  },
                                  {
                                    "type": "reference",
                                    "name": "Range"
                                  }
                                ]
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3924,
                  "name": "removeSelectedResources",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 149,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L149"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 3925,
                      "name": "__type",
                      "kind": 65536,
                      "kindString": "Type literal",
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                          "line": 128,
                          "character": 4,
                          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L128"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 3926,
                          "name": "__type",
                          "kind": 4096,
                          "kindString": "Call signature",
                          "flags": {},
                          "parameters": [
                            {
                              "id": 3927,
                              "name": "removeResources",
                              "kind": 32768,
                              "kindString": "Parameter",
                              "flags": {},
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 3913,
                  "name": "selectedResources",
                  "kind": 1024,
                  "kindString": "Property",
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                      "line": 145,
                      "character": 4,
                      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L145"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [3914, 3921, 3915, 3924, 3913]
                }
              ],
              "sources": [
                {
                  "fileName": "polaris-react/src/utilities/use-index-resource-state.ts",
                  "line": 144,
                  "character": 9,
                  "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/use-index-resource-state.ts#L144"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "id": 3932,
      "name": "useIndexTableContainerScroll",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/index-table/hooks.ts",
          "line": 15,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-table/hooks.ts#L15"
        }
      ],
      "signatures": [
        {
          "id": 3933,
          "name": "useIndexTableContainerScroll",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "reference",
            "name": "ScrollContextType"
          }
        }
      ]
    },
    {
      "id": 3928,
      "name": "useIndexTableRowHovered",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/index-table/hooks.ts",
          "line": 5,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-table/hooks.ts#L5"
        }
      ],
      "signatures": [
        {
          "id": 3929,
          "name": "useIndexTableRowHovered",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3930,
      "name": "useIndexTableRowSelected",
      "kind": 64,
      "kindString": "Function",
      "flags": {},
      "sources": [
        {
          "fileName": "polaris-react/src/utilities/index-table/hooks.ts",
          "line": 10,
          "character": 16,
          "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/utilities/index-table/hooks.ts#L10"
        }
      ],
      "signatures": [
        {
          "id": 3931,
          "name": "useIndexTableRowSelected",
          "kind": 4096,
          "kindString": "Call signature",
          "flags": {},
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          }
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Namespaces",
      "children": [
        428, 573, 624, 937, 1201, 1317, 1580, 1985, 2148, 2164, 2230, 2242,
        2286, 2323, 2675, 3355
      ]
    },
    {
      "title": "Enumerations",
      "children": [2258, 636, 629, 3935, 1, 2458]
    },
    {
      "title": "Classes",
      "children": [332, 1026, 1386, 2504]
    },
    {
      "title": "Interfaces",
      "children": [
        417, 140, 239, 433, 265, 444, 455, 514, 409, 1504, 578, 600, 613, 157,
        662, 650, 104, 162, 668, 727, 823, 910, 857, 168, 920, 931, 969, 950,
        961, 973, 329, 978, 1001, 1017, 1134, 1145, 1206, 268, 325, 1220, 1227,
        1238, 1273, 1298, 187, 174, 1304, 1311, 1322, 1369, 1376, 1466, 1476,
        1510, 1481, 1520, 1527, 1550, 1532, 1557, 1571, 1590, 1585, 3832, 3823,
        3841, 3837, 1599, 1606, 200, 1614, 1988, 2025, 2087, 2095, 2030, 2101,
        2117, 2127, 2135, 2157, 2196, 2177, 2188, 2200, 2205, 152, 2215, 2235,
        2262, 213, 2278, 286, 306, 2291, 2344, 2336, 2384, 226, 2424, 2400,
        2430, 2463, 2487, 2493, 2501, 2595, 2614, 3827, 3819, 2623, 1292, 2644,
        2680, 2725, 3096, 3137, 3131, 3108, 3150, 3171, 3185, 3190, 3195, 3206,
        3211, 3216, 3223, 2369, 3251, 3257, 3298, 3283, 3308, 3314, 3322, 3332,
        3368, 3386, 3392, 829, 3402, 3445, 3817, 2449
      ]
    },
    {
      "title": "Type Aliases",
      "children": [
        440, 640, 661, 1269, 103, 3846, 102, 101, 2107, 2486, 2670, 3130, 1268,
        3233, 1266, 1267, 3269, 3304
      ]
    },
    {
      "title": "Variables",
      "children": [3154, 1555, 1556, 3934, 3882, 3883]
    },
    {
      "title": "Functions",
      "children": [
        414, 425, 441, 452, 460, 569, 597, 610, 621, 647, 665, 724, 820, 842,
        907, 917, 928, 933, 975, 998, 1014, 1142, 1198, 1217, 1224, 1235, 1270,
        1295, 1301, 1308, 1313, 1366, 1373, 1473, 1478, 1517, 1524, 1529, 1547,
        1552, 1568, 1576, 1596, 1603, 1611, 1982, 2022, 2027, 2084, 2089, 2098,
        2104, 2114, 2121, 2132, 2144, 2160, 2202, 2212, 2226, 2239, 2275, 2279,
        2282, 2319, 2381, 2397, 2421, 2427, 2446, 2455, 2490, 2498, 2611, 2620,
        2641, 2667, 2671, 3102, 2722, 3105, 3134, 3147, 3168, 3182, 3187, 3192,
        3203, 3208, 3213, 3220, 3230, 3248, 3254, 3266, 3280, 3295, 3301, 3305,
        3311, 3319, 3329, 3351, 3383, 3389, 826, 3394, 3442, 3811, 3814, 845,
        850, 2092, 3875, 3861, 3856, 3864, 2332, 2124, 3869, 3847, 3850, 3853,
        3872, 3397, 3940, 3943, 3884, 3896, 3932, 3928, 3930
      ]
    }
  ],
  "sources": [
    {
      "fileName": "polaris-react/src/index.ts",
      "line": 1,
      "character": 0,
      "url": "https://github.com/Shopify/polaris/blob/00c0104fb/polaris-react/src/index.ts#L1"
    }
  ]
}
